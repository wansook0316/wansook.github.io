<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>완숙의 에그머니🍳</title>
    <description>Be On My Wave 🌊 | 뚜렷한 목표, 치밀한 계획, 우직한 실천</description>
    <author>wansook0316@gmail.com</author>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 09 May 2021 02:37:09 +0900</pubDate>
    <lastBuildDate>Sun, 09 May 2021 02:37:09 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(17298번): 오큰수</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;골드4&lt;/em&gt;&lt;/strong&gt; : stack 문제이다.&lt;/p&gt;

&lt;h1 id=&quot;풀이&quot;&gt;풀이&lt;/h1&gt;
&lt;p&gt;아, 정말 아쉬운 문제였다. 하지만 배운 것이 있었다. Stack을 기본적으로 사용하는 이유은 어떤 복잡도 문제를 해결하기 위함이다. 이 부분은 뒤에 다시 살펴보도록 하자. 일단 이 문제를 단순하게 순회해서 푼다면 최악의 경우 $O(n^2)$가 걸리기 때문에 n=1,000,000인 상황에서 바로 시간초과가 난다. 그래서 이를 n에 가까운 속도로 풀어야 한다.&lt;/p&gt;

&lt;p&gt;그렇다면 문제를 분석해보자. 오큰수는 현재 값에서 오른쪽에 있는 큰값들 중 가장 첫번째로 나오는 녀석이라고 정의할 수 있다. 그렇기 때문에, 만약 현재값이 4인데, 다음 값이 10이면 그 10이 오큰수가 될 수 있겠다. 여기서 알 수 있는 점은 아, 큰놈이 나오면 그 전값은 이 큰놈이 오큰수가 될 가능성이 있구나. 정도이다. 그럼 이런 상황은 어떨끼?&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4 3 9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이런 상황에서 4의 입장에서 3은 오큰수가 아니다. 하지만 3의 입장에서 9는 오큰수이다. 그렇다면 4의 오큰수는? 9이다. 여기서, 현재 값보다 미래 값이 큰 경우 과거값들 중에 미래 값을 오큰수로 가지는 녀석이 있을 수 있다는 결론을 내릴 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 7  9 7 8  3 1  4 10  3 10
7 9 10 8 10 4 4 10 -1 10 -1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;자 그럼, 어떤 분기에서 이 가정이 틀릴 수 있을까? 일단 미래 값이 현재값과 같다면, 현재 값의 오큰수는 그 미래값이 아니다. 여기서 stack을 사용해보자. stack에는 다음에 나올 미래값에 의해 오큰수가 결정될 후보 위치를 말한다. 좀 어려우니 적어보자.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;11
1 7  9 7 8  3 1  4 10  3 10

index : 0
value : 1
stack 현재 상태
0 

index : 1
value : 7
stack top (position): 0
value : 1
    오큰수 후보 발견, 답안 업데이트
    stack before
    0 
    answer before
    0 0 0 0 0 0 0 0 0 0 0 
    stack after
    
    answer after
    7 0 0 0 0 0 0 0 0 0 0 
stack 현재 상태
1 

index : 2
value : 9
stack top (position): 1
value : 7
    오큰수 후보 발견, 답안 업데이트
    stack before
    1 
    answer before
    7 0 0 0 0 0 0 0 0 0 0 
    stack after
    
    answer after
    7 9 0 0 0 0 0 0 0 0 0 
stack 현재 상태
2 

index : 3
value : 7
stack top (position): 2
value : 9
stack 현재 상태
2 3 

index : 4
value : 8
stack top (position): 3
value : 7
    오큰수 후보 발견, 답안 업데이트
    stack before
    2 3 
    answer before
    7 9 0 0 0 0 0 0 0 0 0 
    stack after
    2 
    answer after
    7 9 0 8 0 0 0 0 0 0 0 
stack 현재 상태
2 4 

index : 5
value : 3
stack top (position): 4
value : 8
stack 현재 상태
2 4 5 

index : 6
value : 1
stack top (position): 5
value : 3
stack 현재 상태
2 4 5 6 

index : 7
value : 4
stack top (position): 6
value : 1
    오큰수 후보 발견, 답안 업데이트
    stack before
    2 4 5 6 
    answer before
    7 9 0 8 0 0 0 0 0 0 0 
    stack after
    2 4 5 
    answer after
    7 9 0 8 0 0 4 0 0 0 0 
    오큰수 후보 발견, 답안 업데이트
    stack before
    2 4 5 
    answer before
    7 9 0 8 0 0 4 0 0 0 0 
    stack after
    2 4 
    answer after
    7 9 0 8 0 4 4 0 0 0 0 
stack 현재 상태
2 4 7 

index : 8
value : 10
stack top (position): 7
value : 4
    오큰수 후보 발견, 답안 업데이트
    stack before
    2 4 7 
    answer before
    7 9 0 8 0 4 4 0 0 0 0 
    stack after
    2 4 
    answer after
    7 9 0 8 0 4 4 10 0 0 0 
    오큰수 후보 발견, 답안 업데이트
    stack before
    2 4 
    answer before
    7 9 0 8 0 4 4 10 0 0 0 
    stack after
    2 
    answer after
    7 9 0 8 10 4 4 10 0 0 0 
    오큰수 후보 발견, 답안 업데이트
    stack before
    2 
    answer before
    7 9 0 8 10 4 4 10 0 0 0 
    stack after
    
    answer after
    7 9 10 8 10 4 4 10 0 0 0 
stack 현재 상태
8 

index : 9
value : 3
stack top (position): 8
value : 10
stack 현재 상태
8 9 

index : 10
value : 10
stack top (position): 9
value : 3
    오큰수 후보 발견, 답안 업데이트
    stack before
    8 9 
    answer before
    7 9 10 8 10 4 4 10 0 0 0 
    stack after
    8 
    answer after
    7 9 10 8 10 4 4 10 0 10 0 
stack 현재 상태
8 10 

7 9 10 8 10 4 4 10 -1 10 -1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;순서대로 따라가다 보면 이해가 될 것이다. 최종적으로 stack에 남는 값은, 맨 마지막 값까지 보았는대도 오큰수를 찾을 수 없었던, 인덱스 들이다. 오큰수를 찾지 못한 녀석들을 마지막으로 -1로 업데이트하면 끝난다.&lt;/p&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  main.cpp&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  algorithm_prac&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Created by 최완식 on 2021/04/05.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// stack에 위치 정보를 넣으면 중복 연산을 줄일 수 있다..!!!!&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,};&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ios_base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync_with_stdio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;index : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;value : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;stack top (position): &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;value : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;    오큰수 후보 발견, 답안 업데이트&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;    stack before&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;    &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;    answer before&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;    &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            
            &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            
            &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;    stack after&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;    &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;    answer after&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;    &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;stack 현재 상태&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/17298&quot; target=&quot;\_blank&quot;&gt;백준(17298번) - 오큰수&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 08 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/05/08/%EB%B0%B1%EC%A4%80-%EC%98%A4%ED%81%B0%EC%88%98.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/05/08/%EB%B0%B1%EC%A4%80-%EC%98%A4%ED%81%B0%EC%88%98.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>stack</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [Face Detection and Tracking with SSD Network] 09: Yolov3 사용</title>
        <description> 프로젝트 중간 점검과 진행 방향을 결정한다. : &lt;h1 id=&quot;c-포기&quot;&gt;C++ 포기&lt;/h1&gt;

&lt;p&gt;MTCNN을 기반으로 C++ 빌드 후 Python에 얹어서 쓰는 방향을 고안했으나, 실질적으로 이를 구현하는데 실패했다.&lt;/p&gt;

&lt;h1 id=&quot;yolo-v3-사용&quot;&gt;Yolo v3 사용&lt;/h1&gt;

&lt;p&gt;GPU 장비를 통해 Yolov3를 통해 실시간 조건을 만족시키기로 했다. 먼저, &lt;a href=&quot;https://github.com/zzh8829/yolov3-tf2&quot;&gt;yolov3-tf2&lt;/a&gt; 를 기반으로 테스트를 수행했다. 수행한 환경은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cuda 11.0&lt;/li&gt;
  &lt;li&gt;cudnn 8.0.5&lt;/li&gt;
  &lt;li&gt;tensorflow 2.4.1&lt;/li&gt;
  &lt;li&gt;opencv 최신 버전&lt;/li&gt;
  &lt;li&gt;python 3.7&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;realtime-구조-변경&quot;&gt;Realtime 구조 변경&lt;/h2&gt;

&lt;p&gt;기존의 Deepsort는 static구조로 작동하기 때문에, 이를 dynamic하게 변경할 필요가 있었다. 이를 기반으로 먼저, 작동하는 yolov3 모델을 기반으로 실시간 tracking이 가능하도록 코드를 수정했다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;829&quot; alt=&quot;스크린샷 2021-05-06 오후 5 58 20&quot; src=&quot;https://user-images.githubusercontent.com/37871541/117270917-a74a7680-ae94-11eb-878d-2a4257995f0e.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;widerface-dataset-training&quot;&gt;Widerface Dataset Training&lt;/h1&gt;

&lt;p&gt;기본적으로 Yolov3는 object detection api 기반으로 훈련한다. 그렇기 때문에, 이를 훈련하기 위해서는 데이터 셋을 이에 맞는 tfrecords 형태로 변환할 필요가 있다. &lt;a href=&quot;https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/using_your_own_dataset.md&quot;&gt;using_your_own_dataset&lt;/a&gt;을 기반으로 widerface dataset을 tfrecords로 변경했다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;widerface 다운로드&lt;/li&gt;
  &lt;li&gt;widerface file structure를 pascalvoc style로 변경&lt;/li&gt;
  &lt;li&gt;pascalvoc를 기반으로 tfrecords 생성&lt;/li&gt;
  &lt;li&gt;Yolov3 training&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;16000번 훈련을 진행했고, 나쁘지 않은 val_loss를 보여주었다.&lt;/p&gt;

&lt;h1 id=&quot;face-tracking&quot;&gt;Face Tracking&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/117247050-92f88080-ae78-11eb-9840-74b3627c57f7.png&quot; alt=&quot;image&quot; /&gt;{. center}&lt;/p&gt;

&lt;p&gt;gpu를 사용했음에도 불구하고, tracking되는 물체가 여러개일 경우, Tracking 알고리즘이 동작하는 속도가 많이 느려진다.(10개 대비 10배 정도 차이나는 것으로 확인됨.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/117247129-b58a9980-ae78-11eb-8a9d-560f6fe02b6d.png&quot; alt=&quot;image&quot; /&gt;{. center}&lt;/p&gt;

&lt;p&gt;기존에 위의 영상에서 MTCNN을 사용한 결과, 대부분의 인물을 탐지하는 모습을 보였었다. 이를 훈련한 Yolov3 모델의 결과로 사용해보니, 위와 같이 모두 잡는 모습을 보였다. 정확도가 올라가 Tracking도 무리 없이 진행하고 있다. 10개 남짓한 Tracking object를 관리할 경우에는 20fps를 달성하고 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/117247430-2df15a80-ae79-11eb-8af5-debfc6b9ab6f.png&quot; alt=&quot;image&quot; /&gt;{. center}
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/117247452-35186880-ae79-11eb-8d3d-f5275b54d17c.png&quot; alt=&quot;image&quot; /&gt;{. center}&lt;/p&gt;

&lt;p&gt;먼저, 이렇게 작은 얼굴에 대해서도 잘 탐지하는 모습을 보인다. 기존 MTCNN으로는 잡지 못했던 결과물이다. 
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/117247461-3b0e4980-ae79-11eb-96cc-eef6dd2123b4.png&quot; alt=&quot;image&quot; /&gt;{. center}&lt;/p&gt;

&lt;p&gt;하지만 이렇게 프레임이 전환된 이후에 이전 객체를 다시 잡지 못하는 문제가 발생한다. 이는 Track 객체의 생애주기가 30frame으로 고정되어 있기 때문이다. frame이 끊겨 기존 물체가 사라짐에도 불구하고 계속해서 인물을 tracking하는 방법을 찾아야 한다.&lt;/p&gt;

&lt;h1 id=&quot;추후-방향&quot;&gt;추후 방향&lt;/h1&gt;

&lt;p&gt;Arcface를 사용하여 face Recognition을 진행할 수 있도록 변경한다. 이를 위해서는 인물 database를 구축하는 방법을 사용해야 할 것으로 보인다. 이 인물 database에 없는 인물 같은 경우는 tracking은 하되, id 유지는 하지 않도록 한다.&lt;/p&gt;
</description>
        <pubDate>Thu, 06 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/projects/2021/05/06/Face-Detection-and-tracking-with-ssd-network-09-yolov3.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/projects/2021/05/06/Face-Detection-and-tracking-with-ssd-network-09-yolov3.html</guid>
        
        <category>project</category>
        
        <category>CV</category>
        
        
        <category>CV/Projects</category>
        
      </item>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(1167번): 트리의 지름</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;골드3&lt;/em&gt;&lt;/strong&gt; : dfs 문제이다.&lt;/p&gt;

&lt;h1 id=&quot;풀이&quot;&gt;풀이&lt;/h1&gt;

&lt;p&gt;트리 = 사이클이 없는 무방향 그래프. 어떠한 두 노드를 선택해도 경로는 하나이다. 즉 무조건 연결되어 있다. 쉽게 생각하기 위해서 이미 두 지름인 점을 알고 있다고 가정하자. 그럼 그 두 점을 잡고 쭉 늘리면 가장 긴 거리가 될 것이다. 자 이제, 그 두 점을 기준으로 원을 만들면 그 안에 모든 노드가 존재하게 된다. 그 안의 노드중 아무거나 선택해보자. 그리고 그곳으로부터 지름의 점으로 선잇기를 해보자. 그럼 &lt;strong&gt;무조건&lt;/strong&gt; 갈 수 있다. 이게 핵심이다. 모든 노드는 1개 이상의 간선을 가지고 있기 때문에, 지름을 표현하는 그 점으로 가능 방법이 존재한다. 그리고 그 방법은 길이의 최대를 만족하는 지점의 노드를 구하는 것이다. 즉, 어느점에서라도 거리가 가장 길어지는 지점을 찾을 수 있다면, 그것이 최대 길이의 한 점이다.
그 뒤는 쉽다. 최대 길이의 한 점에서 출발해서 최대 길이를 구하면 된다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;특정 노드로부터 시작하여 최대 길이를 가지는 노드를 구한다.&lt;/li&gt;
  &lt;li&gt;그 노드에서부터 최대 길이를 구한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;만약, 각각의 노드에서 dfs를 통해 값을 구한다면, $O(V(V+E))$ 정도의 시간 복잡도가 발생하고, V가 100,000이기 때문에 불가능하다. 위의 방법으로 진행할 경우, $O(V)$ 만에 탐색이 가능하다.&lt;/p&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  main.cpp&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  algorithm_prac&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Created by 최완식 on 2021/04/05.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxDist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxDist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maxDist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maxIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nextNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nextNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_pair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 어느 점에서 출발해도 상관 없음. 1번 노드는 무조건 존재한다.&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;maxDist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxDist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1167&quot; target=&quot;\_blank&quot;&gt;백준(1167번) - 트리의 지름&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 05 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/05/05/%EB%B0%B1%EC%A4%80-%ED%8A%B8%EB%A6%AC%EC%9D%98-%EC%A7%80%EB%A6%84.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/05/05/%EB%B0%B1%EC%A4%80-%ED%8A%B8%EB%A6%AC%EC%9D%98-%EC%A7%80%EB%A6%84.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>dfs</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(2512번): 예산</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;실버3&lt;/em&gt;&lt;/strong&gt; : 이진 탐색 문제이다.&lt;/p&gt;

&lt;h1 id=&quot;풀이&quot;&gt;풀이&lt;/h1&gt;

&lt;p&gt;예산 금액은 최대예산과 아예 안주는(0원) 방법이 있다. 따라서 0과 max금액을 양 끝으로 잡는다.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;left&lt;/td&gt;
      &lt;td&gt;right&lt;/td&gt;
      &lt;td&gt;mid&lt;/td&gt;
      &lt;td&gt;예산소모금액&lt;/td&gt;
      &lt;td&gt;후보가능여부&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;75&lt;/td&gt;
      &lt;td&gt;300&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;75&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;112&lt;/td&gt;
      &lt;td&gt;446&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;113&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;131&lt;/td&gt;
      &lt;td&gt;492&lt;/td&gt;
      &lt;td&gt;X&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;113&lt;/td&gt;
      &lt;td&gt;130&lt;/td&gt;
      &lt;td&gt;121&lt;/td&gt;
      &lt;td&gt;472&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;122&lt;/td&gt;
      &lt;td&gt;130&lt;/td&gt;
      &lt;td&gt;126&lt;/td&gt;
      &lt;td&gt;482&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;126&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;127&lt;/td&gt;
      &lt;td&gt;484&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;486&lt;/td&gt;
      &lt;td&gt;X&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;mid가 m보다 작으면 답의 후보라는 것을 알 수 있다. 탐색은 하되, 답인 상황만 잘 가져오면 됨.&lt;/p&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  main.cpp&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  algorithm_prac&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Created by 최완식 on 2021/04/05.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;



&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2512&quot; target=&quot;\_blank&quot;&gt;백준(2512번) - 예산&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 05 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/05/05/%EB%B0%B1%EC%A4%80-%EC%98%88%EC%82%B0.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/05/05/%EB%B0%B1%EC%A4%80-%EC%98%88%EC%82%B0.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>이진 탐색</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(9251번): LCS</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;골드5&lt;/em&gt;&lt;/strong&gt; : 동적계획법 문제이다.&lt;/p&gt;

&lt;h1 id=&quot;풀이&quot;&gt;풀이&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;dp[i][j] = (i, j)번째 수열의 원소를 포함했을 때, 가지는 최장 수열의 길이&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;dp[i][j] = max(dp[i-1][j-1]~dp[0][0])&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;하지만 실제 구현을 이런식으로 하게 되면, $O(n^4)$ 로 시간 초과가 날 것이다. 따라서 i번째 원소를 업데이트 한 이후에, dp의 값이 사용이 되는지 확인할 필요가 있다.&lt;/p&gt;

&lt;p&gt;무조건적으로 이전 원소(i)를 본 뒤에는 값이 큰 상태로 유지되며, 다음 상태의 최장 길이는 이 값으로부터 도출될 수 밖에 없다. 따라서 최적화가 가능하다.&lt;/p&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxvalue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxvalue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;maxvalue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                
                &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxvalue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        for (int k = 0; k &amp;lt; b.size(); k++) {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//            cout &amp;lt;&amp;lt; dp[k] &amp;lt;&amp;lt; &quot; &quot;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        }&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        cout &amp;lt;&amp;lt; '\n';&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/9251&quot; target=&quot;\_blank&quot;&gt;백준(9251번) - LCS&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 04 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/05/04/LCS.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/05/04/LCS.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>동적계획법</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [Development Method] 05: Select Right OS</title>
        <description> 문제에 맞는 OS를 사용해보자. : &lt;h1 id=&quot;os-선정-배경&quot;&gt;OS 선정 배경&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;비즈니스
    &lt;ul&gt;
      &lt;li&gt;시장 점유율
        &lt;ul&gt;
          &lt;li&gt;Decktop - window 80%&lt;/li&gt;
          &lt;li&gt;Mobile - Android 80%, iOS 15%&lt;/li&gt;
          &lt;li&gt;Super Computer - Linux가 현재 잠식 100%&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기술 요구사항
    &lt;ul&gt;
      &lt;li&gt;병렬 프로그래밍&lt;/li&gt;
      &lt;li&gt;실시간 처리&lt;/li&gt;
      &lt;li&gt;극도로 작은 하드웨어 자원&lt;/li&gt;
      &lt;li&gt;보안 컴퓨팅&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;linux&quot;&gt;Linux&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;오픈 소스 다중/병렬/분산 서버 OS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;공짜&lt;/li&gt;
  &lt;li&gt;많은 사람들&lt;/li&gt;
  &lt;li&gt;완성된 OS&lt;/li&gt;
  &lt;li&gt;안정적이다. - 앱의 crush가 덜 발생한다.&lt;/li&gt;
  &lt;li&gt;신뢰할 수 있다. - 오랜 시간 돌려도 문제 없다.&lt;/li&gt;
  &lt;li&gt;완전한 개발환경을 제공한다.&lt;/li&gt;
  &lt;li&gt;강력한 네트워크 기능 - 애초에 좋은 녀석&lt;/li&gt;
  &lt;li&gt;Multi-user OS&lt;/li&gt;
  &lt;li&gt;커널
    &lt;ul&gt;
      &lt;li&gt;가볍다.&lt;/li&gt;
      &lt;li&gt;iOT, sensor에 넣기 좋다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;네트워킹
    &lt;ul&gt;
      &lt;li&gt;통신 서비스 많이 이걸로 만듦&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hard한 Real-time OS
    &lt;ul&gt;
      &lt;li&gt;VXWORKS
        &lt;ul&gt;
          &lt;li&gt;유료&lt;/li&gt;
          &lt;li&gt;임베디드, 로봇, 항공, 보안, 국방, 의료를 위한 OS&lt;/li&gt;
          &lt;li&gt;멀티 태스킹&lt;/li&gt;
          &lt;li&gt;Preemptive - 선점 스케쥴링&lt;/li&gt;
          &lt;li&gt;round-robin - 돌아가면서 같은 시간 배분&lt;/li&gt;
          &lt;li&gt;빠른 인터럽트 응답&lt;/li&gt;
          &lt;li&gt;진짜 잘 안죽는다.&lt;/li&gt;
          &lt;li&gt;Error handling framework&lt;/li&gt;
          &lt;li&gt;다양한 부품들의 통신 프로토콜 지원(장비들)&lt;/li&gt;
          &lt;li&gt;세마포어 준비 잘되어 있음&lt;/li&gt;
          &lt;li&gt;메모리 방어&lt;/li&gt;
          &lt;li&gt;밑바닥 디버깅 (Symbolic bebugging)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116595023-d4ab9780-a95d-11eb-8c1a-f8dac31aaa77.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;linux-vs-unix&quot;&gt;Linux vs Unix&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116595305-26ecb880-a95e-11eb-95cb-d2f06aca426f.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116595776-a11d3d00-a95e-11eb-8c15-70e1be6e9782.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Unix
    &lt;ul&gt;
      &lt;li&gt;유료&lt;/li&gt;
      &lt;li&gt;금융권에서 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Linux
    &lt;ul&gt;
      &lt;li&gt;무료&lt;/li&gt;
      &lt;li&gt;더 빠르다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;zephyr&quot;&gt;Zephyr&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;최근에 만들어진 OS&lt;/li&gt;
  &lt;li&gt;Microcontroller OS&lt;/li&gt;
  &lt;li&gt;라즈베리는 OS가 있지만 아두이노는 없다.&lt;/li&gt;
  &lt;li&gt;애초에 쓸수있는 하드웨어가 굉장히 작기 때문&lt;/li&gt;
  &lt;li&gt;이런 곳에 사용할 수 있는 OS를 만들었다..!&lt;/li&gt;
  &lt;li&gt;Linux Foundation에서 지원한다.&lt;/li&gt;
  &lt;li&gt;Highly configurable(수정가능), Highly Modular
    &lt;ul&gt;
      &lt;li&gt;모든 기능이 다 필요한 것이 아니니 모듈화가 잘되어 있어야 갖다가 쓸 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Kernel mode only
    &lt;ul&gt;
      &lt;li&gt;커널이라 애플리케이션을 나누는게 아니고 합쳐버려&lt;/li&gt;
      &lt;li&gt;Nanokernel: 진짜 완전히 다때려박고 합쳐 (10k미만)&lt;/li&gt;
      &lt;li&gt;Microkernel: 야야 그래도 조금은 나누어서 하자.&lt;/li&gt;
      &lt;li&gt;user-space가 없다. - app module 이런거 없다.&lt;/li&gt;
      &lt;li&gt;no-dynamic runtimes
        &lt;ul&gt;
          &lt;li&gt;c++에 dll(dynamic linked library) - 필요할 때만 메모리에 불러쓰고 지워버리는 기법 이런거 못쓴다.&lt;/li&gt;
          &lt;li&gt;동적할당 그런거 안한다.&lt;/li&gt;
          &lt;li&gt;Cross architecture(arm, arc, ia32)&lt;/li&gt;
          &lt;li&gt;멀티 코어(cpu 여러개), 멀티 프로세스(여러개의 프로세스가 돌아가는 경우), 멀티 스레드(일꾼을 여러명) 중에 멀티 스레드 지원&lt;/li&gt;
          &lt;li&gt;커널만 따지면 딱 2kb..!&lt;/li&gt;
          &lt;li&gt;센서&lt;/li&gt;
          &lt;li&gt;태그&lt;/li&gt;
          &lt;li&gt;입는 LED&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116598265-93b58200-a961-11eb-92c3-0030ebcecfe9.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;단지 작을 뿐 아래 보면 있을 것 다있다.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;보안-os&quot;&gt;보안 OS&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Trustzone - arm
    &lt;ul&gt;
      &lt;li&gt;데스크톱에서는 별 필요 없었는데 휴대폰은 너무 중요&lt;/li&gt;
      &lt;li&gt;그래서 어느정도 성공&lt;/li&gt;
      &lt;li&gt;하드웨어, 소프트웨어 융합된 기술&lt;/li&gt;
      &lt;li&gt;컴퓨터 안에 2개의 운영체제가 돌아가고, 들어가기 위해서는 보완기능을 해제해야 하는 구조&lt;/li&gt;
      &lt;li&gt;오염이 되었다고 판단하면 접근 제한&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 29 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/concept/2021/04/29/Development-Method-05-Select-Right-OS.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/concept/2021/04/29/Development-Method-05-Select-Right-OS.html</guid>
        
        <category>Concept</category>
        
        <category>Development Method</category>
        
        
        <category>DV/Concept</category>
        
      </item>
    
      <item>
        <title> [Development Method] 04: Design by figure</title>
        <description> 그림으로 설계하자. : &lt;h1 id=&quot;자료구조-그림&quot;&gt;자료구조 그림&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116585420-5944e880-a953-11eb-81a3-dcefcf972889.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116585451-62ce5080-a953-11eb-9aa1-065cb1ac4f06.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;알고리즘&quot;&gt;알고리즘&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;478&quot; alt=&quot;스크린샷 2021-04-30 오전 1 29 36&quot; src=&quot;https://user-images.githubusercontent.com/37871541/116585609-885b5a00-a953-11eb-933b-a6c5e7ce4401.png&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116585652-9315ef00-a953-11eb-887b-814d28e5ee0b.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터-베이스&quot;&gt;데이터 베이스&lt;/h1&gt;

&lt;h2 id=&quot;relationship-model&quot;&gt;Relationship model&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;392&quot; alt=&quot;스크린샷 2021-04-30 오전 1 35 30&quot; src=&quot;https://user-images.githubusercontent.com/37871541/116586378-5bf40d80-a954-11eb-82af-9881acd34906.png&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;key에 해당하는 값을 각 테이블에서 찾아서 합쳐주세요. 이를 query라 한다.&lt;/p&gt;

&lt;h2 id=&quot;entity-relationship-of-data&quot;&gt;Entity-relationship of Data&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116586739-c0af6800-a954-11eb-9dd1-1a08b14ef894.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;클래스랑 개념이 비슷하다.그리고 그 사이의 관계를 정의해서 서술하는 법&lt;/p&gt;

&lt;h2 id=&quot;nosql&quot;&gt;NoSQL&lt;/h2&gt;

&lt;p&gt;실제 생성되는 데이터는 정형화되지 않은 것들이 더 많다.&lt;/p&gt;

&lt;h2 id=&quot;종류-정리&quot;&gt;종류 정리&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;SQL
    &lt;ul&gt;
      &lt;li&gt;SQL server&lt;/li&gt;
      &lt;li&gt;MySQL&lt;/li&gt;
      &lt;li&gt;Oracle&lt;/li&gt;
      &lt;li&gt;DB2&lt;/li&gt;
      &lt;li&gt;PostgreSQL&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;NoSQL
    &lt;ul&gt;
      &lt;li&gt;MongoDB&lt;/li&gt;
      &lt;li&gt;Hadoop&lt;/li&gt;
      &lt;li&gt;Cassandra&lt;/li&gt;
      &lt;li&gt;Riak&lt;/li&gt;
      &lt;li&gt;Couchbase&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;네트워크&quot;&gt;네트워크&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116587412-64007d00-a955-11eb-87b8-f6ab5ec553cc.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;운영체제&quot;&gt;운영체제&lt;/h1&gt;

&lt;p&gt;결국은 하나의 장치는 하드웨어, 소프트웨어로 나뉘고 소프트웨어는 OS, 미들웨어, 어플리케이션으로 나뉘고, 그 어플리케이션은 블락으로 나뉜다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116587528-8397a580-a955-11eb-8a4f-b505ab7b1c84.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;메시지-시퀀트-차트&quot;&gt;메시지 시퀀트 차트&lt;/h1&gt;

&lt;p&gt;서로 주고 받는 메시지를 인과관계를 기반으로 정의한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116587860-d5403000-a955-11eb-93e4-699a18afc718.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;상태-천이도&quot;&gt;상태 천이도&lt;/h1&gt;

&lt;p&gt;이벤트 다이어그램이라 부른다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116588061-0de00980-a956-11eb-8839-40699eddb90f.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;의사소통&quot;&gt;의사소통&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;MS visio&lt;/li&gt;
  &lt;li&gt;LibreOffice Draw - Linux,MacOS, Windows&lt;/li&gt;
  &lt;li&gt;Dia Diagram Editor&lt;/li&gt;
  &lt;li&gt;Draw.io&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 29 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/concept/2021/04/29/Development-Method-04-Design-by-figure.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/concept/2021/04/29/Development-Method-04-Design-by-figure.html</guid>
        
        <category>Concept</category>
        
        <category>Development Method</category>
        
        
        <category>DV/Concept</category>
        
      </item>
    
      <item>
        <title> [Development Method] 03: Design Approach</title>
        <description> 문제 정의, 사용 도구를 정했다면 이제 어떤식으로 진행할지 설계해보자. : &lt;h1 id=&quot;소프트웨어-개발-방법&quot;&gt;소프트웨어 개발 방법&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;과거 - Software
    &lt;ul&gt;
      &lt;li&gt;소프트웨어 자체가 목적
        &lt;ul&gt;
          &lt;li&gt;Office&lt;/li&gt;
          &lt;li&gt;한글&lt;/li&gt;
          &lt;li&gt;Photoshop&lt;/li&gt;
          &lt;li&gt;Game(CD)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;긴 개발 과정&lt;/li&gt;
      &lt;li&gt;많은 인력, 돈&lt;/li&gt;
      &lt;li&gt;데드라인이 중요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;현재 - Service
    &lt;ul&gt;
      &lt;li&gt;서비스가 목적
        &lt;ul&gt;
          &lt;li&gt;Search Service&lt;/li&gt;
          &lt;li&gt;Free Game with Pay items&lt;/li&gt;
          &lt;li&gt;카카오 실시간 메신저&lt;/li&gt;
          &lt;li&gt;Ad based Free Services&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;가능한한 빨리 (일간, 주간 월간)
        &lt;ul&gt;
          &lt;li&gt;경쟁 심화&lt;/li&gt;
          &lt;li&gt;제한된 인력과 돈&lt;/li&gt;
          &lt;li&gt;시장의 요구사항을 맞춰야 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;waterfall&quot;&gt;Waterfall&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;513&quot; alt=&quot;스크린샷 2021-04-30 오전 12 26 18&quot; src=&quot;https://user-images.githubusercontent.com/37871541/116576645-b25c4e80-a94a-11eb-8e6a-bb573b576194.png&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항 분석&lt;/li&gt;
  &lt;li&gt;디자인&lt;/li&gt;
  &lt;li&gt;개발&lt;/li&gt;
  &lt;li&gt;테스팅&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유지/보수&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;장점
    &lt;ul&gt;
      &lt;li&gt;코딩하기 전에 많은 고민&lt;/li&gt;
      &lt;li&gt;많은 문서가 발생&lt;/li&gt;
      &lt;li&gt;이를 통해 개발이 편리&lt;/li&gt;
      &lt;li&gt;새로운 팀원이 와도 업무 인수인계 가능&lt;/li&gt;
      &lt;li&gt;서로와의 이해가 힘든 문제도 해소 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;문서 너무 많아&lt;/li&gt;
      &lt;li&gt;고민 모두 하는 것 불가능함&lt;/li&gt;
      &lt;li&gt;빠른 속도 불가능&lt;/li&gt;
      &lt;li&gt;계속해서 바꿔야 하는 경우가 비일비&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;agile&quot;&gt;Agile&lt;/h1&gt;

&lt;p&gt;Agile이라는 단어는 많이 쓰지만 정작 제대로된 이해는 부족한 경우가 많다. Agile의 핵심은 원리, 가치, 원칙에 더 가깝다. 프로젝트에 참가하는 팀이 어떠한 신념을 가지고 일을 진행시키겠냐는 약속에 가까운 것이다. 프로젝트를 진행하게되면 의사 결정의 순간에 팀만의 가치 우선순위가 없을 경우 일을 진행시키는 것이 매우 어렵다. 이러한 부분에서 Agile 원칙이 한가지 예로 존재하는 것. 아래에 서술할 Agile 개발 방법론으로부터 이 개념은 파생되어, 무언가 좋은 제품을 만드는데 있어서 빠르고, 낭비없이 만드는 원칙과 같은 관용어로 사용하게 되었다.&lt;/p&gt;

&lt;h2 id=&quot;agile의-전제&quot;&gt;Agile의 전제&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;세상에 확실한 것은 아무것도 없다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;고객도 자신이 원하는 바를 정확히 모른다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;agile-menifesto&quot;&gt;Agile menifesto&lt;/h2&gt;

&lt;p&gt;우리는 소프트웨어를 개발하고, 또 다른 사람의 개발을 도와주면서 소프트웨어 개발의 더 나은 방법들을 찾아가고 있다.&lt;/p&gt;

&lt;p&gt;이 작업을 통해 우리는 다음을 가치있게 여기게 되었다:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;공정과 도구보다 &lt;strong&gt;개인과 상호작용&lt;/strong&gt;을&lt;/li&gt;
  &lt;li&gt;포괄적인 문서보다 &lt;strong&gt;작동하는 소프트웨어&lt;/strong&gt;를&lt;/li&gt;
  &lt;li&gt;계약 협상보다 &lt;strong&gt;고객과의 협력&lt;/strong&gt;을&lt;/li&gt;
  &lt;li&gt;계획을 따르기보다 &lt;strong&gt;변화에 대응하기&lt;/strong&gt;를&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;가치있게 여긴다. 이 말은, 왼쪽에 있는 것들도 가치가 있지만, 우리는 오른쪽에 있는 것들에 더 높은 가치를 둔다는 것이다.&lt;/p&gt;

&lt;h2 id=&quot;agile-principles&quot;&gt;Agile Principles&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;우리의 최우선 순위는 귀중한 소프트웨어를 &lt;strong&gt;조기에 지속적으로 제공하여 고객을 만족&lt;/strong&gt;시키는 것입니다.&lt;/li&gt;
  &lt;li&gt;개발 후반에도 &lt;strong&gt;변화하는 요구 사항을 환영&lt;/strong&gt;합니다. 애자일 프로세스는 고객의 경쟁 우위를 위해 변화를 활용합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;짧은 기간을 선호&lt;/strong&gt;하여 2 주에서 2 개월까지 작업 소프트웨어를 자주 제공합니다.&lt;/li&gt;
  &lt;li&gt;비즈니스맨과 개발자는 프로젝트 전체에서 &lt;strong&gt;매일 함께 작업&lt;/strong&gt;해야합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;동기 부여 된 개인을 중심으로 프로젝트를 구축&lt;/strong&gt;하십시오. 그들에게 필요한 환경과 지원을 제공하고 그들이 일을 완수 할 수 있도록 신뢰하십시오.&lt;/li&gt;
  &lt;li&gt;개발 팀과 정보를 전달하는 가장 효율적이고 효과적인 방법은 &lt;strong&gt;대면 대화&lt;/strong&gt;입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;작업 소프트웨어&lt;/strong&gt;는 진행 상황의 주요 척도입니다.&lt;/li&gt;
  &lt;li&gt;애자일 프로세스는 &lt;strong&gt;지속 가능한 개발을 촉진&lt;/strong&gt;합니다. 스폰서, 개발자 및 사용자는 무한정 일정한 속도를 유지할 수 있어야합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;기술적 우수성과 우수한 디자인&lt;/strong&gt;에 대한 지속적인 관심은 민첩성을 향상시킵니다.&lt;/li&gt;
  &lt;li&gt;단순성 (완료하지 않은 작업량을 극대화하는 기술)은 필수적입니다.&lt;/li&gt;
  &lt;li&gt;최상의 아키텍처, 요구 사항 및 디자인은 자체 구성 팀에서 나옵니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;정기적&lt;/strong&gt;으로 팀은 더 효과적인 방법을 고려한 다음 그에 따라 &lt;strong&gt;행동을 조정&lt;/strong&gt;하고 적용합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;왜-사용하는가&quot;&gt;왜 사용하는가?&lt;/h2&gt;

&lt;p&gt;agile 방법론의 태동은 기존의 소프트웨어 방법론에서 발생한 문제점으로 부터 시사되었다. 계획에 의존하는 경우는 형식에 얽매이게 되고, 빠르게 방향을 변경하는 것이 어렵다. 그와 반대로 계획이 없는 경우 앞으로의 일을 예측하기 힘들고 효율적이지 못하다. 이러한 두가지 방법론 사이에서 타협을 찾았다고 볼 수 있다.&lt;/p&gt;

&lt;p&gt;가장 큰 변화는 &lt;strong&gt;documentation보다 code를 기반&lt;/strong&gt;하도록 변경된 것이다. 일정한 주기를 가지고 프로젝트의 생명 주기가 끝나기 전까지 그때 그때 고객과의 소통을 통해 요구를 더하고 수정하여 하나의 커다란 소프트웨어를 개발하는 방법이다.&lt;/p&gt;

&lt;h1 id=&quot;scrum이란&quot;&gt;Scrum이란?&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/112299235-f4a2c800-8cda-11eb-9aab-5d4132f16ab7.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;em&gt;Football Scrum&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;스크럼은 럭비에서 진형을 갖추고 있는 모습을 말한다. 이 그림을 보면 팀단위로 똘똘뭉쳐서 하나의 목표를 달성하기 위해 진형이 구축되어 있다. 스크럼 개발 방식은 이 주도적인 팀 수행이 핵심이다.&lt;/p&gt;

&lt;p&gt;Agile 가치를 기반으로 실행할 수 있는 Framework중 하나이다. 가치를 말하는 Agile을 이러한 틀을 기반으로 진행시키면 쉽게 할 수 있다를 제안한다. 사실 이 방법이 매력적인 이유는 보통 소규모 프로젝트를 진행했을 때 팀단위가 3~10명 사이이기 때문이다. 쉽게 회의를 진행할 수 있고, 그렇기 때문에 의사소통이 편하다.&lt;/p&gt;

&lt;h1 id=&quot;agile-tools&quot;&gt;Agile Tools&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;포스트잇&lt;/li&gt;
  &lt;li&gt;칸반 보드&lt;/li&gt;
  &lt;li&gt;open project&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;devops&quot;&gt;DevOps&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;개발 팀과 운영 팀으로 나뉨&lt;/li&gt;
  &lt;li&gt;개발 팀
    &lt;ul&gt;
      &lt;li&gt;하이 테크를 기반으로 개발하는데 집중&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;운영 팀
    &lt;ul&gt;
      &lt;li&gt;가장 안정적으로 서비스를 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Scrum 개발 방법론에서 개발이 빠르게 진행된다면 운영 팀 입장에서는 좋아할 수 만은 없는 일&lt;/li&gt;
  &lt;li&gt;검증을 해야한다.&lt;/li&gt;
  &lt;li&gt;안정적인 것도 맞되, 먼저가 되어야 하는 것은 서비스 사용자가 원하는 것&lt;/li&gt;
  &lt;li&gt;사실 철학에 보다 가까운 것.&lt;/li&gt;
  &lt;li&gt;서비스 빌드, 테스팅 - 빌드를 자동화&lt;/li&gt;
  &lt;li&gt;많은 도구들의 등장&lt;/li&gt;
  &lt;li&gt;DevOps는 연봉 높다.&lt;/li&gt;
  &lt;li&gt;개발, QA(품질관리), Operations이 모두를 관장하는 위치&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116580502-64494a00-a94e-11eb-99c8-6f0c1f8bae25.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116581432-492b0a00-a94f-11eb-9bdd-8e99612db0a4.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 29 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/concept/2021/04/29/Development-Method-03-Design-Approach.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/concept/2021/04/29/Development-Method-03-Design-Approach.html</guid>
        
        <category>Concept</category>
        
        <category>Development Method</category>
        
        
        <category>DV/Concept</category>
        
      </item>
    
      <item>
        <title> [Development Method] 02: Select Right Language and IDE</title>
        <description> 언어가 먼저가 아니다. 문제를 정하고 언어를 정하는 방법을 알자. : &lt;h1 id=&quot;언어-선택&quot;&gt;언어 선택&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;배워두면 좋은 언어가 뭐지? X 이럴거면 하지마라&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;문제를 정의&lt;/strong&gt;해라. 그리고 그거에 최적화된 도구를 찾는다.&lt;/li&gt;
  &lt;li&gt;언어를 골랐다면, 프레임워크가 있는지 확인해본다. - 소프트웨어가 좋아 언어를 선택하는 경우도 있다.&lt;/li&gt;
  &lt;li&gt;시간, 팀원, 돈, 성능등을 모두 고려하여 선택한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;cc&quot;&gt;C/C++&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;물리 메모리 관리, IO 기능
    &lt;ul&gt;
      &lt;li&gt;다른 언어는 불가. 운영체제가 가상 메모리 주소를 리턴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비트 단위 연산
    &lt;ul&gt;
      &lt;li&gt;하드웨어를 다룬다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pointer&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;c&quot;&gt;C&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데니스 리치&lt;/li&gt;
  &lt;li&gt;절차 지향&lt;/li&gt;
  &lt;li&gt;컴퓨터 메모리 직접 접근 가능&lt;/li&gt;
  &lt;li&gt;이전의 기계어 접근 안해도된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;c-1&quot;&gt;C++&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Bjarne Stroustrup&lt;/li&gt;
  &lt;li&gt;클래스 - 너무 방대했음
    &lt;ul&gt;
      &lt;li&gt;재사용 유리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;언어가 너무 어려웠음&lt;/li&gt;
  &lt;li&gt;하지만 여전히 많이 사용됨.&lt;/li&gt;
  &lt;li&gt;모바일, 웹 테크에 따라가지 못함&lt;/li&gt;
  &lt;li&gt;실행 파일 판매 방식 - 예전에 유행
    &lt;ul&gt;
      &lt;li&gt;요즘은 웹 - 인터프리터 방식으로 전환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;C#으로 부족한 것 보완 - MS&lt;/li&gt;
  &lt;li&gt;다시 춘추 전국 시대로 넘어간 시대&lt;/li&gt;
  &lt;li&gt;C++도 이제는 진화하고 있다.
    &lt;ul&gt;
      &lt;li&gt;C++ 14부터 모던 c++으로 불린다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;domain에-따라-언어를-선택하자&quot;&gt;Domain에 따라 언어를 선택하자.&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;웹서버&lt;/li&gt;
  &lt;li&gt;데이터 분석&lt;/li&gt;
  &lt;li&gt;클라우드 컴퓨팅&lt;/li&gt;
  &lt;li&gt;데이터 센터 프로그래밍&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;웹서버&quot;&gt;웹서버&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Javascript
    &lt;ul&gt;
      &lt;li&gt;1995.12.04&lt;/li&gt;
      &lt;li&gt;그냥 동적인 브라우저 만들려고 했다.&lt;/li&gt;
      &lt;li&gt;그 안에 엔진을 뗀 것이 Node.js - 서버 사이드 개발 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Apache&lt;/li&gt;
  &lt;li&gt;Nginx&lt;/li&gt;
  &lt;li&gt;wordpress&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;데이터-분석&quot;&gt;데이터 분석&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Python
    &lt;ul&gt;
      &lt;li&gt;쉽게 공유, 배우게&lt;/li&gt;
      &lt;li&gt;Natural language processing에 유리&lt;/li&gt;
      &lt;li&gt;쉬우니까 과학자들이 코드 공유&lt;/li&gt;
      &lt;li&gt;시간이 지나면서 지식이 쌓임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;R
    &lt;ul&gt;
      &lt;li&gt;거의 수학 공식을 그대로 가져온 형태&lt;/li&gt;
      &lt;li&gt;수학하려고 만든 언어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;클라우드-컴퓨팅&quot;&gt;클라우드 컴퓨팅&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;10년 동안의 오래된 기술&lt;/li&gt;
  &lt;li&gt;OpenStack
    &lt;ul&gt;
      &lt;li&gt;2010&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Python으로 개발&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;NASA가 개발&lt;/li&gt;
      &lt;li&gt;데이터 분석하는데 사용하면서 급성장&lt;/li&gt;
      &lt;li&gt;서버 프로그래밍, 병렬 처리하는데서 요구가 많음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;데이터-센터-프로그래밍&quot;&gt;데이터 센터 프로그래밍&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;수많은 CPU, 네트워크 장비등이 들어가 있는 건물&lt;/li&gt;
  &lt;li&gt;전기, 전자 모든게 다 있는 곳&lt;/li&gt;
  &lt;li&gt;이런 곳을 위한 프로그래밍이 필요함&lt;/li&gt;
  &lt;li&gt;이런 것을 위해 태어난 언어 “GO” - 미래의 서버 언어&lt;/li&gt;
  &lt;li&gt;Simple, 병렬 처리, c++ 닮은 언어, 하드웨어 다룰 수 있음, 서버 특화&lt;/li&gt;
  &lt;li&gt;Docker라는 프로그램이 나오면서 급성장&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116570767-78d51480-a945-11eb-8115-5e400bae934b.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;개발-플랫폼&quot;&gt;개발 플랫폼&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;OS dependant
    &lt;ul&gt;
      &lt;li&gt;정해져 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OS independant
    &lt;ul&gt;
      &lt;li&gt;VS Code
        &lt;ul&gt;
          &lt;li&gt;플러그인&lt;/li&gt;
          &lt;li&gt;확장성&lt;/li&gt;
          &lt;li&gt;OS independant! OS, window, linux&lt;/li&gt;
          &lt;li&gt;debug도 잘돼&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Atom
        &lt;ul&gt;
          &lt;li&gt;github가 만듦&lt;/li&gt;
          &lt;li&gt;웹 프로그래머&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Eclipse
        &lt;ul&gt;
          &lt;li&gt;자바&lt;/li&gt;
          &lt;li&gt;무거움&lt;/li&gt;
          &lt;li&gt;설치 많음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;근데도-뭘할지-모르겠다면&quot;&gt;근데도 뭘할지 모르겠다면..&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Tiobe index
    &lt;ul&gt;
      &lt;li&gt;언어 순위 발표&lt;/li&gt;
      &lt;li&gt;검색 순위로 판단하는 것임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;github statistics
    &lt;ul&gt;
      &lt;li&gt;project 언어 사용기준&lt;/li&gt;
      &lt;li&gt;337개 사용중&lt;/li&gt;
      &lt;li&gt;javascript 제일 많아&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;돈 많이 버는 걸로..&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;책추천&quot;&gt;책추천&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Masterminds of Programming&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 29 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/concept/2021/04/29/Development-Method-02-Select-right-Language-and-IDE.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/concept/2021/04/29/Development-Method-02-Select-right-Language-and-IDE.html</guid>
        
        <category>Concept</category>
        
        <category>Development Method</category>
        
        
        <category>DV/Concept</category>
        
      </item>
    
      <item>
        <title> [Development Method] 01: Problem Definition</title>
        <description> 언어, 프레임워크는 도구다. 가장 중요한 문제 정의하는 방법을 알아보자. : &lt;blockquote&gt;
  &lt;p&gt;꾸준히 공부하지 않으면 망해버리는 분야.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;각오를 단단히 잡고 해야한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;문제의-분류&quot;&gt;문제의 분류&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;문제를 푸는 동기?
    &lt;ul&gt;
      &lt;li&gt;시켜서&lt;/li&gt;
      &lt;li&gt;자발적으로&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;어떤 방식으로 구현할 거야?
    &lt;ul&gt;
      &lt;li&gt;생코딩 (from scratch)&lt;/li&gt;
      &lt;li&gt;플랫폼 위에서 (open source)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하드웨어 의존성 - 소프트웨어 방향성을 알려줌
    &lt;ul&gt;
      &lt;li&gt;있다. - 개발 환경이 정해진다.
        &lt;ul&gt;
          &lt;li&gt;Arduino - ATmega, C, Sketch IDE&lt;/li&gt;
          &lt;li&gt;RAspberryPi ARM Processor, GPIO, USB&lt;/li&gt;
          &lt;li&gt;CUDA - NVIDIA GPU, C/C++/Fortran&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;없다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기한은 언제까지인가?
    &lt;ul&gt;
      &lt;li&gt;졸업 논문&lt;/li&gt;
      &lt;li&gt;공모전&lt;/li&gt;
      &lt;li&gt;서비스 배포 시기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;필요한 성능은 얼마인가? -&amp;gt; Key poerformance Indexes (KPI) 지표가 필요함.
    &lt;ul&gt;
      &lt;li&gt;인명 피해가 발생할 수 있는 경우&lt;/li&gt;
      &lt;li&gt;응답 시간&lt;/li&gt;
      &lt;li&gt;수용성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Case Study
    &lt;ul&gt;
      &lt;li&gt;웹 서버 개발
        &lt;ul&gt;
          &lt;li&gt;C++ &amp;amp; Proxygen (platform dependant : 해당 플랫폼이 있어야 함)
            &lt;ul&gt;
              &lt;li&gt;Facebook이 만듦&lt;/li&gt;
              &lt;li&gt;장점 : 어떤 것보다 빠르다. 10배 이상 빠를 수도 있다.&lt;/li&gt;
              &lt;li&gt;단점 : 어렵다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Python &amp;amp; Django (platform independant : 없어도 웹서버 가능, http 내장)&lt;/li&gt;
          &lt;li&gt;Javascript &amp;amp; Node.js (platform independant)
            &lt;ul&gt;
              &lt;li&gt;웹 클라이언트를 위해 만든 언어, 이제는 서버 프로그래밍까지.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Apache/Nginx (tools, non-programming)
            &lt;ul&gt;
              &lt;li&gt;개발을 하지 않고도 만들 수 있다. 웹 서버를 그냥 설치해&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;실제 직장이라면?
        &lt;ul&gt;
          &lt;li&gt;Due date? : 내가 익숙한 것, 혹은 내 능력에 맞춰 당장할 수 있는 것&lt;/li&gt;
          &lt;li&gt;성능? : 고민, 정량적으로 평가 (KPI)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;각각의 평가 방법에 따라 순위가 변경된다. 언어는 사용하는 분야에 따라 달라진다는 것을 알 수 있다. 근데 아무리 생각해도 파이썬은 너무 느리다.
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116561553-6525b000-a93d-11eb-9b07-88a0f6dd5e75.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116561658-7a9ada00-a93d-11eb-9ed2-aaf246ba6385.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116562007-c5b4ed00-a93d-11eb-867e-9e84d879868e.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;모바일 개발은 어떻게 할까?
    &lt;ul&gt;
      &lt;li&gt;Native (iOS, Android)
        &lt;ul&gt;
          &lt;li&gt;성능 보장&lt;/li&gt;
          &lt;li&gt;두개 이상 플랫폼? 고민&lt;/li&gt;
          &lt;li&gt;iOS
            &lt;ul&gt;
              &lt;li&gt;매킨토시, xcode&lt;/li&gt;
              &lt;li&gt;배포 개복잡..&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Android
            &lt;ul&gt;
              &lt;li&gt;material design&lt;/li&gt;
              &lt;li&gt;kotlin, java&lt;/li&gt;
              &lt;li&gt;그냥 apk 배포&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Cross Platform (HTML/CSS/Javascript)
        &lt;ul&gt;
          &lt;li&gt;개발 속도, 인력 감축&lt;/li&gt;
          &lt;li&gt;성능 약화&lt;/li&gt;
          &lt;li&gt;Electron - 데스크톱 앱&lt;/li&gt;
          &lt;li&gt;Cordova - 앱개발&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;아니 그래서 어떻게 판단해야 하지? -&amp;gt; KPI 기반 검증
    &lt;ul&gt;
      &lt;li&gt;Due&lt;/li&gt;
      &lt;li&gt;Performance&lt;/li&gt;
      &lt;li&gt;Cost&lt;/li&gt;
      &lt;li&gt;Man-Power&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116563651-2db80300-a93f-11eb-9522-b0517b49ee79.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/concept/2021/04/23/Development-Method-01-Problem-Definition.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/concept/2021/04/23/Development-Method-01-Problem-Definition.html</guid>
        
        <category>Concept</category>
        
        <category>Development Method</category>
        
        
        <category>DV/Concept</category>
        
      </item>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(3190번): 벽 부수고 이동하기</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;골드4&lt;/em&gt;&lt;/strong&gt; : bfs 문제이다.&lt;/p&gt;

&lt;h1 id=&quot;풀이&quot;&gt;풀이&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;bfs는 가중치가 없는 그래프의 최단 거리 문제를 풀 때 사용하는 방법이다.&lt;/li&gt;
  &lt;li&gt;이 문제는 최단 거리 문제이므로 이 풀이를 선택하는 것은 맞다.&lt;/li&gt;
  &lt;li&gt;그런데 생각해보면, 이번에는 해당 칸에 방문했는가를 기준으로 다음 노드를 탐색하는 것으로는 부족하다.&lt;/li&gt;
  &lt;li&gt;특정 칸에 방문할 수 있는 방법은 그냥 도착한다, 벽을 부수고 도착한다. 두가지로 나뉜다.&lt;/li&gt;
  &lt;li&gt;그리고 그 상황에서 다음 칸을 이동할 때에도 도착한 상태에 따라 다음칸을 갈 수 있는지 없는지로 나뉜다.&lt;/li&gt;
  &lt;li&gt;즉, 특정칸에 방문했을 때, 상태가 두가지로 나뉜다는 것이다.&lt;/li&gt;
  &lt;li&gt;종료는 bfs 특성상, 같은 너비인 상태에서(경로 cost가 같은 상태에서) 진행되기 때문에 목표 위치까지 도착하는 순간이 최단 거리이다.&lt;/li&gt;
  &lt;li&gt;그렇다면 q에 넣는 노드의 정보에, 지금 벽을 뚫었는지 여부가 중요하게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  main.cpp&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  algorithm_prac&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Created by 최완식 on 2021/04/05.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;queue&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//void PPP(){&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//    cout &amp;lt;&amp;lt; &quot;=====graph======&quot; &amp;lt;&amp;lt; '\n';&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//    for (int i = 1; i &amp;lt;= N; i++) {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        for (int j = 1; j &amp;lt;= M; j++) {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//            cout &amp;lt;&amp;lt; graph[i][j] &amp;lt;&amp;lt; &quot; &quot;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        }cout &amp;lt;&amp;lt; '\n';&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//    }&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//    cout &amp;lt;&amp;lt; &quot;=====visited======&quot; &amp;lt;&amp;lt; '\n';&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//    for (int i = 1; i &amp;lt;= N; i++) {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        for (int j = 1; j &amp;lt;= M; j++) {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//            cout &amp;lt;&amp;lt; visited[i][j][0] &amp;lt;&amp;lt; &quot; &quot;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        }cout &amp;lt;&amp;lt; &quot;  &quot;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        for (int j = 1; j &amp;lt;= M; j++) {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//            cout &amp;lt;&amp;lt; visited[i][j][1] &amp;lt;&amp;lt; &quot; &quot;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        }cout &amp;lt;&amp;lt; '\n';&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//    }&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
        
    &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
        
        &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        
&lt;span class=&quot;c1&quot;&gt;//        PPP();&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;// 탐색하다가 (N,M)에 가장 먼저 도착하면 그때의 이동거리가 최단거리이다.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
        
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// map안에 있는가?&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 다음으로 갈수 있고 방문하지 않았다면 -&amp;gt; 내 blocknum 상태&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 다음으로 갈수 없지만 아직 벽을 뚫지 않았다면&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 나머지 경우는 탐색할 필요가 없다.&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// 다음으로 갈수 있지만 방문했다면 -&amp;gt; 방문한 녀석은 볼필요 없다.&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// 다음으로 갈수 없지만 벽을이미 뚫었다 -&amp;gt; 방문 불가능&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//7 8&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//01000100&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//01010100&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//01010100&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//01010100&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//01010100&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//01010100&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//00010100&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/3190&quot; target=&quot;\_blank&quot;&gt;백준(3190번) - 벽 부수고 이동하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/04/21/%EB%B0%B1%EC%A4%80-%EB%B2%BD%EB%B6%80%EC%88%98%EA%B3%A0-%EC%9D%B4%EB%8F%99%ED%95%98%EA%B8%B0.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/04/21/%EB%B0%B1%EC%A4%80-%EB%B2%BD%EB%B6%80%EC%88%98%EA%B3%A0-%EC%9D%B4%EB%8F%99%ED%95%98%EA%B8%B0.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>bfs</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(3190번): 뱀</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;실버1&lt;/em&gt;&lt;/strong&gt; : 구현 문제이다.&lt;/p&gt;

&lt;p&gt;너무 짜증난다. 문제 제대로 읽어. 제발제발젭라..&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;뱀이 지나가는 경로를 잡아줄 자료구조
    &lt;ol&gt;
      &lt;li&gt;map에 표시해서 갈 수 있는지 없는지 알아야 한다.&lt;/li&gt;
      &lt;li&gt;tail의 위치를 tracking할 수 있어야 한다. -&amp;gt; queue&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;시간&lt;/li&gt;
  &lt;li&gt;현재 보고 있는 방향&lt;/li&gt;
  &lt;li&gt;방향에 따른 우회전 좌회전&lt;/li&gt;
  &lt;li&gt;action을 알려줄 방향&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  main.cpp&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  algorithm_prac&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Created by 최완식 on 2021/04/05.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'('&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;')'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/3190&quot; target=&quot;\_blank&quot;&gt;백준(3190번) - 뱀&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/04/20/%EB%B0%B1%EC%A4%80-%EB%B1%80.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/04/20/%EB%B0%B1%EC%A4%80-%EB%B1%80.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>구현</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [Face Detection and Tracking with SSD Network] 08: 중간 보고서</title>
        <description> 프로젝트 중간 점검과 진행 방향을 결정한다. : &lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;얼굴 탐지 및 추적은 AR, VR등 뿐만 아니라 CCTV, 온라인 광고 판의 마케팅 지표로 사용될 만큼 중요하게 여겨지는 연구 주제이다. 하지만 여러 사람이 한 프레임 안에서 활동하고 있을 때, 가려짐을 해소할 수 없다는 문제가 여전히 남아있다. 또한 저가형 카메라와 같은 장비에서 위와 같은 기능을 하기 위해서 GPU를 사용할 수 없다는 단점이 존재한다. 따라서 아래의 연구에서는 CPU만을 통한 Object detection의 최적화를 통해 Face Tracking을 구현하는데 그 목적을 둔다.&lt;/p&gt;

&lt;h1 id=&quot;논문-조사&quot;&gt;논문 조사&lt;/h1&gt;

&lt;h2 id=&quot;sortsimple-online-and-realtime-tracking&quot;&gt;SORT(Simple Online and Realtime Tracking)&lt;/h2&gt;

&lt;p&gt;SORT(Simple Online and Realtime Tracking)은 매우 알고리즘이 간단함에도 불구하고 효과적이고 실용적인 다중 대상 추적 알고리즘이다. IOU를 기반으로 추적된 물체에 대해 association(할당)을 진행하기 때문에 매우 빠르다. 하지만 Id Switching(원래의 타겟을 잡지 못하고 다른 id를 배정하는 문제)가 여전히 많이 발생한다는 문제가 있다. 그 원인으로는 아래의 요인이 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;물체가 빠르게 움직였을 경우 IoU는 작게 판단될 수 있다.&lt;/li&gt;
  &lt;li&gt;Occulusion(가려짐)이 발생했을 때 Detector가 Box를 작게 탐지했다면 IoU가 작게 나와 결과가 무시될 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/111637945-3942e500-883d-11eb-962d-23aaadf57d6a.jpg&quot; alt=&quot;Untitled Diagram&quot; class=&quot;center&quot; /&gt;&lt;em&gt;SORT flowchart&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;deepsortsimple-online-and-realtime-tracking-with-a-deep-association-metric&quot;&gt;DeepSort(Simple Online and Realtime Tracking with A Deep association metric)&lt;/h2&gt;

&lt;p&gt;DeepSort는 이러한 SORT의 단점을 개선한 알고리즘으로 Cascade Matching 전략을 통해 이를 해결한다. 보행자 추적을 위해 구현된 이 알고리즘은 IoU이외에도 보행자를 기반으로 한 Feature Discriptor를 제작하여 정확도를 높혔다. 칼만 필터로 예측한 Track에 담겨 있는 이전 프레임의 외형 정보(128dim feature)를 기반으로 현재 탐지된 객체와의 유사도를 검증한다. 이 때 두 객체의유사도를 판단하는데 있어 Cosine similarity를 사용하며, 최종 매칭은 헝가리안 알고리즘을 사용한다. Track 객체를 삭제하는데 있어서 생애주기라는 개념을 도입한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/111668333-fee74100-8858-11eb-93cc-586040420bc1.jpg&quot; alt=&quot;DEEPSORT (2)&quot; class=&quot;center&quot; /&gt;&lt;em&gt;DeepSort flowchart&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;arcface&quot;&gt;ArcFace&lt;/h2&gt;

&lt;p&gt;ArcFace는 Face Recognition에 있어 triplet loss기반을 사용한 방법이다. Open set(얼굴에 대해 지도학습을 한 것이 아닌 embeding vector를 학습하기 위한 방법)으로, 데이터가 추가되더라도 reconition이 가능하다는 특징이 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116079880-550a9800-a6d3-11eb-8b42-c293810aacb6.png&quot; alt=&quot;image&quot; /&gt;{ .center }&lt;em&gt;Arcface architecture&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;mtcnn&quot;&gt;MTCNN&lt;/h2&gt;

&lt;p&gt;MTCNN은 CNN을 활용하여 얼굴 검출 분야에서 정확도와 성능을 끌어올린 논문이다. Face Detection, Face Alignment, Bounding box regression 세가지 테스크를 동시에 학습시켜 각각의 시너지를 발휘하는 방법이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116232735-79c74400-a795-11eb-8655-3646863c6b5f.png&quot; alt=&quot;image&quot; /&gt;{ .center }&lt;em&gt;MTCNN architecture&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;연구-방향&quot;&gt;연구 방향&lt;/h1&gt;

&lt;p&gt;실시간 Face Detector를 구현하기 위해서 필요한 것은 다음과 같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Face Detector&lt;/li&gt;
  &lt;li&gt;Feature Extractor&lt;/li&gt;
  &lt;li&gt;Deepsort 재구현 및 기여 방안&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;face-detector&quot;&gt;Face Detector&lt;/h2&gt;

&lt;iframe width=&quot;660&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/GZ2p2hj2H5k&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;CPU 기반 성능을 담보하기 위해 다양한 알고리즘을 검토한 결과 SSD network를 사용하였다. 하지만, 영상에서 보듯 속도는 빠르지만 Detection 성능에 있어서 깜빡깜빡하는 양상을 보인다. Deepsort 연구진들은 Detection 성능에 따라 Tracking 성능이 좌우된다고 말한바 있다. 따라서 이 부분에서 MTCNN으로 방향을 변경하였다.&lt;/p&gt;

&lt;p&gt;하지만 MTCNN의 경우 사진 한장당 Inference time이 0.5초로 python으로 구현된 경우 상당히 느려 사용할 수 없었다. 이에 MTCNN을 C++ 구현을 통해 빌드하고, CPython을 사용하여 C++ 확장하여 Python에서 이를 호출하는 방식으로 구현 방향을 잡았다.&lt;/p&gt;

&lt;h2 id=&quot;feature-extractor&quot;&gt;Feature Extractor&lt;/h2&gt;

&lt;p&gt;Deepsort 논문에서 IoU 매칭의 대안으로 내놓은 Appearance Descriptor는 5개의 CNN 아키텍쳐를 기반으로 해당 patch(Detection이 된 객체)를 128차원의 Feature 공간으로 Embedding하는 것을 의미한다. 기존의 방법으로 Face Tracking을 해본 결과, image 공간이 제대로 추출되지 않아 쉬운 상황임에도 같은 Track 물체가 잡힘을 확인할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116656908-75cf3800-a9c8-11eb-8f4f-03738054662d.png&quot; alt=&quot;KakaoTalk_Photo_2021-04-30-15-20-11&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116656916-7962bf00-a9c8-11eb-9504-036446a5c57e.png&quot; alt=&quot;KakaoTalk_Photo_2021-04-30-15-20-06&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/116656919-7a93ec00-a9c8-11eb-8ab7-6f7365496817.png&quot; alt=&quot;KakaoTalk_Photo_2021-04-30-15-20-01&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;기존의 Sort 방법과 달리, 마할라노비스 거리를 Metric으로 사용하지 않았기 때문에(SORT 알고리즘에서 매칭을 할 때 사용한 Metric. Deepsort에서는 Appearance Descriptor만을 사용해도 결과가 잘 나와 값을 0으로 줌)이 Feature 가 굉장히 중요하다.&lt;/p&gt;

&lt;p&gt;이 부분에서 기존의 Face Recognition에서 사용하는 SOT 방법인 Arcface의 Model을 feature extraction에 사용한다. Arcface는 Open set에 대해 Face Recognition을 진행하는 방법으로 기본적으로 Metric Learning을 지향하는 방법이다. 저자들은 Additive Angular Margin Loss를 사용하여 기존의 Loss function보다 정확도를 높힘과 동시에 negligible computational overhead를 달성했다.&lt;/p&gt;

&lt;h2 id=&quot;deepsort-재구현-및-기여-방안&quot;&gt;Deepsort 재구현 및 기여 방안&lt;/h2&gt;

&lt;h3 id=&quot;생애주기-변경&quot;&gt;생애주기 변경&lt;/h3&gt;

&lt;p&gt;기존 Deepsort에서 물체를 탐지하지 못한 경우 30Frame이 지날 경우 삭제하고 새로운 id를 부여했다. 하지만 이 주기가 너무 짧아 얼굴이 등장하는 영상에서 지속적으로 탐색을 실패하는 경향을 보였다. 하지만 생애주기를 지나치게 길게 잡을 경우, 하나의 Detection에 대해 여러개의 Track객체가 형성될 수 있어 공간적, 의미론적으로 옳지 않은 결과가 도출된다. 따라서 이 생애주기의 최적점을 선정하고, Track이 지나치게 많아지지 않는 방법을 반영한다.&lt;/p&gt;

&lt;h3 id=&quot;내부-구조-변화&quot;&gt;내부 구조 변화&lt;/h3&gt;
&lt;p&gt;현재 Deepsort는 정적 파일에 대해 Tracking을 진행하는 방식이다. 이를 실시간으로 변용하기 위해서는 기존의 파일을 변경해야 한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Opencv를 통한 Frame by Frame Load&lt;/li&gt;
  &lt;li&gt;MTCNN을 통한 Detection&lt;/li&gt;
  &lt;li&gt;Patching 후 Arcface Network를 통한 Feature Extraction&lt;/li&gt;
  &lt;li&gt;2, 3의 결과를 묶은 numpy 배열 전달&lt;/li&gt;
  &lt;li&gt;Track 객체 생성 및 매칭&lt;/li&gt;
  &lt;li&gt;실시간 화면 표시 및 fps 모니터링&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;최종-제안-방향&quot;&gt;최종 제안 방향&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=zi-62z-3c4U&quot;&gt;실시간 구현&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Skip frame 방법과 Face Metric Learning을 통한 Realtime Face Tracker 제작&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;최종적으로 본 연구에서는 Skip frame 방법을 통해 실시간 Face Tracking 방법을 제안하며, 이 때 SOT의 Face Recognition Network인 Arcface를 통해 학습된 weight를 통해 Feature extration을 진행한다.&lt;/p&gt;
</description>
        <pubDate>Mon, 19 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/projects/2021/04/19/Face-Detection-and-tracking-with-ssd-network-08-middle-term-report.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/projects/2021/04/19/Face-Detection-and-tracking-with-ssd-network-08-middle-term-report.html</guid>
        
        <category>project</category>
        
        <category>CV</category>
        
        
        <category>CV/Projects</category>
        
      </item>
    
      <item>
        <title> [Face Detection and Tracking with SSD Network] 07: 중간 점검 및 추후 방향성 검토</title>
        <description> 추후 방향성을 정립한다. : &lt;h1 id=&quot;동작-확인&quot;&gt;동작 확인&lt;/h1&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img width=&quot;748&quot; alt=&quot;KakaoTalk_Photo_2021-04-23-13-11-49&quot; src=&quot;https://user-images.githubusercontent.com/37871541/115817337-9da52580-a435-11eb-9863-8df910c092b7.png&quot; class=&quot;center-small&quot; /&gt;
&lt;img width=&quot;748&quot; alt=&quot;KakaoTalk_Photo_2021-04-23-13-11-55&quot; src=&quot;https://user-images.githubusercontent.com/37871541/115817339-9ed65280-a435-11eb-9a27-82d583bf3271.png&quot; class=&quot;center-small&quot; /&gt;
&lt;img width=&quot;747&quot; alt=&quot;KakaoTalk_Photo_2021-04-23-13-12-01&quot; src=&quot;https://user-images.githubusercontent.com/37871541/115817343-a138ac80-a435-11eb-8f30-e4a23a53f49a.png&quot; class=&quot;center-small&quot; /&gt;
&lt;img width=&quot;746&quot; alt=&quot;KakaoTalk_Photo_2021-04-23-13-12-06&quot; src=&quot;https://user-images.githubusercontent.com/37871541/115817345-a3027000-a435-11eb-9afa-b979b9b53166.png&quot; class=&quot;center-small&quot; /&gt;
&lt;img width=&quot;754&quot; alt=&quot;KakaoTalk_Photo_2021-04-23-13-12-14&quot; src=&quot;https://user-images.githubusercontent.com/37871541/115817353-a695f700-a435-11eb-9e8e-57932cdf2ebc.png&quot; class=&quot;center-small&quot; /&gt;
&lt;img width=&quot;744&quot; alt=&quot;KakaoTalk_Photo_2021-04-23-13-12-20&quot; src=&quot;https://user-images.githubusercontent.com/37871541/115817356-a85fba80-a435-11eb-8cfe-bea0660d927b.png&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;문제점&quot;&gt;문제점&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Input video에 대해 detection 결과를 이끌어내는 과정까지가 너무 오래걸린다.
    &lt;ul&gt;
      &lt;li&gt;MTCNN 사용시 1장 당 inference 약 0.5초&lt;/li&gt;
      &lt;li&gt;detection 결과를 기반으로 feature extraction 시간 역시 소요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;보행자와 달리 얼굴을 여러 각도로 돌리기 때문에 Feature를 좀더 명확하게 뽑을 필요가 있다.&lt;/li&gt;
  &lt;li&gt;또한 가려짐 효과를 적용하기 위한 Track 객체의 생애주기를 늘려야 할 필요가 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;해결-방안-탐색&quot;&gt;해결 방안 탐색&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;MTCNN 말고 다른 네트워크를 사용한다.
    &lt;ul&gt;
      &lt;li&gt;inference 시간이 더 필요하다. gpu는 사용하고 싶지 않다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;C로 구현된 것을 찾아본다.
    &lt;ul&gt;
      &lt;li&gt;가장 좋은 판단이다.&lt;/li&gt;
      &lt;li&gt;ncnn을 기반으로 구현된 오픈 소스가 있다.&lt;a href=&quot;https://github.com/LicheeX/MTCNN-NCNN&quot;&gt;MTCNN-NCNN&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;추후-구현-방안&quot;&gt;추후 구현 방안&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;목표 : 실시간으로 돌아가는 face tracker를 제작한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Feature extraction cbtxt로 저장, 후 로드 이해
    &lt;ol&gt;
      &lt;li&gt;저장이 된다면 저장한 후에 로드해서 돌려보기&lt;/li&gt;
      &lt;li&gt;저장이 안되면.. 모르겠다 일단.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;지금 face detection 만들 파일로 C++ 딥소트 돌려보기
    &lt;ol&gt;
      &lt;li&gt;문제가 발생한다 -&amp;gt; MTCNN만 돌려서 python 기반 실시간 구현으로 방향 전환&lt;/li&gt;
      &lt;li&gt;잘 된다. -&amp;gt; 소스코드를 뜯어서 이미지 한장 단위로 들어갈 수 있는지 확인한다.
        &lt;ol&gt;
          &lt;li&gt;한장 단위로 inference가 불가능하다. -&amp;gt; Python으로 간다.&lt;/li&gt;
          &lt;li&gt;한장단위로 가능하다. c++ 시도&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;6월 이전 완성을 고려하면, MTCNN만 C++로 변경한 뒤, 실시간 방법을 고민하는 것이 현실적이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Detection 속도를 줄이기 위해, C++ 기반 딥러닝 아키텍쳐인 ncnn을 기반으로 MTCNN 결과를 추출한다.&lt;/li&gt;
  &lt;li&gt;이후 Python에서 c++ 함수를 사용할 수 있도록 조치한다.&lt;/li&gt;
  &lt;li&gt;Feature Extraction을 가중치 파일로 변환한다.&lt;/li&gt;
  &lt;li&gt;실시간 로직을 짠다.&lt;/li&gt;
  &lt;li&gt;추가로 정확도를 높히기 위해 Model을 훈련하여 저장해둔다.&lt;/li&gt;
  &lt;li&gt;Inference time 체크하여 실시간인지 확인한다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 19 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/projects/2021/04/19/Face-Detection-and-tracking-with-ssd-network-07-cpp_%EC%A1%B0%EC%82%AC.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/projects/2021/04/19/Face-Detection-and-tracking-with-ssd-network-07-cpp_%EC%A1%B0%EC%82%AC.html</guid>
        
        <category>project</category>
        
        <category>CV</category>
        
        
        <category>CV/Projects</category>
        
      </item>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(1992번): 쿼드트리</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;실버1&lt;/em&gt;&lt;/strong&gt; : 분할정복 문제이다.&lt;/p&gt;

&lt;p&gt;처음에 너무 삽질했다.. 그냥 구조적으로 부족한 것 같다.&lt;/p&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  main.cpp&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  algorithm_prac&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Created by 최완식 on 2021/04/05.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'('&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;')'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1992&quot; target=&quot;\_blank&quot;&gt;백준(1992번) - 쿼드트리&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 19 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/04/19/%EB%B0%B1%EC%A4%80-%EC%BF%BC%EB%93%9C%ED%8A%B8%EB%A6%AC.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/04/19/%EB%B0%B1%EC%A4%80-%EC%BF%BC%EB%93%9C%ED%8A%B8%EB%A6%AC.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>분할정복</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(2565번): 전깃줄</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;실버1&lt;/em&gt;&lt;/strong&gt; : 동적계획법 문제이다.&lt;/p&gt;

&lt;p&gt;max_element 최대한 쓰지 말자.
그리고 sizeof는 바이트수를 리턴해준다. 제발..ㅠㅠ&lt;/p&gt;

&lt;h1 id=&quot;code1&quot;&gt;Code1&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;dp[n] = n번째 전깃줄을 포함한 상태로 가질 수 있는 최대 전깃줄 갯수&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;dp[n] = max(dp[1~n-1] + 1)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;501&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;501&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ios_base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync_with_stdio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;code2&quot;&gt;Code2&lt;/h1&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;8 2 9 1 4 6 7 10
2 4 6 7 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가장 긴 증가하는 부분 수열(LIS)로 풀 수도 있다. 예전에 고등학교 때 함수 개수 찾는 문제가 있다. 치역 부분에서 정의역 원소만큼의 개수를 뽑아주게되면 자연스레 원하는 함수가 만들어진다. 약간 그 느낌과 비슷한데, 해당 모양에서 답인 상황은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 4 6 7 10&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2 4 6 7 10&lt;/code&gt; 과 같은 상황이다. 특징을 살펴보면 값이 증가하고 있다. 각각의 A 전봇대에서 가리키는 B 값들 중에서 증가하는  수열 중 가장 긴 것을 찾는다면, 그것이 최대 전깃줄의 개수일 것이다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_pair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_pair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2565&quot; target=&quot;\_blank&quot;&gt;백준(2565번) - 전깃줄&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 19 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/04/19/%EB%B0%B1%EC%A4%80-%EC%A0%84%EA%B9%83%EC%A4%84.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/04/19/%EB%B0%B1%EC%A4%80-%EC%A0%84%EA%B9%83%EC%A4%84.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>동적계획법</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 10: 분석모형 평가 및 개선</title>
        <description> 결과 해석, 결과 시각화, 활용 방법에 대해 알아본다. : &lt;h1 id=&quot;분석-모형-해석&quot;&gt;분석 모형 해석&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 시각화에 대해 배우자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;데이터-시각화-유형&quot;&gt;데이터 시각화 유형&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;시간 시각화
    &lt;ul&gt;
      &lt;li&gt;막대그래프 (ggplot2 패키지, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;geom_bar()&lt;/code&gt;) - 월별 교통사고&lt;/li&gt;
      &lt;li&gt;선 그래프&lt;/li&gt;
      &lt;li&gt;영역 차트 - 분기별 매출&lt;/li&gt;
      &lt;li&gt;계단식 그래프&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분포 시각화
    &lt;ul&gt;
      &lt;li&gt;파이 차트&lt;/li&gt;
      &lt;li&gt;도넛 차트&lt;/li&gt;
      &lt;li&gt;트리맵&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;관계 시각화 - 변수와 변수 관계
    &lt;ul&gt;
      &lt;li&gt;산점도&lt;/li&gt;
      &lt;li&gt;버블 차트 - 산점도 확장&lt;/li&gt;
      &lt;li&gt;히스토그램&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비교 시각화
    &lt;ul&gt;
      &lt;li&gt;플로팅 바 차트 - 막대그래프와 비슷하나 여기서는 시간 개념이 없는 것을 말하는 듯&lt;/li&gt;
      &lt;li&gt;히트맵&lt;/li&gt;
      &lt;li&gt;평행 좌표 그래프 - 다변량 데이터를 2차원 평면에 표현&lt;/li&gt;
      &lt;li&gt;체르노프 페이스&lt;/li&gt;
      &lt;li&gt;스타 차트 - 도형으로 각 값을 비교&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;공간 시각화
    &lt;ul&gt;
      &lt;li&gt;등치지역도 - 같은 지역 크기에 색으로 표현&lt;/li&gt;
      &lt;li&gt;등치선도 - 같은 대기압 선으로 표현&lt;/li&gt;
      &lt;li&gt;도트맵 - 행정구역 위에 정류장 위치&lt;/li&gt;
      &lt;li&gt;카토그램 - 선거 인단 수 표현&lt;/li&gt;
      &lt;li&gt;버블 맵 - 지역별 판매 수익 표현&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;시각화-절차&quot;&gt;시각화 절차&lt;/h2&gt;

&lt;p&gt;구조화 -&amp;gt; 시각화 -&amp;gt; 시각표현&lt;/p&gt;

&lt;h1 id=&quot;분석-모형-모니터링&quot;&gt;분석 모형 모니터링&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;샤이니(shiny)
    &lt;ul&gt;
      &lt;li&gt;R로 개발한 분석 모델을 실핼가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;주기별 성능 분석
    &lt;ul&gt;
      &lt;li&gt;일간
        &lt;ul&gt;
          &lt;li&gt;시간대별 성능 추이 -&amp;gt; 안정성, 품질 판단&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;주간&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-10-%EB%B6%84%EC%84%9D%EB%AA%A8%ED%98%95%ED%8F%89%EA%B0%80-%EB%B0%8F-%EA%B0%9C%EC%84%A0.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-10-%EB%B6%84%EC%84%9D%EB%AA%A8%ED%98%95%ED%8F%89%EA%B0%80-%EB%B0%8F-%EA%B0%9C%EC%84%A0.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 09: 분석결과 해석 및 활용</title>
        <description> 모델의 평가 방법, 개선 방법에 대해 알아보자. : &lt;h1 id=&quot;분석-모형-평가&quot;&gt;분석 모형 평가&lt;/h1&gt;

&lt;p&gt;모델을 평가하는데 사용하는 평가 지표에 대해 알아보자.&lt;/p&gt;
&lt;h2 id=&quot;예측-모형&quot;&gt;예측 모형&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;713&quot; alt=&quot;스크린샷 2021-04-15 오후 4 48 23&quot; src=&quot;https://user-images.githubusercontent.com/37871541/114833308-67025600-9e0a-11eb-814c-af59842d6f67.png&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SSE(Error Sum of Square) - 오차 제곱합 : 예측값과 실제값 차이&lt;/li&gt;
  &lt;li&gt;SST(Total Sum of Squares) - 전체 제곱합 : 평균과 실제값 차이&lt;/li&gt;
  &lt;li&gt;SSR(Regression Sum of Square) - 회귀 제곱합 : 예측값과 평균 차이&lt;/li&gt;
  &lt;li&gt;AR(Average Error) - 평균 오차 : 부호 있음&lt;/li&gt;
  &lt;li&gt;MAE(Mean Absolute Error) - 평균 절대 오차 : 부호 없음(절댓값)&lt;/li&gt;
  &lt;li&gt;RMSE(Root Mean Squared Error) - MSE(SSE 평균 낸 것)에 루트&lt;/li&gt;
  &lt;li&gt;MAPE(Mean Absolute Percentage Error) - 절대값으로 백분율&lt;/li&gt;
  &lt;li&gt;MPE(Mean Percentage Error) - 오차 부호 있음, 백분율&lt;/li&gt;
  &lt;li&gt;결정계수(R Square) - $SSR \over SST$
    &lt;ul&gt;
      &lt;li&gt;수정된 결정계수&lt;/li&gt;
      &lt;li&gt;결정 계수는 변수가 증가하기만 하면 증가함&lt;/li&gt;
      &lt;li&gt;적절하지 않은 변수에 대해 페널티를 부과한 지표&lt;/li&gt;
      &lt;li&gt;그래서 항상 결정계수보다 값은 작을 수 밖에 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;분류-모형&quot;&gt;분류 모형&lt;/h2&gt;

&lt;p&gt;혼동 행렬에 대해 알아보자.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;실제(▼) 예측(▶)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;O&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;X&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;O&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;True Positive&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;False Negative&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;X&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;False Positive&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;True Negative&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;정확도
    &lt;ul&gt;
      &lt;li&gt;T, F를 정확하게 예측한 비율&lt;/li&gt;
      &lt;li&gt;${TP + FN} \over {TP + TN + FP + FN}$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;민감도(Recall)
    &lt;ul&gt;
      &lt;li&gt;실제 예측 중 잘맞춘 비율&lt;/li&gt;
      &lt;li&gt;$TP \over {TP + FN}$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;특이도
    &lt;ul&gt;
      &lt;li&gt;실제 부정 중 잘맞춘 비율&lt;/li&gt;
      &lt;li&gt;$TN \over {FP + TN}$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정밀도
    &lt;ul&gt;
      &lt;li&gt;예측 긍정 중 잘맞춘 비율&lt;/li&gt;
      &lt;li&gt;$TP \over {TP + FP}$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;F1 Score
    &lt;ul&gt;
      &lt;li&gt;정밀도와 민감도 조화평균&lt;/li&gt;
      &lt;li&gt;$2\times{Precision \times Recall} \over {Precision + Recall}$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ROC 곡선
    &lt;ul&gt;
      &lt;li&gt;가로 : 1-특이도&lt;/li&gt;
      &lt;li&gt;세로 : 민감도(Recall)&lt;/li&gt;
      &lt;li&gt;왼쪽 위로 갈수록 좋음&lt;/li&gt;
      &lt;li&gt;그래서 넓이(AUC)로 판단, 1이면 좋은 모형&lt;/li&gt;
      &lt;li&gt;AUC는 0.5~1.0 사이 값 가짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;교차-검증&quot;&gt;교차 검증&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114836896-155bca80-9e0e-11eb-8dca-260eb30f0632.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;홀드 아웃 교차 검증
    &lt;ul&gt;
      &lt;li&gt;전체 데이터 비복원 추출로 Training/Test로 나눔&lt;/li&gt;
      &lt;li&gt;5:5, 3:7, 2:1&lt;/li&gt;
      &lt;li&gt;데이터 손실 발생&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;랜덤 서브샘플링&lt;/li&gt;
  &lt;li&gt;K-Fold
    &lt;ul&gt;
      &lt;li&gt;K의 부분집합으로 나누고 1개를 Test, 나머지는 Training&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;LOOCV
    &lt;ul&gt;
      &lt;li&gt;1개의 샘플만 TEST&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;LpOCV
    &lt;ul&gt;
      &lt;li&gt;p개의 샘플만 TEST&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;부트스트랩
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;복원 추출&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;전체 데이터가 N개, N개 부트스트랩 -&amp;gt; 한번도 안뽑히는 녀석 37.8%&lt;/li&gt;
      &lt;li&gt;그녀석을 test로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;모수-유의성-검증&quot;&gt;모수 유의성 검증&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114837090-489e5980-9e0e-11eb-948b-53fd0536b86d.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;기본 통계 내용이라 생략&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;적합도-검정&quot;&gt;적합도 검정&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;표본 집단 분포가 주어진 이론을 따르는지 검정한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;카이제곱 검정
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chisq.test()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정규성 검정
    &lt;ul&gt;
      &lt;li&gt;샤피로-윌크 검정
        &lt;ul&gt;
          &lt;li&gt;정규 분포를 따르는가?&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sharpiro.test()&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;콜모고로프-스미르노프 적합성 검정
        &lt;ul&gt;
          &lt;li&gt;특정 분포를 따르는지 검정하는 방법&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Q-Q plot
        &lt;ul&gt;
          &lt;li&gt;시각적으로 검정&lt;/li&gt;
          &lt;li&gt;대각선 참조선을 따라서 분포하면 만족&lt;/li&gt;
          &lt;li&gt;해석은 값이 아니기 때문에 주관적&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;분석-모형-개선&quot;&gt;분석 모형 개선&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;고도화 방법을 알아본다.
    &lt;h2 id=&quot;과대-적합-방지&quot;&gt;과대 적합 방지&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 증강&lt;/li&gt;
  &lt;li&gt;복잡도 감소
    &lt;ul&gt;
      &lt;li&gt;은닉층 수 감소&lt;/li&gt;
      &lt;li&gt;수용력 감소&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;가중치 규제
    &lt;ul&gt;
      &lt;li&gt;하이퍼 파라미터임&lt;/li&gt;
      &lt;li&gt;L1&lt;/li&gt;
      &lt;li&gt;L2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;드롭아웃&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;매개변수-최적화&quot;&gt;매개변수 최적화&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;경사하강법
    &lt;ul&gt;
      &lt;li&gt;SGD&lt;/li&gt;
      &lt;li&gt;모멘텀 - 관성 사용&lt;/li&gt;
      &lt;li&gt;AdaGrad - 학습률 점점 줄이는 방법&lt;/li&gt;
      &lt;li&gt;Adam - 모멘텀, AdaGrad 둘다적용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;분석-모형-융합&quot;&gt;분석 모형 융합&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;취합 방법론
    &lt;ul&gt;
      &lt;li&gt;다수결
        &lt;ul&gt;
          &lt;li&gt;직접 투표 - 단순 투표&lt;/li&gt;
          &lt;li&gt;간접 투표 - 가중치&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;배깅
        &lt;ul&gt;
          &lt;li&gt;복원추출 학습 데이터 셋 분리&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;페이스팅
        &lt;ul&gt;
          &lt;li&gt;비복원 추출 학습 데이터 셋 분리&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;랜덤 서브스페이스
        &lt;ul&gt;
          &lt;li&gt;다차원 독립 변수중 일부 차원을 선택&lt;/li&gt;
          &lt;li&gt;데이터는 모두 사용, 특성 샘플링&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;랜덤 패치
        &lt;ul&gt;
          &lt;li&gt;학습 데이터, 변수 모두 랜덤 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;랜덤 포레스트
        &lt;ul&gt;
          &lt;li&gt;의사결정나무를 개별 모형으로 합침&lt;/li&gt;
          &lt;li&gt;독립 변수를 모두 비교하여 최선의 독립변수 선택&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;부스팅 방법론
    &lt;ul&gt;
      &lt;li&gt;AdaBoost&lt;/li&gt;
      &lt;li&gt;Gradient Boost&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-09-%EB%B6%84%EC%84%9D%EA%B2%B0%EA%B3%BC%ED%95%B4%EC%84%9D-%EB%B0%8F-%ED%99%9C%EC%9A%A9.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-09-%EB%B6%84%EC%84%9D%EA%B2%B0%EA%B3%BC%ED%95%B4%EC%84%9D-%EB%B0%8F-%ED%99%9C%EC%9A%A9.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 08: 분석 기법 적용</title>
        <description> 분석 기법들에 대해 알아보자. : &lt;h1 id=&quot;회귀-분석&quot;&gt;회귀 분석&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;검증 방법
    &lt;ul&gt;
      &lt;li&gt;통계적으로 유의미?
        &lt;ul&gt;
          &lt;li&gt;F-통계량&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;회귀 계수가 유의미?
        &lt;ul&gt;
          &lt;li&gt;해당 계수의 T-통계량, p-value&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;설명력은?
        &lt;ul&gt;
          &lt;li&gt;결정 계수 - 총 변동 중 회귀식이 설명하는 정도&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;데이터를 잘 적합하는가?
        &lt;ul&gt;
          &lt;li&gt;잔차를 그래프로 그린다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;가정을 만족하는가?
        &lt;ul&gt;
          &lt;li&gt;등분산성, 독립성, 선형성, 비상관성, 정상성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;다중공선성은 없는가?
        &lt;ul&gt;
          &lt;li&gt;VIF 값 확인&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

\[R^2 = {SSR \over SST} = { \sum_{i=1}^n{(\hat{y_i}-\bar{y})^2}   \over \sum_{i=1}^n{(y_i-\bar{y})^2}}\]

&lt;p&gt;1에 가까울 수록 잘 설명하는 것임&lt;/p&gt;

&lt;h1 id=&quot;로지스틱-회귀-분석&quot;&gt;로지스틱 회귀 분석&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;y가 범주일 때 사용&lt;/li&gt;
  &lt;li&gt;odds를 사용함&lt;/li&gt;
  &lt;li&gt;회귀 부호가 0보다 작다 -&amp;gt; 역 S&lt;/li&gt;
  &lt;li&gt;회귀 부호가 0보다 크다 -&amp;gt; S&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;의사결정나무&quot;&gt;의사결정나무&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;의사 결정 나무 성장
    &lt;ul&gt;
      &lt;li&gt;분리 규칙에 따라 나무가 성장함&lt;/li&gt;
      &lt;li&gt;분리 규칙
        &lt;ul&gt;
          &lt;li&gt;이산형
            &lt;ul&gt;
              &lt;li&gt;카이제곱 통계량 p 값&lt;/li&gt;
              &lt;li&gt;지니 계수&lt;/li&gt;
              &lt;li&gt;엔트로피 지수&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;연속형
            &lt;ul&gt;
              &lt;li&gt;F-통계량&lt;/li&gt;
              &lt;li&gt;분산 감소량&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;가지치기
    &lt;ul&gt;
      &lt;li&gt;오류를 크게 할 위험이 높은 불필요한 가지를 제거함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;타당성 평가
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;이익 도표&lt;/strong&gt;, 위험 도표, 시험 자료를 이용하여 평가 진행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;해석 및 예측&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;부모 마디&lt;/li&gt;
  &lt;li&gt;중간 마디&lt;/li&gt;
  &lt;li&gt;자식 마디
    &lt;h2 id=&quot;불순도-계산&quot;&gt;불순도 계산&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114745230-71304000-9d89-11eb-8974-485a776761c5.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;의사결정나무-알고리즘&quot;&gt;의사결정나무 알고리즘&lt;/h2&gt;

&lt;p&gt;R에서 party 패키지에서 사용가능함.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CART(Classification And Regression Tree)
    &lt;ul&gt;
      &lt;li&gt;가장 널리 사용됨&lt;/li&gt;
      &lt;li&gt;범주형인 경우 &lt;strong&gt;지니 지수&lt;/strong&gt;, 연속형인 경우 이진 분리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;C4.5, C5.0
    &lt;ul&gt;
      &lt;li&gt;목표 변수는 &lt;strong&gt;범주형이어야만 함&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;다지 분리 가능&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;엔트로피 지수&lt;/strong&gt;만 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CHAID
    &lt;ul&gt;
      &lt;li&gt;AID 발전 알고리즘&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;가지치기 하지 않음.&lt;/strong&gt; 적당한 크기에서 중지&lt;/li&gt;
      &lt;li&gt;입력 변수가 범주형이어야만 함&lt;/li&gt;
      &lt;li&gt;분리 기준 : 불순도로 카이제곱 통계량 사용&lt;/li&gt;
      &lt;li&gt;다지 분리 : 다지 분리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;QUEST
    &lt;ul&gt;
      &lt;li&gt;CART 개선&lt;/li&gt;
      &lt;li&gt;변수 편향 없음&lt;/li&gt;
      &lt;li&gt;불순도로 &lt;strong&gt;카이제곱 통계량 사용&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114745892-19460900-9d8a-11eb-8364-c1f11fb62f1a.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;알고리즘 요약표&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;의사결정나무-활용&quot;&gt;의사결정나무 활용&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;세분화(Segmentation) - 그룹 분할&lt;/li&gt;
  &lt;li&gt;분류&lt;/li&gt;
  &lt;li&gt;예측&lt;/li&gt;
  &lt;li&gt;차원 축소 및 변수선택 - 목표 변수에 영향 미치는 변수만 선택함&lt;/li&gt;
  &lt;li&gt;교호 작용 효과의 파악 - 직관적인 알고리즘이기 때문에 규칙 파악이 가능함&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;의사결정나무의-장단점&quot;&gt;의사결정나무의 장단점&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;장점
    &lt;ul&gt;
      &lt;li&gt;해석의 용이성&lt;/li&gt;
      &lt;li&gt;상호작용 효과의 해석 가능&lt;/li&gt;
      &lt;li&gt;비모수적 모형
        &lt;ul&gt;
          &lt;li&gt;가정이 필요없이 알고리즘으로 돌아감&lt;/li&gt;
          &lt;li&gt;이상값에 민감하지 않음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;유연성
        &lt;ul&gt;
          &lt;li&gt;빠르게 만들 수 있음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;높은 정확도&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;비연속성
        &lt;ul&gt;
          &lt;li&gt;분리의 경계점 근방에서 예측 오류가 클 가능성 있음. (연속형 변수를 비연속적으로 취급)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;선형성 결여&lt;/li&gt;
      &lt;li&gt;비안정성
        &lt;ul&gt;
          &lt;li&gt;학습 자료에 지나치게 의존함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;인공-신경망&quot;&gt;인공 신경망&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;1세대
    &lt;ul&gt;
      &lt;li&gt;퍼셉트론&lt;/li&gt;
      &lt;li&gt;순방향 신경말&lt;/li&gt;
      &lt;li&gt;XOR 문제&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;2세대
    &lt;ul&gt;
      &lt;li&gt;다층 퍼셉트론&lt;/li&gt;
      &lt;li&gt;역전파&lt;/li&gt;
      &lt;li&gt;과적합 문제&lt;/li&gt;
      &lt;li&gt;기울기 소실&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;svm&quot;&gt;SVM&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;커널 함수 니맘대로 설정&lt;/li&gt;
  &lt;li&gt;커널 함수를 사용하면 저차원에서 고차원으로 매핑할 경우 증가하는 연산량 커버 가능&lt;/li&gt;
  &lt;li&gt;훈련속도 느림&lt;/li&gt;
  &lt;li&gt;선형 분리 어려운 경우는 차원을 고차원으로 매핑하여 해결&lt;/li&gt;
  &lt;li&gt;과대 적합 가능성 낮음&lt;/li&gt;
  &lt;li&gt;슬랙 변수를 통해 소프트하게 선형적으로 분리를 돕는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;연관-분석&quot;&gt;연관 분석&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;지지도
    &lt;ul&gt;
      &lt;li&gt;$P(A \cap B)$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;신뢰도
    &lt;ul&gt;
      &lt;li&gt;A를 샀을 때 B를 살 신뢰도&lt;/li&gt;
      &lt;li&gt;$P(A \cap B) \over P(A)$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;향상도
    &lt;ul&gt;
      &lt;li&gt;두 품목의 상관관계를 기준으로 도출된 규칙의 예측력을 평가&lt;/li&gt;
      &lt;li&gt;1보다 크면 좋다고 판단&lt;/li&gt;
      &lt;li&gt;$P(B \mid A) \over P(B)$&lt;/li&gt;
      &lt;li&gt;$신뢰도 \over P(B)$&lt;/li&gt;
      &lt;li&gt;$P(A \cap B) \over P(A)P(B)$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;군집-분석&quot;&gt;군집 분석&lt;/h1&gt;

&lt;p&gt;n개의 군집으로 나누어 집단 특성을 분석하는 방법&lt;/p&gt;

&lt;h2 id=&quot;계층적-군집&quot;&gt;계층적 군집&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114747494-dd13a800-9d8b-11eb-9a26-113c88abf85b.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;병합적 방법
    &lt;ul&gt;
      &lt;li&gt;작은 군집으로부터 시작&lt;/li&gt;
      &lt;li&gt;거리가 가까우면 유사성이 높음&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stats&lt;/code&gt; 패키지 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hclust()&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cluster&lt;/code&gt; 패키지 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mclust()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분할적 방법
    &lt;ul&gt;
      &lt;li&gt;분리해 나가는 방법&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cluster&lt;/code&gt; 패키지 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diana()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mona()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;계통도(덴드로그램)&lt;/li&gt;
  &lt;li&gt;거리측정 방법
    &lt;ul&gt;
      &lt;li&gt;최단연결법 - 군집 관측값끼리의 최단 거리&lt;/li&gt;
      &lt;li&gt;최장연결법 - 군집 관측값끼지의 최장 거리&lt;/li&gt;
      &lt;li&gt;중심연결법 - 군집 중심 간의 거리&lt;/li&gt;
      &lt;li&gt;평균연결법 - 모든 항목에 대한 거리 평균을 구함&lt;/li&gt;
      &lt;li&gt;와드연결법 - 군집 내 오차 제곱합에 기초하여 군집 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;거리 종류
    &lt;ul&gt;
      &lt;li&gt;연속형
        &lt;ul&gt;
          &lt;li&gt;수학적 거리
            &lt;ul&gt;
              &lt;li&gt;유클리드 거리&lt;/li&gt;
              &lt;li&gt;맨하튼 거리&lt;/li&gt;
              &lt;li&gt;민코프스키 거리&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;통계적 거리
            &lt;ul&gt;
              &lt;li&gt;표준화 거리&lt;/li&gt;
              &lt;li&gt;마할라노비스 거리&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;명목형
        &lt;ul&gt;
          &lt;li&gt;단순 일치 계수&lt;/li&gt;
          &lt;li&gt;자카드 계수 - 집합 사이의 유사도 측정&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;순서형
        &lt;ul&gt;
          &lt;li&gt;순위상관계수&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;k-means---생략&quot;&gt;K-means - 생략&lt;/h1&gt;

&lt;h1 id=&quot;em-알고리즘---생략&quot;&gt;EM 알고리즘 - 생략&lt;/h1&gt;

&lt;h1 id=&quot;somself-organizing-maps&quot;&gt;SOM(Self-Organizing Maps)&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114751075-a93a8180-9d8f-11eb-84f3-e7830b709c8d.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;대뇌피질, 시각피질 학습과정&lt;/li&gt;
  &lt;li&gt;고차원 데이터를 저차원의 뉴런으로 정렬, 지도의 형태&lt;/li&gt;
  &lt;li&gt;위치관계를 그대로 보존함&lt;/li&gt;
  &lt;li&gt;실제 공간의 입력변수가 가까이 있으면 지도 상에 가까운 위치에 있다.&lt;/li&gt;
  &lt;li&gt;입력층
    &lt;ul&gt;
      &lt;li&gt;입력변수와 동일하게 뉴런 개수 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;경쟁층
    &lt;ul&gt;
      &lt;li&gt;2차원 격자로 클러스터링되는 층&lt;/li&gt;
      &lt;li&gt;경쟁 학습으로 각각의 뉴런이 입력 벡터와 얼마나 가까운가 계산한다.&lt;/li&gt;
      &lt;li&gt;경쟁 과정을 거치며 입력 패턴과 가장 유사한 경쟁층 뉴런이 승자가 됨&lt;/li&gt;
      &lt;li&gt;경쟁층에는 승자 독식 구조로 인해 승자 뉴런만이 나타남&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;범주형-자료-분석&quot;&gt;범주형 자료 분석&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;상대위험도
    &lt;ul&gt;
      &lt;li&gt;$관심집단의위험률 \over 비교집단의위험률$&lt;/li&gt;
      &lt;li&gt;${a \over {a+b}} / {c \over {c+d}}$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Odds
    &lt;ul&gt;
      &lt;li&gt;$p \over {1-p}$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Odds Ratio
    &lt;ul&gt;
      &lt;li&gt;$관심집단의승산 \over 비교집단의승산$&lt;/li&gt;
      &lt;li&gt;관심집단의 승산 = ${a \over {a+b}} / {b \over {a+b}} ={a \over b}$&lt;/li&gt;
      &lt;li&gt;비교집단의 승산 = ${c \over {c+d}} / {d \over {c+d}} ={c \over d}$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;시계열-분석&quot;&gt;시계열 분석&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;정상성
    &lt;ul&gt;
      &lt;li&gt;시점에 상관없이 특성이 일정하다는 의미&lt;/li&gt;
      &lt;li&gt;평균 일정&lt;/li&gt;
      &lt;li&gt;분산이 시점에 의존하지 않는다.&lt;/li&gt;
      &lt;li&gt;공분산은 시차에만 의존&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;모형
    &lt;ul&gt;
      &lt;li&gt;자기 회귀 모형 (AR)
        &lt;ul&gt;
          &lt;li&gt;현재가 p개의 이전 자료로 설명 가능&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;이동평균모형(Moving Average Model)
        &lt;ul&gt;
          &lt;li&gt;시간이 지날수록 평균값이 지속적인 증가 혹은 감소&lt;/li&gt;
          &lt;li&gt;정상성 가정 필요 없음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;자기 회귀 누적 이동평균모형(ARIMA)
        &lt;ul&gt;
          &lt;li&gt;비정상 시계열 모델&lt;/li&gt;
          &lt;li&gt;차분, 변환을 통해 AR, MA, ARMA 모형으로 정상화 가능&lt;/li&gt;
          &lt;li&gt;ARIMA(p, d, q)
            &lt;ul&gt;
              &lt;li&gt;p : AR 모형&lt;/li&gt;
              &lt;li&gt;q : MA 모형&lt;/li&gt;
              &lt;li&gt;d : ARIMA -&amp;gt; ARMA 과정에서 차분의 횟수&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;분해 시계열
        &lt;ul&gt;
          &lt;li&gt;추세 요인
            &lt;ul&gt;
              &lt;li&gt;선형적 추세, 이차식 형태, 지수적 형태&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;계절 요인
            &lt;ul&gt;
              &lt;li&gt;요일마다 반복, 월에 의한 변화, 분기마다 변화&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;순환 요인
            &lt;ul&gt;
              &lt;li&gt;잘 모르는 주기를 가지고 변화&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;불규칙 요인
            &lt;ul&gt;
              &lt;li&gt;위의 세 요인으로 설명할 수 없는 오차&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;베이지안-기법---생략&quot;&gt;베이지안 기법 - 생략&lt;/h1&gt;

&lt;h1 id=&quot;딥러닝---생략&quot;&gt;딥러닝 - 생략&lt;/h1&gt;

&lt;h1 id=&quot;앙상블-분석---생략&quot;&gt;앙상블 분석 - 생략&lt;/h1&gt;

&lt;h1 id=&quot;비모수-통계&quot;&gt;비모수 통계&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;단일 표본 부호 검정
    &lt;ul&gt;
      &lt;li&gt;부호 검정
        &lt;ul&gt;
          &lt;li&gt;중위수와의 차이 부호만을 이용하여 중위수 위치 검정&lt;/li&gt;
          &lt;li&gt;가정 : 연속적이고 독립적인 분포에서 나왔는가?&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단일 표본 부호 순위 검정
    &lt;ul&gt;
      &lt;li&gt;윌콕슨 부호 순위 검정
        &lt;ul&gt;
          &lt;li&gt;단일 표본 중위수 검정에 사용&lt;/li&gt;
          &lt;li&gt;두개 표본의 중위수 차이 검정에 사용&lt;/li&gt;
          &lt;li&gt;부호 검정에서 부호 뿐만 아니라 차이도 고려함&lt;/li&gt;
          &lt;li&gt;가정 : 연속적이고 독립적인 분포에서 나왔는가?, 대칭성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;두 표본 검정
    &lt;ul&gt;
      &lt;li&gt;윌콕슨 순위 합 검정
        &lt;ul&gt;
          &lt;li&gt;두 표본 중위수 검정&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;대응 표본 검정
    &lt;ul&gt;
      &lt;li&gt;같은 표본에서 다른 처리를 한 두 집단의 중위수 차이를 검정함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분산 분석
    &lt;ul&gt;
      &lt;li&gt;크루스칼 왈리스 검정
        &lt;ul&gt;
          &lt;li&gt;세 집단 이상의 분포 비교&lt;/li&gt;
          &lt;li&gt;평균이 아닌 중위수가 같은지 검점&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;런 검정
    &lt;ul&gt;
      &lt;li&gt;두 개의 값(앞면, 뒷면)을 가지는 연속적인 측정값(101001)이 패턴이 있는지를 검정&lt;/li&gt;
      &lt;li&gt;혹은 랜덤하게 추출되었는지 검증하고 싶을 때 사용&lt;/li&gt;
      &lt;li&gt;1/0/1/00/1로 끊고, 5개의 연속적인 런이라 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;비지도-학습&quot;&gt;비지도 학습&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;다차원 척도법
    &lt;ul&gt;
      &lt;li&gt;자료의 관계를 파악하는 시각화 방법&lt;/li&gt;
      &lt;li&gt;거리가 주어져 있을 때, 동일한 상대적 거리를 가진 실수 공간의 점들로 배치&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;주성분 분석
    &lt;ul&gt;
      &lt;li&gt;누적 기여율&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-08-%EB%B6%84%EC%84%9D%EA%B8%B0%EB%B2%95-%EC%A0%81%EC%9A%A9.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-08-%EB%B6%84%EC%84%9D%EA%B8%B0%EB%B2%95-%EC%A0%81%EC%9A%A9.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 07: 분석 모형 설계</title>
        <description> 분석 절차를 수립하고 환경을 구축하자. : &lt;p&gt;분석 모델의 경우 알고 있기 때문에 생략한다.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-07-%EB%B6%84%EC%84%9D%EB%AA%A8%ED%98%95-%EC%84%A4%EA%B3%84.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-07-%EB%B6%84%EC%84%9D%EB%AA%A8%ED%98%95-%EC%84%A4%EA%B3%84.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 06: 통계 기법 이해</title>
        <description> 기술통계와 추론통계에 대해 알아본다. : &lt;h1 id=&quot;기술-통계-desciptive-statistics&quot;&gt;기술 통계 (Desciptive Statistics)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;확률 통계적으로 정리 및 요약&lt;/li&gt;
  &lt;li&gt;평균&lt;/li&gt;
  &lt;li&gt;중위수&lt;/li&gt;
  &lt;li&gt;최빈수&lt;/li&gt;
  &lt;li&gt;범위&lt;/li&gt;
  &lt;li&gt;분산&lt;/li&gt;
  &lt;li&gt;표준편차&lt;/li&gt;
  &lt;li&gt;표준오차&lt;/li&gt;
  &lt;li&gt;분포
    &lt;ul&gt;
      &lt;li&gt;첨도&lt;/li&gt;
      &lt;li&gt;왜도&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;상관분석
    &lt;ul&gt;
      &lt;li&gt;피어슨 상관계수 - 수치 변수&lt;/li&gt;
      &lt;li&gt;카이제곱 검정 - 명목 변수&lt;/li&gt;
      &lt;li&gt;스피어만 순위상관계수 - 순서 변수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;회귀 분석
    &lt;ul&gt;
      &lt;li&gt;설명력 - $R^2$&lt;/li&gt;
      &lt;li&gt;전제조건
        &lt;ul&gt;
          &lt;li&gt;선형성&lt;/li&gt;
          &lt;li&gt;등분산성&lt;/li&gt;
          &lt;li&gt;독립성&lt;/li&gt;
          &lt;li&gt;비상관성&lt;/li&gt;
          &lt;li&gt;정규성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;변수선택 방법
        &lt;ul&gt;
          &lt;li&gt;전진&lt;/li&gt;
          &lt;li&gt;후진&lt;/li&gt;
          &lt;li&gt;단계&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분산 분석(ANOVA)
    &lt;ul&gt;
      &lt;li&gt;집단간 비교를 수행&lt;/li&gt;
      &lt;li&gt;F 분포를 이용하여 가설 검정 - 집단 내 분산 대비 집단 간 분산의 크기를 나타내는 값&lt;/li&gt;
      &lt;li&gt;일원 분산 분석
        &lt;ul&gt;
          &lt;li&gt;독립변수 1개, 종속변수 1개&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;이원 분산 분석
        &lt;ul&gt;
          &lt;li&gt;독립변수 2개, 종속변수 1개&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;다변량 분산 분석
        &lt;ul&gt;
          &lt;li&gt;종속변수 2개 이상&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;공분산 분석&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;주성분 분석(PCA)
    &lt;ul&gt;
      &lt;li&gt;원래 변수보다 적은 수의 주성분을 통해 해석&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다변량 기법&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;표본-추출&quot;&gt;표본 추출&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;단순 무작위 추출
    &lt;ul&gt;
      &lt;li&gt;규칙없이 표본 추출&lt;/li&gt;
      &lt;li&gt;100개의 전구에서 무작위로 10개 추출&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;계통 추출
    &lt;ul&gt;
      &lt;li&gt;일정한 간격으로 추출&lt;/li&gt;
      &lt;li&gt;100명 사람에게 번호표 주고, 끝자리 7인 사람들 선정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;층화 추출
    &lt;ul&gt;
      &lt;li&gt;계층으로 나누고, 그 계측에서 무작위 추출&lt;/li&gt;
      &lt;li&gt;계층은 내부적으로 동질적, 외부적으로 이질적&lt;/li&gt;
      &lt;li&gt;여론 조사에 있어 조사 지역을 도별로 나누고, 각 도에서 100명씩 무작위 선정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;군집 추출
    &lt;ul&gt;
      &lt;li&gt;여러 군집으로 나누고 추출&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;군집 성질 고려하지 않음&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;간격도 중요하지 않음&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;100개 전구에 무작위로 RGB 칠하고 파란색 모두 추출&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;확률-분포&quot;&gt;확률 분포&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;이산확률분포
    &lt;ul&gt;
      &lt;li&gt;포아송 분포 - 특정 시간동안 일어나는 사건의 수&lt;/li&gt;
      &lt;li&gt;베르누이 분포&lt;/li&gt;
      &lt;li&gt;이항 분포&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;연속확률분포
    &lt;ul&gt;
      &lt;li&gt;정규분포&lt;/li&gt;
      &lt;li&gt;표준정규분포&lt;/li&gt;
      &lt;li&gt;t-분포
        &lt;ul&gt;
          &lt;li&gt;평균의 해석에 사용&lt;/li&gt;
          &lt;li&gt;모집단은 정규 분포, 모표준편차는 모름&lt;/li&gt;
          &lt;li&gt;30이하의 개수에 대해서 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;카이제곱 분포&lt;/li&gt;
      &lt;li&gt;F-분포&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;표본-분포&quot;&gt;표본 분포&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114738703-2e6b6980-9d83-11eb-8374-28f5bc17b534.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;&lt;/p&gt;

&lt;p&gt;모집단에서 추출된 표본을 관찰하여 나온 통계량을 기반으로 모집단에서 관찰하고 싶은 모수를 추정한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;모집단&lt;/li&gt;
  &lt;li&gt;모수(parameter)&lt;/li&gt;
  &lt;li&gt;통계량&lt;/li&gt;
  &lt;li&gt;추정량&lt;/li&gt;
  &lt;li&gt;표준편차&lt;/li&gt;
  &lt;li&gt;표준오차 - 통계량의 변동 정도&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;표본-조사&quot;&gt;표본 조사&lt;/h2&gt;

&lt;p&gt;표본을 모집단에서 뽑는 과정을 말한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;표본오차
    &lt;ul&gt;
      &lt;li&gt;추출한 표본이 모집단을 대변하지 못하여 발생하는 오차&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비표본오차
    &lt;ul&gt;
      &lt;li&gt;조사 과정에서 발생하는 오차&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;표본편의
    &lt;ul&gt;
      &lt;li&gt;표본이 가지는 통계량이 모수에 비해 치우친 정도&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;표본-분포-관련-법칙&quot;&gt;표본 분포 관련 법칙&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;큰수의 법칙
    &lt;ul&gt;
      &lt;li&gt;데이터를 많이 뽑으면 표본평균의 분산은 0에 가까워짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;중심 극한 정리
    &lt;ul&gt;
      &lt;li&gt;표본의 개수가 커지면, 모집단 분포와 상관없이 표본평균의 분포는 정규분포에 근사&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;표본-분포-유형&quot;&gt;표본 분포 유형&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Z-분포&lt;/li&gt;
  &lt;li&gt;T-분포&lt;/li&gt;
  &lt;li&gt;카이제곱 분포&lt;/li&gt;
  &lt;li&gt;F-분포 - 분산의 비율&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;추론-통계&quot;&gt;추론 통계&lt;/h1&gt;

&lt;p&gt;추정을 통해 모집단을 이해하려는 시도&lt;/p&gt;

&lt;h2 id=&quot;점추정&quot;&gt;점추정&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;불편성&lt;/li&gt;
  &lt;li&gt;효율성&lt;/li&gt;
  &lt;li&gt;일치성&lt;/li&gt;
  &lt;li&gt;충족성&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구간-추정&quot;&gt;구간 추정&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;신뢰수준&lt;/li&gt;
  &lt;li&gt;신뢰구간&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;가설-검정&quot;&gt;가설 검정&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;귀무가설 - 기존의 통념&lt;/li&gt;
  &lt;li&gt;대립가설 - 내가 증명하고 싶은 가설&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p-값과 유의 수준을 비교하여 귀무 가설 또는 대립 가설을 채택한다.&lt;/p&gt;

&lt;h2 id=&quot;검정-종류&quot;&gt;검정 종류&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;양측 검정
    &lt;ul&gt;
      &lt;li&gt;같다, 아니다로 검증&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단측 검정
    &lt;ul&gt;
      &lt;li&gt;모수를 기준으로 (작다, 아니다), (크다, 아니다)와 같이 귀무 가설과 대립 가설을 설정한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;오류-종류&quot;&gt;오류 종류&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;제 1종 오류
    &lt;ul&gt;
      &lt;li&gt;귀무 가설이 실제로 맞으나, 대립 가설을 채택한 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제 2종 오류
    &lt;ul&gt;
      &lt;li&gt;대립 가설이 실제로 맞으나, 대립 가설을 기각한 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;용어-종류&quot;&gt;용어 종류&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/115005116-8371c180-9ee2-11eb-882a-3c12b1fb77b2.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;왼쪽부터 순서대로&lt;/li&gt;
  &lt;li&gt;신뢰수준 - $(1-\alpha)$&lt;/li&gt;
  &lt;li&gt;유의수준 - $\alpha$&lt;/li&gt;
  &lt;li&gt;베타수준 - $\beta$&lt;/li&gt;
  &lt;li&gt;검정력 - $(1-\beta)$&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-06-%ED%86%B5%EA%B3%84%EA%B8%B0%EB%B2%95-%EC%9D%B4%ED%95%B4.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-06-%ED%86%B5%EA%B3%84%EA%B8%B0%EB%B2%95-%EC%9D%B4%ED%95%B4.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 05: 데이터 탐색</title>
        <description> 데이터 탐색 방법에 대해 알아본다. : &lt;h1 id=&quot;데이터-탐색-개요&quot;&gt;데이터 탐색 개요&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;분석전 그래프, 통계 방법을 통해 직관적으로 파악&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;eda&quot;&gt;EDA&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Resistance(저항성)
    &lt;ul&gt;
      &lt;li&gt;오류값이 있어도 영향을 적게 받음&lt;/li&gt;
      &lt;li&gt;평균보다 중앙값&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Residual(잔차값)
    &lt;ul&gt;
      &lt;li&gt;경향으로 부터 얼마나 벗어났는지 파악&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Re-expression(자료 재표현)
    &lt;ul&gt;
      &lt;li&gt;데이터 변환을 통해 구조 파악&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Graphic Representation(현시성)
    &lt;ul&gt;
      &lt;li&gt;데이터 시각화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;개별-변수-탐색-방법&quot;&gt;개별 변수 탐색 방법&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;범주형 데이터
    &lt;ul&gt;
      &lt;li&gt;명목 척도, 순위 척도&lt;/li&gt;
      &lt;li&gt;빈도수, 최빈값, 비율, 백분율&lt;/li&gt;
      &lt;li&gt;막대형 그래프&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수치형 데이터
    &lt;ul&gt;
      &lt;li&gt;등간 척도, 비율 척도&lt;/li&gt;
      &lt;li&gt;평균, 분산, 표준 편차, 첨도, 왜도&lt;/li&gt;
      &lt;li&gt;박스 플롯, 히스토그램&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;다차원-데이터-탐색-방법&quot;&gt;다차원 데이터 탐색 방법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;범주-범주
    &lt;ul&gt;
      &lt;li&gt;막대형 그래프&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수치-수치
    &lt;ul&gt;
      &lt;li&gt;산점도&lt;/li&gt;
      &lt;li&gt;공분산&lt;/li&gt;
      &lt;li&gt;피어슨 상관계수 - &lt;strong&gt;방향, 강도&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;범주-수치
    &lt;ul&gt;
      &lt;li&gt;박스 플롯&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;상관-관계-분석&quot;&gt;상관 관계 분석&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;산점도&lt;/li&gt;
  &lt;li&gt;공분산
    &lt;ul&gt;
      &lt;li&gt;강도는 나타낼 수 없음&lt;/li&gt;
      &lt;li&gt;방향은 알 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;상관계수
    &lt;ul&gt;
      &lt;li&gt;방향성과 강도 알 수 있음&lt;/li&gt;
      &lt;li&gt;-1~1의 값&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수치적 데이터 - 피어슨 상관계수&lt;/li&gt;
  &lt;li&gt;순서적 데이터 - 스피어만 상관 분석&lt;/li&gt;
  &lt;li&gt;명목적 데이터 - 카이제곱 검정&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;기초-통계량-추출-및-이해&quot;&gt;기초 통계량 추출 및 이해&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;중심 경향성
    &lt;ul&gt;
      &lt;li&gt;평균 - 이상값에 치우치는 경향&lt;/li&gt;
      &lt;li&gt;중위수&lt;/li&gt;
      &lt;li&gt;최빈값&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;산포도
    &lt;ul&gt;
      &lt;li&gt;범위 - (최댓값-최솟값)&lt;/li&gt;
      &lt;li&gt;분산&lt;/li&gt;
      &lt;li&gt;표준편차&lt;/li&gt;
      &lt;li&gt;변동계수(CV) - $\sigma \over E(X)$&lt;/li&gt;
      &lt;li&gt;사분위수 범위 - (Q3-Q1)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분포
    &lt;ul&gt;
      &lt;li&gt;왜도 - 치우친 정도
        &lt;ul&gt;
          &lt;li&gt;값 &amp;lt; 0 -&amp;gt; 꼬리 왼쪽&lt;/li&gt;
          &lt;li&gt;값 &amp;gt; 0 -&amp;gt; 꼬리 오른쪽&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;첨도 - 뾰족한 정도
        &lt;ul&gt;
          &lt;li&gt;값 = 0 - 정규분포&lt;/li&gt;
          &lt;li&gt;값 &amp;lt; 0 - 퍼짐&lt;/li&gt;
          &lt;li&gt;값 &amp;gt; 0 - 뾰족함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;시각적-데이터-탐색&quot;&gt;시각적 데이터 탐색&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114735567-45f52300-9d80-11eb-9a00-4582fa0481af.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;히스토그램
    &lt;ul&gt;
      &lt;li&gt;막대 붙어 있음&lt;/li&gt;
      &lt;li&gt;가로축은 수치형 데이터&lt;/li&gt;
      &lt;li&gt;넓이는 일정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;막대형 그래프
    &lt;ul&gt;
      &lt;li&gt;막대 떨어져 있음&lt;/li&gt;
      &lt;li&gt;가로축 수치형 아니어도 됨&lt;/li&gt;
      &lt;li&gt;넓이는 다를 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;박스 플롯&lt;/li&gt;
  &lt;li&gt;산점도&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;시공간-데이터-탐색&quot;&gt;시공간 데이터 탐색&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114735894-953b5380-9d80-11eb-84ca-ffb260dcc07b.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114735935-9e2c2500-9d80-11eb-8201-4ef13ee53fec.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114735971-a6846000-9d80-11eb-9611-63793a624290.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;코로플레스 지도(등치지역도)
    &lt;ul&gt;
      &lt;li&gt;크기에 따라 색을 다르게&lt;/li&gt;
      &lt;li&gt;지역 크기는 그대로&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;카도그램(변량비례도)
    &lt;ul&gt;
      &lt;li&gt;값에 따라 지도 면적이 왜곡됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;버블 플롯맵&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-05-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%90%EC%83%89.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-05-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%90%EC%83%89.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 04: 데이터 전처리</title>
        <description> 데이터 정제 방법, 변수 처리 방법에 대해 알아본다.&quot; : &lt;h1 id=&quot;데이터-정제&quot;&gt;데이터 정제&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;전처리 결과는 반드시.&lt;/li&gt;
  &lt;li&gt;결과에 직접적인 영향&lt;/li&gt;
  &lt;li&gt;반복적인 수행&lt;/li&gt;
  &lt;li&gt;가장 많은 시간 소요&lt;/li&gt;
  &lt;li&gt;정제 -&amp;gt; 결측값 처리 -&amp;gt; 이상값 처리 -&amp;gt; 분석 변수 처리&lt;/li&gt;
  &lt;li&gt;모든 데이터 대상으로 진행한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정제-방법&quot;&gt;정제 방법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;삭제
    &lt;ul&gt;
      &lt;li&gt;문제 발생 여지 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;대체
    &lt;ul&gt;
      &lt;li&gt;평균값, 최빈값, 중앙값&lt;/li&gt;
      &lt;li&gt;왜곡의 여지&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;예측값 적용&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정제-기법&quot;&gt;정제 기법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;변환
    &lt;ul&gt;
      &lt;li&gt;코드 변환(남여-&amp;gt;M/F)&lt;/li&gt;
      &lt;li&gt;형식 변환(주번)&lt;/li&gt;
      &lt;li&gt;다양한 값을 일관된 형태로 변환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;파싱
    &lt;ul&gt;
      &lt;li&gt;규칙 분할&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;보강
    &lt;ul&gt;
      &lt;li&gt;추가정보 반영&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정제-기술&quot;&gt;정제 기술&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ETL - 추출, 가공, 저장&lt;/li&gt;
  &lt;li&gt;맵 리듀스
    &lt;ul&gt;
      &lt;li&gt;배치 형태 처리 방식으로 데이터 양이 많을 경우 느림&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spark/Storm
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Inmemory 처리 방식&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;기계학습, 라이브러리 지원&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CEP(Complex Event Processing)
    &lt;ul&gt;
      &lt;li&gt;이벤트 처리 결과값 수집 및 러히&lt;/li&gt;
      &lt;li&gt;실시간 데이터 처리 기술&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pig
    &lt;ul&gt;
      &lt;li&gt;대용량 데이터 집합 분석 플랫폼&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Flume
    &lt;ul&gt;
      &lt;li&gt;로그 데이터 수집 및 처리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-결측값-처리&quot;&gt;데이터 결측값 처리&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114720910-623e9300-9d73-11eb-9f09-20234b2719d7.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;완전 무작위 결측
    &lt;ul&gt;
      &lt;li&gt;결측값이 아무 상관 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;무작위 결측
    &lt;ul&gt;
      &lt;li&gt;누락 자료가 특정 변수와 관련은 되어 있지만 결과는 관계가 없음&lt;/li&gt;
      &lt;li&gt;남성은 설문에 기재할 확률이 낮지만 그 결과와는 상관이 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비 무작위 결측
    &lt;ul&gt;
      &lt;li&gt;연관이 있는 경우&lt;/li&gt;
      &lt;li&gt;소득에 대한 설문 시, 고소득자가 무응답률이 높은 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;결과 자체가 응답에 영향을 주는가? 의 여부로 판단하면 된다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NA(Not Available) - 기록되지 않은 값&lt;/li&gt;
  &lt;li&gt;NaN(Not a Number) - 숫자가 아닌 값&lt;/li&gt;
  &lt;li&gt;inf - 무한대&lt;/li&gt;
  &lt;li&gt;NULL - 값이 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;단순-대치법&quot;&gt;단순 대치법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;완전 대치법&lt;/li&gt;
  &lt;li&gt;평균 대치법&lt;/li&gt;
  &lt;li&gt;단순 확률 대치법
    &lt;ul&gt;
      &lt;li&gt;핫덱 대체 - 무응답을 현재 진행 연구에서 비슷한 성향을 가진 사람으로 대체&lt;/li&gt;
      &lt;li&gt;콜드덱 대체 - 외부 연구에서 있는 사람으로 대체&lt;/li&gt;
      &lt;li&gt;혼합 - 평균 대치와 확률 대치 섞어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;다중-대치법&quot;&gt;다중 대치법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;대치&lt;/li&gt;
  &lt;li&gt;분석&lt;/li&gt;
  &lt;li&gt;결합&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-이상값-처리&quot;&gt;데이터 이상값 처리&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 입력 오류&lt;/li&gt;
  &lt;li&gt;측정 오류&lt;/li&gt;
  &lt;li&gt;실험 오류&lt;/li&gt;
  &lt;li&gt;고의적인 이상값&lt;/li&gt;
  &lt;li&gt;표본 추출 에러&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;검출-방법&quot;&gt;검출 방법&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114723917-075a6b00-9d76-11eb-984a-06e52b3d3045.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;개별 데이터 관찰&lt;/li&gt;
  &lt;li&gt;통계값 확인
    &lt;ul&gt;
      &lt;li&gt;ESD(Extream Studentized Deviation) - 3 표준편차 떨어진 값을 이상값으로 판단&lt;/li&gt;
      &lt;li&gt;기하평균 - 기하평균으로부터 2.5표준편차 떨어진 값을 이상값으로 판단&lt;/li&gt;
      &lt;li&gt;사분위 수를 이용한 방법 - Q1, Q3각각을 기준으로 (Q3-Q1)*1.5만큼 왼쪽, 오른쪽으로 떨어진 값을 이상값으로 판단 : Boxplot&lt;/li&gt;
      &lt;li&gt;표준화 점수를 이용&lt;/li&gt;
      &lt;li&gt;딕슨의 Q 검정 - 데이터수가 30개 미만인 경우 사용&lt;/li&gt;
      &lt;li&gt;그럽스 T 검정 - 단변량 정규분포 자료에서 사용&lt;/li&gt;
      &lt;li&gt;카이제곱 검정 - 데이터가 정규분포이나 수가 적은 경우 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;시각화
    &lt;ul&gt;
      &lt;li&gt;확률 밀도 함수 사용&lt;/li&gt;
      &lt;li&gt;히스토그램&lt;/li&gt;
      &lt;li&gt;시계열 차트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;머신러닝 기법
    &lt;ul&gt;
      &lt;li&gt;K-means&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;마할라노비스 거리 - 분포를 고려한 거리 측도&lt;/li&gt;
  &lt;li&gt;LOF(Local Outlier Factor) - 관측치 주변(local) 밀도와 비교하여 탐색&lt;/li&gt;
  &lt;li&gt;iForest - Decision Tree를 이용하여 이상값 탐지&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;분석-변수-처리&quot;&gt;분석 변수 처리&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;과적합 방지&lt;/li&gt;
  &lt;li&gt;차원의 저주 방지&lt;/li&gt;
  &lt;li&gt;성능 향상&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;필터-기법&quot;&gt;필터 기법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;정보 이득&lt;/li&gt;
  &lt;li&gt;카이제곱 검정&lt;/li&gt;
  &lt;li&gt;피셔 스코어&lt;/li&gt;
  &lt;li&gt;상관 계수&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;래퍼-기법&quot;&gt;래퍼 기법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;그리디 알고리즘&lt;/li&gt;
  &lt;li&gt;전진 선택법
    &lt;ul&gt;
      &lt;li&gt;하나씩 추가하는 방법&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;후진 선택법
    &lt;ul&gt;
      &lt;li&gt;하나씩 제거하는 방법&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단계적 방법
    &lt;ul&gt;
      &lt;li&gt;함께 사용하는 방법&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;임베디드-기법&quot;&gt;임베디드 기법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Lasso - L1 norm을 추가하여 자동적으로 줄임&lt;/li&gt;
  &lt;li&gt;Ridge - L2 norm을 추가하여 제약을 줌&lt;/li&gt;
  &lt;li&gt;Elastic Net - 두 제약을 선형 결합하여 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;차원-축소&quot;&gt;차원 축소&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;분석 대상 변수의 정보를 최대한 유지하면서 변수 개수를 줄이는 방법&lt;/li&gt;
  &lt;li&gt;y는 사용하지 않고 진행하기 때문에 비지도 학습 방법이다.&lt;/li&gt;
  &lt;li&gt;효과적인 시각화 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;차원-축소-기법&quot;&gt;차원 축소 기법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;주성분 분석(PCA)
    &lt;ul&gt;
      &lt;li&gt;공분산 행렬, 상관행렬 사용&lt;/li&gt;
      &lt;li&gt;정방행렬에서만 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;특이값 분해(SVD)
    &lt;ul&gt;
      &lt;li&gt;M x N 차원 행렬 데이터에서 특이값 추출 후 축약&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;요인 분석(Factor Analysis)&lt;/li&gt;
  &lt;li&gt;독립 성분 분석(ICA)&lt;/li&gt;
  &lt;li&gt;다차원 척도법(MDS)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;파생-변수-생성&quot;&gt;파생 변수 생성&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;단위 변환&lt;/li&gt;
  &lt;li&gt;표현 형식 변환&lt;/li&gt;
  &lt;li&gt;통계량 생성&lt;/li&gt;
  &lt;li&gt;변수 결합&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;변수-변환&quot;&gt;변수 변환&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;단순 기능 변환
    &lt;ul&gt;
      &lt;li&gt;로그, 역수, 루트, 제곱&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비닝(Binning)
    &lt;ul&gt;
      &lt;li&gt;데이터를 범주화함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정규화
    &lt;ul&gt;
      &lt;li&gt;최소-최대 정규화, z-score&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;표준화
    &lt;ul&gt;
      &lt;li&gt;z-score&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;불균형-데이터-처리&quot;&gt;불균형 데이터 처리&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;언더 샘플링
    &lt;ul&gt;
      &lt;li&gt;데이터의 소실이 크다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;오버 샘플링
    &lt;ul&gt;
      &lt;li&gt;과적합을 초대할 수 있다.&lt;/li&gt;
      &lt;li&gt;검증 성능은 나빠질 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;임곗값 이동&lt;/li&gt;
  &lt;li&gt;앙상블 기법&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;중위수-구하기&quot;&gt;중위수 구하기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;n이 홀수 : $n-1 \over 2$&lt;/li&gt;
  &lt;li&gt;n이 짝수 : $n-2\over 2$, $n \over 2$&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-04-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-04-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 03: 데이터 수집 및 저장 계획</title>
        <description> 데이터 수집, 변환, 저장과 같은 방법을 알아본다. : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114716586-27d2f700-9d6f-11eb-9222-51b8f43f12b5.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터-수집-방식-및-기술&quot;&gt;데이터 수집 방식 및 기술&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 웨어하우스
    &lt;ul&gt;
      &lt;li&gt;오지게 저장하는 공간&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 마트
    &lt;ul&gt;
      &lt;li&gt;웨어하우스로 부터 팀단위, 조직 단위로 뽑아서 사용함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정형 데이터
    &lt;ul&gt;
      &lt;li&gt;ETL(Extract Transform Load) - 추출, 변환, 저장&lt;/li&gt;
      &lt;li&gt;FTP(File Transfer Protocol)&lt;/li&gt;
      &lt;li&gt;API&lt;/li&gt;
      &lt;li&gt;Sqoop
        &lt;ul&gt;
          &lt;li&gt;벌크 임포트 지원 - 전체를 한번에 전송&lt;/li&gt;
          &lt;li&gt;데이터 전송 병렬화&lt;/li&gt;
          &lt;li&gt;직접 입력&lt;/li&gt;
          &lt;li&gt;프로그래밍 방식의 데이터 상호작용 - 클래스&lt;/li&gt;
          &lt;li&gt;커넥터를 사용하여 데이터 전송 기능을 제공&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비정형 데이터
    &lt;ul&gt;
      &lt;li&gt;크롤링&lt;/li&gt;
      &lt;li&gt;RSS&lt;/li&gt;
      &lt;li&gt;Open API&lt;/li&gt;
      &lt;li&gt;Scrapy - 웹 사이트 크롤링&lt;/li&gt;
      &lt;li&gt;아파치 카프카 - 대용량 실시간 로그처리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;반정형 데이터
    &lt;ul&gt;
      &lt;li&gt;센싱&lt;/li&gt;
      &lt;li&gt;스트리밍&lt;/li&gt;
      &lt;li&gt;Flume - 로그 데이터 수집&lt;/li&gt;
      &lt;li&gt;Scribe - 로그 데이터 수집
        &lt;ul&gt;
          &lt;li&gt;실시간 스트리밍 수집&lt;/li&gt;
          &lt;li&gt;데이터 수집 다양성&lt;/li&gt;
          &lt;li&gt;고가용성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Chukwa - 비정형, 반정형 모두 사용
        &lt;ul&gt;
          &lt;li&gt;에이전트 - 데이터 수집&lt;/li&gt;
          &lt;li&gt;컬렉터 - 주기적으로 HDFS에 저장&lt;/li&gt;
          &lt;li&gt;아카이빙 - 시간 순서로 로그파일을 묶음&lt;/li&gt;
          &lt;li&gt;디먹스 - 로그를 파싱 후 Key-value로 만들고 저장함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-유형&quot;&gt;데이터 유형&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114696744-f864c000-9d57-11eb-9cfd-74eae0b117af.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;구조적
    &lt;ul&gt;
      &lt;li&gt;정형
        &lt;ul&gt;
          &lt;li&gt;RDBMS&lt;/li&gt;
          &lt;li&gt;spread sheet&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;비정형
        &lt;ul&gt;
          &lt;li&gt;SNS&lt;/li&gt;
          &lt;li&gt;웹 게시판&lt;/li&gt;
          &lt;li&gt;텍스트/오디오/비디오/이미지&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;반정형
        &lt;ul&gt;
          &lt;li&gt;XML&lt;/li&gt;
          &lt;li&gt;HTML&lt;/li&gt;
          &lt;li&gt;JSON&lt;/li&gt;
          &lt;li&gt;RSS&lt;/li&gt;
          &lt;li&gt;로그&lt;/li&gt;
          &lt;li&gt;센서 데이터&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-속성&quot;&gt;데이터 속성&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;범주형(질적 변수)
    &lt;ul&gt;
      &lt;li&gt;연산 의미 없음&lt;/li&gt;
      &lt;li&gt;순서형
        &lt;ul&gt;
          &lt;li&gt;단순히 의미론적으로 숫자를 달아놓은 경우&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;명목형
        &lt;ul&gt;
          &lt;li&gt;평점, 상태점수&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수치형(양적 변수)
    &lt;ul&gt;
      &lt;li&gt;사칙연산 가능&lt;/li&gt;
      &lt;li&gt;연속형&lt;/li&gt;
      &lt;li&gt;이산형&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-속성에-따른-측정-척도&quot;&gt;데이터 속성에 따른 측정 척도&lt;/h1&gt;

&lt;p&gt;데이터 속성에 따라 어떤 척도를 기준으로 측정할지가 달라진다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;명목 척도
    &lt;ul&gt;
      &lt;li&gt;단순히 구분을 위해 군집에 숫자를 매핑하는 경우&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!=&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;이메일 주소, 인터넷 계정, 옷 색깔, 성별&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;서열/순위 척도
    &lt;ul&gt;
      &lt;li&gt;순위가 필요할 때.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;직급, 영화 평점, 선호도&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;등간/간격/거리 척도
    &lt;ul&gt;
      &lt;li&gt;동일 간격으로 나누어서 비교할 수 있게 만든 척도&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;온도, 지능지수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비율 척도
    &lt;ul&gt;
      &lt;li&gt;절대 0점&lt;/li&gt;
      &lt;li&gt;순서 &amp;amp; 간격 의미 있음&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;질량, 나이, 개수, 길이
        &lt;h1 id=&quot;데이터-변환&quot;&gt;데이터 변환&lt;/h1&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;전처리
    &lt;ul&gt;
      &lt;li&gt;저장소에 적재하기위한 작업&lt;/li&gt;
      &lt;li&gt;데이터 필터링, 유형 변환, 정제&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;후처리
    &lt;ul&gt;
      &lt;li&gt;분석이 용이하도록 가공하는 작업&lt;/li&gt;
      &lt;li&gt;변환, 통합, 축소&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;데이터-변환-기술&quot;&gt;데이터 변환 기술&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;평활화
    &lt;ul&gt;
      &lt;li&gt;들쭉날쭉한 녀석들을 군집화, 구간화를 통해 매끄럽게 만듦&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;집계
    &lt;ul&gt;
      &lt;li&gt;데이터를 요약하는 방법&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;일반화&lt;/li&gt;
  &lt;li&gt;정규화
    &lt;ul&gt;
      &lt;li&gt;데이터를 정해진 구간 내에 들어가도록 하는 방법&lt;/li&gt;
      &lt;li&gt;최소-최대 정규화 - 최소값 0 최댓값 1&lt;/li&gt;
      &lt;li&gt;z 스코어 정규화&lt;/li&gt;
      &lt;li&gt;소수 스케일링&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;속성 생성
    &lt;ul&gt;
      &lt;li&gt;새로운 feature를 활용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-적재&quot;&gt;데이터 적재&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;적재 소프트웨어 종류
    &lt;ul&gt;
      &lt;li&gt;Fluentd&lt;/li&gt;
      &lt;li&gt;Flume&lt;/li&gt;
      &lt;li&gt;Scribe&lt;/li&gt;
      &lt;li&gt;Logstash&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-저장&quot;&gt;데이터 저장&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;분산 파일 시스템
    &lt;ul&gt;
      &lt;li&gt;GFS
        &lt;ul&gt;
          &lt;li&gt;Master&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;HDFS
        &lt;ul&gt;
          &lt;li&gt;Name Node&lt;/li&gt;
          &lt;li&gt;Secondary Name Node&lt;/li&gt;
          &lt;li&gt;Data Node&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Lustre&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터베이스 클러스터 - 하나의 데이터베이스를 여러 개의 서버상에 구축(가상화, RDBMS)&lt;/li&gt;
  &lt;li&gt;NoSQL (Not only SQL)
    &lt;ul&gt;
      &lt;li&gt;유형
        &lt;ul&gt;
          &lt;li&gt;Key-Value Store&lt;/li&gt;
          &lt;li&gt;Column Family Store&lt;/li&gt;
          &lt;li&gt;Documnet Store&lt;/li&gt;
          &lt;li&gt;Graph Store&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;테이블 스키마 X, join X&lt;/li&gt;
      &lt;li&gt;빅테이블&lt;/li&gt;
      &lt;li&gt;HBase&lt;/li&gt;
      &lt;li&gt;SimpleDB - Amazon&lt;/li&gt;
      &lt;li&gt;SSDS - MS&lt;/li&gt;
      &lt;li&gt;Cloudata&lt;/li&gt;
      &lt;li&gt;Cassandra&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;병렬 DBMS&lt;/li&gt;
  &lt;li&gt;네트워크 구성 저장 시스템&lt;/li&gt;
  &lt;li&gt;클라우드 파일 저장 시스템
    &lt;ul&gt;
      &lt;li&gt;Amazon S3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cap-이론&quot;&gt;Cap 이론&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114997988-6eddfb00-9edb-11eb-8bb8-21357a020c7a.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;어떠한 분산 시스템도 다음의 세가지 특성을 모두 만족시킬 수 없다.&lt;/li&gt;
  &lt;li&gt;일관성(Consistency)
    &lt;ul&gt;
      &lt;li&gt;모든 노드들은 같은 시간에 동일한 항목에 대해 같은 내용의 데이터를 보여준다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;가용성(Availability)
    &lt;ul&gt;
      &lt;li&gt;모든 사용자들이 읽기 및 쓰기가 가능해야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분할내성(생존성, Partition tolerance)
    &lt;ul&gt;
      &lt;li&gt;시스템 일부가 망가져도 시스템이 계속 동작해야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gfsgoogle-file-system&quot;&gt;GFS(Google File System)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114718463-f824ee80-9d70-11eb-9acd-f60a0677cb60.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;구글의 대규모 클러스터 서비스 플랫폼 기반 파일 시스템&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;64m의 청크로 나누고 복제본을 청크서버에 분산하여 저장&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;구성 요소
    &lt;ul&gt;
      &lt;li&gt;Client
        &lt;ul&gt;
          &lt;li&gt;파일 읽기/쓰기 요청 애플리케이션&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Master
        &lt;ul&gt;
          &lt;li&gt;매핑 정보, 저장 서버 위치 정보를 메모리상에서 관리&lt;/li&gt;
          &lt;li&gt;청크 서버의 하트비트 메시지를 통해 상태관리&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;청크 서버
        &lt;ul&gt;
          &lt;li&gt;로컬 디스크에 청크 저장&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;hdfs&quot;&gt;HDFS&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114718791-50f48700-9d71-11eb-98e4-c6271d7ef783.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;구성 요소
    &lt;ul&gt;
      &lt;li&gt;네임 노드
        &lt;ul&gt;
          &lt;li&gt;모든 메타데이터 관리&lt;/li&gt;
          &lt;li&gt;마스터 역할&lt;/li&gt;
          &lt;li&gt;블록 상태 체크&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;보조 네임 노드
        &lt;ul&gt;
          &lt;li&gt;상태 모니터링 보조&lt;/li&gt;
          &lt;li&gt;파일 시스템 이미지 스냅샷으로 생성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;데이터 노드
        &lt;ul&gt;
          &lt;li&gt;슬레이브 역할&lt;/li&gt;
          &lt;li&gt;데이터 입출력 요청 처리&lt;/li&gt;
          &lt;li&gt;3중 복제 저장&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;그냥-용어-정리&quot;&gt;그냥 용어 정리&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Hive
    &lt;ul&gt;
      &lt;li&gt;SQL과 유사한 구조&lt;/li&gt;
      &lt;li&gt;데이터 요약, 쿼리 수행과 분석&lt;/li&gt;
      &lt;li&gt;데이터 웨어하우징 솔루션&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Avro
    &lt;ul&gt;
      &lt;li&gt;이 기종간 데이터 타입 교환 체계 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Zookeeper
    &lt;ul&gt;
      &lt;li&gt;분산 환경에서 노드간 정보 공유, 락, 이벤트 기능 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-03-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A7%91-%EB%B0%8F-%EC%A0%80%EC%9E%A5-%EA%B3%84%ED%9A%8D.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-03-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A7%91-%EB%B0%8F-%EC%A0%80%EC%9E%A5-%EA%B3%84%ED%9A%8D.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 02: 데이터 분석 계획</title>
        <description> 분석 방안을 수립하고, 작업 계획을 알아본다. : &lt;h1 id=&quot;분석-문제-정의&quot;&gt;분석 문제 정의&lt;/h1&gt;

&lt;h2 id=&quot;하향식-top-down&quot;&gt;하향식 (Top down)&lt;/h2&gt;

&lt;p&gt;문제가 이미 정해져 있는 경우를 말한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;문제 탐색
    &lt;ul&gt;
      &lt;li&gt;BM 기반 문제 탐색&lt;/li&gt;
      &lt;li&gt;범위 확장(거시적, 경쟁사, 시장, 역량)해서 기회 탐색&lt;/li&gt;
      &lt;li&gt;외부 참조 벤치마킹&lt;/li&gt;
      &lt;li&gt;분석 유스케이스 정의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;문제 정의&lt;/li&gt;
  &lt;li&gt;해결방안 탐색&lt;/li&gt;
  &lt;li&gt;타당성 검토&lt;/li&gt;
  &lt;li&gt;선택&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;상향식-bottom-up&quot;&gt;상향식 (Bottom up)&lt;/h2&gt;

&lt;p&gt;디자인적 사고 접근을 사용한다. 일반적인 특징을 관찰하고 문제를 생성하는 방법이다.&lt;/p&gt;

&lt;h2 id=&quot;대상별-분석-기획-유형&quot;&gt;대상별 분석 기획 유형&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114692024-33b0c000-9d53-11eb-8d40-a5e6c3e97733.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;최적화
    &lt;ul&gt;
      &lt;li&gt;분석 대상도 알아, 어떻게 풀지도 알아. 그럼 최적화 해야지.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;솔루션
    &lt;ul&gt;
      &lt;li&gt;분석 대상은 알아, 근데 어떻게 풀지 모르겠다. 그럼 풀 방법을 생각해야지.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;통찰
    &lt;ul&gt;
      &lt;li&gt;분석 대상을 모르겠어. 푸는 방법은 많이 알아. 그럼 문제를 통찰해서 이해해야지.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;발견
    &lt;ul&gt;
      &lt;li&gt;분석 대상도 모르겠고 푸는 방법도 모르겠다. 발견부터 해보자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;과제-우선-순위-평가&quot;&gt;과제 우선 순위 평가&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114692537-ac178100-9d53-11eb-8cde-d121f67b547a.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;시급성(가치)에 중점을 둘 경우
    &lt;ul&gt;
      &lt;li&gt;3 -&amp;gt; 4 -&amp;gt; 2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;난이도에 중점을 둘 경우
    &lt;ul&gt;
      &lt;li&gt;3 -&amp;gt; 1 -&amp;gt; 2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-분석-방안&quot;&gt;데이터 분석 방안&lt;/h1&gt;

&lt;h2 id=&quot;데이터-유효성&quot;&gt;데이터 유효성&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 정확성
    &lt;ul&gt;
      &lt;li&gt;정확성&lt;/li&gt;
      &lt;li&gt;사실성&lt;/li&gt;
      &lt;li&gt;적합성&lt;/li&gt;
      &lt;li&gt;필수성&lt;/li&gt;
      &lt;li&gt;연관성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 일관성
    &lt;ul&gt;
      &lt;li&gt;정합성&lt;/li&gt;
      &lt;li&gt;일치성&lt;/li&gt;
      &lt;li&gt;무결성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;데이터-활용성&quot;&gt;데이터 활용성&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 유용성
    &lt;ul&gt;
      &lt;li&gt;충분성&lt;/li&gt;
      &lt;li&gt;유연성&lt;/li&gt;
      &lt;li&gt;사용성&lt;/li&gt;
      &lt;li&gt;추적성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 접근성
    &lt;ul&gt;
      &lt;li&gt;접근성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 적시성
    &lt;ul&gt;
      &lt;li&gt;적시성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 접근성
    &lt;ul&gt;
      &lt;li&gt;보호성&lt;/li&gt;
      &lt;li&gt;책임성&lt;/li&gt;
      &lt;li&gt;안정성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정규-표현식&quot;&gt;정규 표현식&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt; - 1개 이상의 문자열 매칭&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt; - 시작&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt; - 0개 이상의 문자열 매칭&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; - 종료
    &lt;h2 id=&quot;분석-절차&quot;&gt;분석 절차&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114693181-4d9ed280-9d54-11eb-9fd8-6e178cf05432.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;분석 기획
    &lt;ul&gt;
      &lt;li&gt;비즈니스 이해&lt;/li&gt;
      &lt;li&gt;프로젝트 정의, 계획&lt;/li&gt;
      &lt;li&gt;위험 계획 수립&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 준비
    &lt;ul&gt;
      &lt;li&gt;필요 데이터 정의&lt;/li&gt;
      &lt;li&gt;데이터 스토어 설계&lt;/li&gt;
      &lt;li&gt;데이터 수집 및 정합성 검증&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 분석
    &lt;ul&gt;
      &lt;li&gt;분석용 데이터 준비 - 수집된 것 중에서 필요한 것만 빼옴&lt;/li&gt;
      &lt;li&gt;텍스트 분석&lt;/li&gt;
      &lt;li&gt;탐색적 분석&lt;/li&gt;
      &lt;li&gt;모델링&lt;/li&gt;
      &lt;li&gt;모델 평가 및 검증&lt;/li&gt;
      &lt;li&gt;모델 적용 및 운영 방안 수립&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;시스템 구현
    &lt;ul&gt;
      &lt;li&gt;설계 및 구현 - UI, 시스템 구축&lt;/li&gt;
      &lt;li&gt;시스템 테스트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;평가 및 전개
    &lt;ul&gt;
      &lt;li&gt;모델 발전 계획 수립&lt;/li&gt;
      &lt;li&gt;프로젝트 평가 보고&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;분석-방법론-유형&quot;&gt;분석 방법론 유형&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;KDD
    &lt;ul&gt;
      &lt;li&gt;프로파일링 기술 기반&lt;/li&gt;
      &lt;li&gt;데이터 선택&lt;/li&gt;
      &lt;li&gt;데이터 전처리&lt;/li&gt;
      &lt;li&gt;데이터 변환&lt;/li&gt;
      &lt;li&gt;데이터 마이닝&lt;/li&gt;
      &lt;li&gt;데이터 평가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CRISP-DM
    &lt;ul&gt;
      &lt;li&gt;유럽연합에서 시작&lt;/li&gt;
      &lt;li&gt;얘는 이해가 먼저야&lt;/li&gt;
      &lt;li&gt;업무 이해&lt;/li&gt;
      &lt;li&gt;데이터 이해&lt;/li&gt;
      &lt;li&gt;데이터 준비&lt;/li&gt;
      &lt;li&gt;모델링&lt;/li&gt;
      &lt;li&gt;평가&lt;/li&gt;
      &lt;li&gt;전개&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;SEMMA(Sampling Exploration Modification Modeling Assessment)
    &lt;ul&gt;
      &lt;li&gt;모델링 전에 &lt;strong&gt;수정&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;샘플링&lt;/li&gt;
      &lt;li&gt;탐색&lt;/li&gt;
      &lt;li&gt;수정&lt;/li&gt;
      &lt;li&gt;모델링&lt;/li&gt;
      &lt;li&gt;검증&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-확보-계획&quot;&gt;데이터 확보 계획&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;목표 정의&lt;/li&gt;
  &lt;li&gt;요구사항 도출&lt;/li&gt;
  &lt;li&gt;예산안 수립 - 돈이 있어야 하는거다.&lt;/li&gt;
  &lt;li&gt;계획 수립&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;데이터-수집-프로세스&quot;&gt;데이터 수집 프로세스&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;수집 데이터 도출&lt;/li&gt;
  &lt;li&gt;목록 작성&lt;/li&gt;
  &lt;li&gt;데이터 소유기간 파악 및 협의 - 일단 되나 확인&lt;/li&gt;
  &lt;li&gt;데이터 유형 분류 및 확인&lt;/li&gt;
  &lt;li&gt;수집 기술 선정&lt;/li&gt;
  &lt;li&gt;수집 계획서 작성 - 서류는 좀 나중에&lt;/li&gt;
  &lt;li&gt;수집 주기 결정 - 왜 주기를 그다음에 하는지 모르겠지만 이건 외워&lt;/li&gt;
  &lt;li&gt;데이터 수집 실행&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;빅데이터-요구사항-분석-절차&quot;&gt;빅데이터 요구사항 분석 절차&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;요구사항 수집&lt;/li&gt;
  &lt;li&gt;요구사항 분석&lt;/li&gt;
  &lt;li&gt;요구사항 명세&lt;/li&gt;
  &lt;li&gt;요구사항 검증&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-02-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D-%EA%B3%84%ED%9A%8D.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-02-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D-%EA%B3%84%ED%9A%8D.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title> [빅데이터분석기사 - 필기] 01: 빅데이터의 이해</title>
        <description> 개요 및 활용, 기술과 제도에 대해 간략히 알아보자. : &lt;h1 id=&quot;빅데이터-특징&quot;&gt;빅데이터 특징&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;정형 + 비정형&lt;/li&gt;
  &lt;li&gt;데이터로부터 가치 추출, 결과 분석&lt;/li&gt;
  &lt;li&gt;가치 추출 방법 : DIKW 피라미드&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dikw-피라미드&quot;&gt;DIKW 피라미드&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;데이터
    &lt;ul&gt;
      &lt;li&gt;객관적 사실, 순수한 상태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정보
    &lt;ul&gt;
      &lt;li&gt;데이터를 가공 처리&lt;/li&gt;
      &lt;li&gt;의미 도출&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;지식
    &lt;ul&gt;
      &lt;li&gt;정보를 구조화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;지혜
    &lt;ul&gt;
      &lt;li&gt;지식을 기반으로 판단&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;데이터-크기&quot;&gt;데이터 크기&lt;/h2&gt;

&lt;p&gt;K -&amp;gt; M -&amp;gt; G -&amp;gt; T -&amp;gt; P -&amp;gt; E -&amp;gt; Z -&amp;gt; Y&lt;/p&gt;

&lt;p&gt;(뒤에 EZY)&lt;/p&gt;

&lt;h2 id=&quot;빅데이터-특징-1&quot;&gt;빅데이터 특징&lt;/h2&gt;

&lt;p&gt;bold체는 3V&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Volume(크기)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;크기는 상식적으로 중요함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Variety(다양성)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;정형, 비정형&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Velocity(속도)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;정보의 생성 속도 가속화, 처리 속도 역시 중요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Veracity(신뢰성)
    &lt;ul&gt;
      &lt;li&gt;데이터 양이 증가하기 때문에 품질 자체가 중요해짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Value(가치)
    &lt;ul&gt;
      &lt;li&gt;유용한 것을 얻을 수 있는가?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Validity(정확성)
    &lt;ul&gt;
      &lt;li&gt;정확한 분석&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Volatility(휘발성)
    &lt;ul&gt;
      &lt;li&gt;데이터가 의가 있는 기간&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;빅데이터의-유형&quot;&gt;빅데이터의 유형&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;정형
    &lt;ul&gt;
      &lt;li&gt;정형화된 스키마 구조&lt;/li&gt;
      &lt;li&gt;RDBMS&lt;/li&gt;
      &lt;li&gt;SQL&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비정형
    &lt;ul&gt;
      &lt;li&gt;구조화되어 있으나 메타데이터나 스키마정보를 포함하는 데이터.&lt;/li&gt;
      &lt;li&gt;구조화되어 있지만 추가적인 정보가 들어가는 경우&lt;/li&gt;
      &lt;li&gt;XML&lt;/li&gt;
      &lt;li&gt;HTML&lt;/li&gt;
      &lt;li&gt;JSON&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비정형
    &lt;ul&gt;
      &lt;li&gt;각각이 데이터 객체로 구분된 경우&lt;/li&gt;
      &lt;li&gt;이미지&lt;/li&gt;
      &lt;li&gt;음성&lt;/li&gt;
      &lt;li&gt;동영상&lt;/li&gt;
      &lt;li&gt;텍스트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;데이터-지식-경영&quot;&gt;데이터 지식 경영&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;암묵지
    &lt;ul&gt;
      &lt;li&gt;내면화(자기만 알고 있는 경험등)&lt;/li&gt;
      &lt;li&gt;공통화&lt;/li&gt;
      &lt;li&gt;수영, 태권도&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;형식지
    &lt;ul&gt;
      &lt;li&gt;표출화(문서를 공유함)&lt;/li&gt;
      &lt;li&gt;연결화&lt;/li&gt;
      &lt;li&gt;메뉴얼&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;빅데이터의-가치&quot;&gt;빅데이터의 가치&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;경제적 자산 - 새로운 기회 창출&lt;/li&gt;
  &lt;li&gt;불확실성 제거 - 미래 예측(시뮬레이션)&lt;/li&gt;
  &lt;li&gt;리스크 감소 - 미래 예측을 통해 위험 감소&lt;/li&gt;
  &lt;li&gt;스마트한 경쟁력 - 지능화 서비스&lt;/li&gt;
  &lt;li&gt;타 분화 융합 - 새로운 가치 창출&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;가치-산정의-어려움&quot;&gt;가치 산정의 어려움&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 활용 방식의 다양화&lt;/li&gt;
  &lt;li&gt;새로운 가치 창출 - 없던 가치를 만듦&lt;/li&gt;
  &lt;li&gt;분석 기술의 급속한 발전&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;빅데이터-영향&quot;&gt;빅데이터 영향&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;기업
    &lt;ul&gt;
      &lt;li&gt;혁신 수단 제공&lt;/li&gt;
      &lt;li&gt;경쟁력 강화&lt;/li&gt;
      &lt;li&gt;생산성 향상&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정부
    &lt;ul&gt;
      &lt;li&gt;환경 탐색&lt;/li&gt;
      &lt;li&gt;상황 분석&lt;/li&gt;
      &lt;li&gt;미래 대응&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;개인
    &lt;ul&gt;
      &lt;li&gt;목적에 따른 활용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;빅데이터-위기-요인&quot;&gt;빅데이터 위기 요인&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;사생활 침해 - SNS보고 도둑 듦&lt;/li&gt;
  &lt;li&gt;책임 원칙 훼손 - 아직 안했는데 범죄자 취급&lt;/li&gt;
  &lt;li&gt;데이터 오용 - 데이터 기반으로 예측하기 때문에 언제나 맞을 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;빅데이터-통제-방안&quot;&gt;빅데이터 통제 방안&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;알고리즘 접근 허용 - 알고리즈미스트(피해 구제 전문 인력)&lt;/li&gt;
  &lt;li&gt;책임 강조 - 정보 사용시 책임을 지는 방안&lt;/li&gt;
  &lt;li&gt;결과 기반 책임 적용 - 결과를 바탕으로 책임진다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;빅데이터-산업-이해&quot;&gt;빅데이터 산업 이해&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;스마트폰, SNS, IoT 확산으로 인해 데이터 활용 증가&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;클라우드 컴퓨팅&lt;/strong&gt; 기술 발전 때문에, 처리 비용이 감소, 결과적으로 발전중&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;빅데이터-조직-설계&quot;&gt;빅데이터 조직 설계&lt;/h1&gt;

&lt;h2 id=&quot;빅데이터-업무-프로세스&quot;&gt;빅데이터 업무 프로세스&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;도입
    &lt;ul&gt;
      &lt;li&gt;도입 기획&lt;/li&gt;
      &lt;li&gt;기술 검토&lt;/li&gt;
      &lt;li&gt;조직 구성&lt;/li&gt;
      &lt;li&gt;예산 확보&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;구축
    &lt;ul&gt;
      &lt;li&gt;요구사항 분석&lt;/li&gt;
      &lt;li&gt;설계&lt;/li&gt;
      &lt;li&gt;구현&lt;/li&gt;
      &lt;li&gt;테스트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;운영
    &lt;ul&gt;
      &lt;li&gt;운영 계획 수립&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;조직-설계-절차&quot;&gt;조직 설계 절차&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;경영 전략 및 사업 전략 수립&lt;/li&gt;
  &lt;li&gt;전체 조직 구조 설계&lt;/li&gt;
  &lt;li&gt;핵심 업무 프로세스 검토&lt;/li&gt;
  &lt;li&gt;팀 조직 구조 설계&lt;/li&gt;
  &lt;li&gt;핵심 인력 선발&lt;/li&gt;
  &lt;li&gt;역할과 책임 할당&lt;/li&gt;
  &lt;li&gt;성과 측정 기준 수립&lt;/li&gt;
  &lt;li&gt;역량 교육 및 훈련&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;본질은 다음과 같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;무엇을 하고 싶은가?&lt;/li&gt;
  &lt;li&gt;어떻게 할 것인가?
    &lt;ol&gt;
      &lt;li&gt;전체 구조는?&lt;/li&gt;
      &lt;li&gt;그 구조에서 맡는 업무는?&lt;/li&gt;
      &lt;li&gt;해당 팀의 구조는?&lt;/li&gt;
      &lt;li&gt;거기에 맞는 인력은?&lt;/li&gt;
      &lt;li&gt;그 인력의 업무 범위는? 책임은?&lt;/li&gt;
      &lt;li&gt;측정 방법은?&lt;/li&gt;
      &lt;li&gt;능력이 없다면 교육은?&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;조직-구조-설계의-요소&quot;&gt;조직 구조 설계의 요소&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;업무 활동
    &lt;ul&gt;
      &lt;li&gt;수직 업무 활동
        &lt;ul&gt;
          &lt;li&gt;경영 계획, 예산 할당 등 우선순위 결정 : 대장이 결정해서 일을 던져줌&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;수평 업무 활동
        &lt;ul&gt;
          &lt;li&gt;업무 프로세스 절차별로 업무 배분 : 팀이 받아서 분산 작업함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;부서화
    &lt;ul&gt;
      &lt;li&gt;조직의 미션과 목적을 달성하기 위한 구조를 만든다.&lt;/li&gt;
      &lt;li&gt;집중, 기능, 분산으로 나뉜다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;보고 체계&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;조직-구조-유형&quot;&gt;조직 구조 유형&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114683896-6060d980-9d4b-11eb-8d31-f88ac0106be6.png&quot; alt=&quot;image&quot; class=&quot;center-verysmall&quot; /&gt;&lt;em&gt;조직 구조 유형&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;집중 구조
    &lt;ul&gt;
      &lt;li&gt;분석 전담 조직을 만듦&lt;/li&gt;
      &lt;li&gt;그 조직에서 일을 받고 우선순위 알아서 정함&lt;/li&gt;
      &lt;li&gt;다른 부서에서 일을 던졌는데 알고보니 일이 중복될 경우가 발생할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기능 구조
    &lt;ul&gt;
      &lt;li&gt;각각의 부서에다가 분석가(기능)를 하나씩 둚&lt;/li&gt;
      &lt;li&gt;전체적으로 요인을 분석하기가 어려움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분산 구조
    &lt;ul&gt;
      &lt;li&gt;집중 구조와 기능 구조를 합한 경우&lt;/li&gt;
      &lt;li&gt;일단 부서를 떼되, 인력을 각 부서에 배치함&lt;/li&gt;
      &lt;li&gt;전체적으로 우선 순위를 정할 수 있음&lt;/li&gt;
      &lt;li&gt;중앙에서 통제하기 때문에 가장 좋은 방법을 공유할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;조직-역량&quot;&gt;조직 역량&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Soft Skill
    &lt;ul&gt;
      &lt;li&gt;통찰력 - 호기심, 비판 능력&lt;/li&gt;
      &lt;li&gt;협업 능력 - 커뮤니케이션&lt;/li&gt;
      &lt;li&gt;전달력 - 스토리 텔링, 시각화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hard Skill
    &lt;ul&gt;
      &lt;li&gt;이론적 지식&lt;/li&gt;
      &lt;li&gt;분석 기술 숙련도&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;직무별 역량 개발 절차 - 특정 조직에 필요한 역량 알아내기
    &lt;ul&gt;
      &lt;li&gt;미션/목표 검토 - 뭐하는 조직이지?&lt;/li&gt;
      &lt;li&gt;구성원의 행동 특성 도출 - 잘하는 녀석들의 행동 관찰&lt;/li&gt;
      &lt;li&gt;구성원의 역량 도출 - 관찰 내용을 기반으로 역량 뽑기&lt;/li&gt;
      &lt;li&gt;역량 모델 확정 - 이 역량을 검토하고 확정하여 해당 직무의 역량을 고정함.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;역량 교육 체계 설계 - 정해진 역량을 어떻게 교육시키냐.
    &lt;ul&gt;
      &lt;li&gt;요구사항 분석&lt;/li&gt;
      &lt;li&gt;역량 모델 검토&lt;/li&gt;
      &lt;li&gt;역량 차이 분석&lt;/li&gt;
      &lt;li&gt;역량 매트릭스 작성&lt;/li&gt;
      &lt;li&gt;직무별 교육체계 설계&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;조직-성과-평가-절차&quot;&gt;조직 성과 평가 절차&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;목표 설정&lt;/li&gt;
  &lt;li&gt;모니터링 - 한번 보자&lt;/li&gt;
  &lt;li&gt;목표 조정 - 바꿔야겠네&lt;/li&gt;
  &lt;li&gt;평가 실시&lt;/li&gt;
  &lt;li&gt;평가의 피드백&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;빅데이터-기술-및-제도&quot;&gt;빅데이터 기술 및 제도&lt;/h1&gt;

&lt;h2 id=&quot;빅데이터-플랫폼&quot;&gt;빅데이터 플랫폼&lt;/h2&gt;

&lt;p&gt;수집 -&amp;gt; 저장 -&amp;gt; 분석 -&amp;gt; 활용&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;수집
    &lt;ul&gt;
      &lt;li&gt;ETL&lt;/li&gt;
      &lt;li&gt;크롤러&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;저장
    &lt;ul&gt;
      &lt;li&gt;RDBMS&lt;/li&gt;
      &lt;li&gt;NoSQL&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분석
    &lt;ul&gt;
      &lt;li&gt;SNS 분석&lt;/li&gt;
      &lt;li&gt;텍스트 분석&lt;/li&gt;
      &lt;li&gt;통계&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;활용
    &lt;ul&gt;
      &lt;li&gt;히스토그램&lt;/li&gt;
      &lt;li&gt;인포그래픽&lt;/li&gt;
      &lt;li&gt;시각화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;데이터-형식&quot;&gt;데이터 형식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;HTML&lt;/li&gt;
  &lt;li&gt;XML&lt;/li&gt;
  &lt;li&gt;CSV - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;JSON - key-value&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;플랫폼-구축-소프트웨어&quot;&gt;플랫폼 구축 소프트웨어&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;R - 분석 프로그래밍 언어&lt;/li&gt;
  &lt;li&gt;Oozie - 워크플로우 관리
    &lt;ul&gt;
      &lt;li&gt;하둡 작업 관리 워크플로우&lt;/li&gt;
      &lt;li&gt;자바 서블릿 컨테이너에서 실행됨&lt;/li&gt;
      &lt;li&gt;Map Reduce, Pig 등의 액션을 기반으로 워크플로우 제어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Flume - 데이터 수집
    &lt;ul&gt;
      &lt;li&gt;로그 데이터 수집&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HBase - 분산 데이터베이스
    &lt;ul&gt;
      &lt;li&gt;HDFS 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sqoop - &lt;strong&gt;정형&lt;/strong&gt; 데이터 수집
    &lt;ul&gt;
      &lt;li&gt;SQL to Hadoop 약자&lt;/li&gt;
      &lt;li&gt;RDBMS -&amp;gt; HDFS로 보냄&lt;/li&gt;
      &lt;li&gt;혹은 반대 방향&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;분산-컴퓨팅-환경-소프트웨어&quot;&gt;분산 컴퓨팅 환경 소프트웨어&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Map Reduce
    &lt;ul&gt;
      &lt;li&gt;key-value&lt;/li&gt;
      &lt;li&gt;map(데이터 취합) -&amp;gt; shuffle(통합 처리) -&amp;gt; reduce(데이터 정리)&lt;/li&gt;
      &lt;li&gt;분산 데이터 처리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HDFS
    &lt;ul&gt;
      &lt;li&gt;Hadoop Distributed File System&lt;/li&gt;
      &lt;li&gt;대용량 파일을 분산된 서버에 저장하고, 처리할 수 있는 파일 시스템&lt;/li&gt;
      &lt;li&gt;Name node, data node로 구성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;아파치 하둡
    &lt;ul&gt;
      &lt;li&gt;HDFS + Map Reduce = 생태계&lt;/li&gt;
      &lt;li&gt;Spark, Hive, YARN, Cassandra, Pig&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;YARN
    &lt;ul&gt;
      &lt;li&gt;하둡의 맵리듀스 처리 부분을 새롭게 만든 &lt;strong&gt;자원 관리 플랫폼&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Master, Slave로 구성된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;아파치 스파크
    &lt;ul&gt;
      &lt;li&gt;하둡 기반 대규모 데이터 분산 처리 시스템&lt;/li&gt;
      &lt;li&gt;스트리밍 데이터, 온라인 머신러닝등 &lt;strong&gt;실시간 데이터 처리&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;scala, java, python, R&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;하둡-에코-시스템&quot;&gt;하둡 에코 시스템&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/114687650-efbbbc00-9d4e-11eb-9a33-a7245ad702c4.png&quot; alt=&quot;image&quot; class=&quot;center-small&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;비정형 데이터 수집
    &lt;ul&gt;
      &lt;li&gt;Chukwa (척와)&lt;/li&gt;
      &lt;li&gt;Flume - 로그 데이터&lt;/li&gt;
      &lt;li&gt;Scribe - 실시간 스트리밍&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정형 데이터 수집
    &lt;ul&gt;
      &lt;li&gt;Sqoop - HDFS &amp;lt;-&amp;gt; RDBMS&lt;/li&gt;
      &lt;li&gt;Hiho&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분산 데이터 저장
    &lt;ul&gt;
      &lt;li&gt;HDFS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분산 데이터 처리
    &lt;ul&gt;
      &lt;li&gt;Map Reduce - 키-밸류로 처리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분산 데이터베이스
    &lt;ul&gt;
      &lt;li&gt;HBASE&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 가공
    &lt;ul&gt;
      &lt;li&gt;Pig&lt;/li&gt;
      &lt;li&gt;Hive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 마이닝
    &lt;ul&gt;
      &lt;li&gt;Mahout&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;실시간 SQL 질의
    &lt;ul&gt;
      &lt;li&gt;Impala&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;워크 플로우 관리
    &lt;ul&gt;
      &lt;li&gt;Oozie&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분산 코디네이션
    &lt;ul&gt;
      &lt;li&gt;Zookeeper&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;개인정보보호-관련-법령&quot;&gt;개인정보보호 관련 법령&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;개인정보 보호법&lt;/li&gt;
  &lt;li&gt;정보통신망법&lt;/li&gt;
  &lt;li&gt;신용정보법&lt;/li&gt;
  &lt;li&gt;위치정보법&lt;/li&gt;
  &lt;li&gt;개인정보 안전성 확보 조치 기준&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;마이데이터란? - 자신의 정보 관리, 통제, 능동적 활용&lt;/p&gt;

&lt;h2 id=&quot;개인정보-비식별-조치&quot;&gt;개인정보 비식별 조치&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;가명 처리
    &lt;ul&gt;
      &lt;li&gt;장길산, 20세, 인천 거주, 미래대 재학 -&amp;gt; 김식별, 20대, 인천 거주, 외국대 재학&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;총계 처리 - 통계 방법이 있어야 함
    &lt;ul&gt;
      &lt;li&gt;장길정 160cm, 김식별 150cm -&amp;gt; 물리학과 학생 키 합: 310cm, 평균키 155cm&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 삭제
    &lt;ul&gt;
      &lt;li&gt;주민등록번호 -&amp;gt; 몇년 생인지만 확인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 범주화 -&amp;gt; 묶는 느낌이 강함
    &lt;ul&gt;
      &lt;li&gt;장길산, 41세 -&amp;gt; 장 씨, 40~50세&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 마스킹 - 문자로 대체
    &lt;ul&gt;
      &lt;li&gt;장OO 41세, OO대학&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 14 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-01-%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%9D%B4%ED%95%B4.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/ml/2021/04/14/Bigdata-Analysis-01-%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%9D%B4%ED%95%B4.html</guid>
        
        <category>Data Science</category>
        
        <category>Machine Learning</category>
        
        <category>빅데이터분석기사</category>
        
        
        <category>DS/ML</category>
        
      </item>
    
      <item>
        <title>Char to int</title>
        <description> C++에서 char로 입력을 받을 경우 int로 변환하는 방법을 알아본다. : &lt;p&gt;문제를 풀다가 문자를 정수로 바꾸려고 보니 너무 귀찮았다. 그래서 이김에 확실히 해두려고 검색을 시도. 방법은 매우 간단했다. 문자 역시 아스키 코드, 즉 숫자이기 때문에 입력 받은 숫자를 기반으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;문자가 가지는 아스키 코드값을 빼주면 숫자값이 나온다!&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아스키 코드의 순서가 ‘0’ 부터 ‘9’씩 차례대로 1씩 늘어나므로 위와 같이 작성하면 해당 수의 값을 구할 수 있다.&lt;/p&gt;

&lt;p&gt;‘1’의 문자의 아스키 코드 값을 보고 싶다면 (int)를 붙여 형 변환을 해준다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numAscii&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ch1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numAscii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//49 ('1'의 아스키 코드 값)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 13 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/c++/2021/04/13/char-to-int.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/c++/2021/04/13/char-to-int.html</guid>
        
        <category>c++</category>
        
        <category>char</category>
        
        <category>int</category>
        
        <category>typechange</category>
        
        
        <category>DV/C++</category>
        
      </item>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(9184번): 신나는 함수 실행</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;실버2&lt;/em&gt;&lt;/strong&gt; : 동적계획법 문제이다.&lt;/p&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  main.cpp&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  algorithm_prac&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Created by 최완식 on 2021/04/05.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ios_base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync_with_stdio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;w(&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;) = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/9184&quot; target=&quot;\_blank&quot;&gt;백준(9184번) - 신나는 함수 실행&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/04/13/%EB%B0%B1%EC%A4%80-%EC%8B%A0%EB%82%98%EB%8A%94-%ED%95%A8%EC%88%98%EC%8B%A4%ED%96%89.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/04/13/%EB%B0%B1%EC%A4%80-%EC%8B%A0%EB%82%98%EB%8A%94-%ED%95%A8%EC%88%98%EC%8B%A4%ED%96%89.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>동적계획법</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [Algorithm Problem Solving] 백준(2667번): 단지번호붙이기</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;실버1&lt;/em&gt;&lt;/strong&gt; : DFS 문제이다.&lt;/p&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
#include &amp;lt;typeinfo&amp;gt;
#include &amp;lt;algorithm&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isVisit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,};&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isVisit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;isVisit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ios_base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync_with_stdio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isVisit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;apart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2667&quot; target=&quot;\_blank&quot;&gt;백준(2667번) - 단지번호붙이기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cs/algorithm/2021/04/13/%EB%B0%B1%EC%A4%80-%EB%8B%A8%EC%A7%80%EB%B2%88%ED%98%B8-%EB%B6%99%EC%9D%B4%EA%B8%B0.html</link>
        <guid isPermaLink="true">http://localhost:4000/cs/algorithm/2021/04/13/%EB%B0%B1%EC%A4%80-%EB%8B%A8%EC%A7%80%EB%B2%88%ED%98%B8-%EB%B6%99%EC%9D%B4%EA%B8%B0.html</guid>
        
        <category>백준</category>
        
        <category>알고리즘</category>
        
        <category>DFS</category>
        
        
        <category>CS/Algorithm</category>
        
      </item>
    
      <item>
        <title> [trouble shooting] Opencv 확장자 지정 오류</title>
        <description> 확장자 지정해주지 않았을 때 Opencv가 뱉는 에러 정리 : &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cv2.error: OpenCV(4.5.1) C:\Users\appveyor\AppData\Local\Temp\1\pip-req-build-oduouqig\opencv\modules\imgcodecs\src\loadsave.cpp:682: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;result.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;뒤에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt; 잘 안해주면 나는 에러다. 똑바로 쳐보자.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2021/04/12/opencv-%ED%99%95%EC%9E%A5%EC%9E%90-%EC%A7%80%EC%A0%95-%EC%98%A4%EB%A5%98.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2021/04/12/opencv-%ED%99%95%EC%9E%A5%EC%9E%90-%EC%A7%80%EC%A0%95-%EC%98%A4%EB%A5%98.html</guid>
        
        <category>Tips</category>
        
        <category>Opencv</category>
        
        <category>error</category>
        
        <category>trouble shooting</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
  </channel>
</rss>