<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>완숙의 에그머니 🍳</title>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://localhost:4000/</link>
    <description>Be On My Wave 🌊</description>
    <pubDate>Tue, 15 Sep 2020 17:41:47 +0900</pubDate>
    
      <item>
        <title>09: 최종 보고서</title>
        <link>/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-09-%EB%B3%B4%EA%B3%A0%EC%84%9C.html</link>
        <guid isPermaLink="true">/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-09-%EB%B3%B4%EA%B3%A0%EC%84%9C.html</guid>
        <description>&lt;blockquote&gt;
  &lt;p&gt;공공자전거의 최적 위치를 수요와 리밸런싱을 고려하여 제시하였다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;text-align:center&quot;&gt;파일을 불러오는데 시간이 좀 걸립니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879362-f3e5cb00-f447-11ea-9ccb-fcbbe2e62733.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0001&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879377-f811e880-f447-11ea-8eb2-40ced4374241.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0002&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879383-f8aa7f00-f447-11ea-9d9c-c11ad1d908f5.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0003&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879385-f9431580-f447-11ea-99fb-ed8a9323a483.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0004&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879388-f9dbac00-f447-11ea-88fe-53a442c2ca93.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0005&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879392-fa744280-f447-11ea-8d7f-df6e77d7fbdd.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0006&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879393-fb0cd900-f447-11ea-8cfa-553f7235b8dc.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0007&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879397-fb0cd900-f447-11ea-8c93-959ed0cee67a.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0008&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879399-fba56f80-f447-11ea-8cd1-15be24fd34fa.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0009&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879402-fc3e0600-f447-11ea-95db-b9ca65878734.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0010&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879404-fcd69c80-f447-11ea-9410-751cd15dac43.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0011&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879406-fcd69c80-f447-11ea-84c1-b21fb6a1fe95.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0012&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879408-fd6f3300-f447-11ea-8ae6-cbce1133073f.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0013&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879411-fe07c980-f447-11ea-84b5-478139f76d55.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0014&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879413-fe07c980-f447-11ea-83c1-1be2deb6be06.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0015&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879416-fea06000-f447-11ea-80b0-0e84a7e08288.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0016&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879418-ff38f680-f447-11ea-919d-51aced863362.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0017&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879419-ff38f680-f447-11ea-85a2-231cd5912cbc.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0018&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879420-ffd18d00-f447-11ea-9af0-c7b8fd27ac2e.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0019&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879422-006a2380-f448-11ea-8352-f65f6965768f.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0020&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879423-0102ba00-f448-11ea-8f83-169ea69d253b.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0021&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879424-0102ba00-f448-11ea-850b-c582570452bb.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0022&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879426-019b5080-f448-11ea-87ce-a76de0bc068a.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0023&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879427-0233e700-f448-11ea-846e-46307d13893a.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0024&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879429-0233e700-f448-11ea-93b4-8ec942fca14a.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0025&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879430-02cc7d80-f448-11ea-9609-89baf35cfe2a.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0026&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879432-03651400-f448-11ea-8d6e-f4bce173162d.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0027&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879434-03651400-f448-11ea-9e48-e9da8f38a574.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0028&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879435-03fdaa80-f448-11ea-8fe4-4d4b6d20f926.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0029&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879438-04964100-f448-11ea-9e47-5961e69a4186.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0030&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879440-04964100-f448-11ea-8176-9d2c0ad7b900.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0031&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879443-052ed780-f448-11ea-8b26-c73928c7b675.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0032&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879444-05c76e00-f448-11ea-847f-ed9f40b4a2a5.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0033&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879447-05c76e00-f448-11ea-9579-c91678e0a0ef.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0034&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879450-06600480-f448-11ea-8dca-61abd0cbb004.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0035&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879452-06f89b00-f448-11ea-841f-864036e909c6.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0036&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879456-06f89b00-f448-11ea-9fb5-8b3ffcdb125d.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0037&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879457-07913180-f448-11ea-864a-21fb2e0c6648.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0038&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879459-0829c800-f448-11ea-906e-a74400da7fb6.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0039&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879460-0829c800-f448-11ea-99ce-b85f53d20eae.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0040&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879462-08c25e80-f448-11ea-8832-3b35580dcc52.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0041&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879464-095af500-f448-11ea-9cea-7ab4f0a101be.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0042&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879466-095af500-f448-11ea-8ad3-3e08bad504d4.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0043&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879467-09f38b80-f448-11ea-9c05-d9cd4395a109.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0044&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879468-0a8c2200-f448-11ea-866d-ff41381a81e1.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0045&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879470-0a8c2200-f448-11ea-85c4-a4d2da78f225.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0046&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879473-0b24b880-f448-11ea-88ef-187b950a3c04.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0047&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879475-0bbd4f00-f448-11ea-9642-72e69efa7b44.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0048&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879478-0c55e580-f448-11ea-8919-3c243975dfd5.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0049&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879480-0cee7c00-f448-11ea-9a39-cdcd2944bd07.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0050&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879482-0d871280-f448-11ea-8e93-2d0fae2f2ba4.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0051&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879486-0d871280-f448-11ea-965c-22c48d2ba03e.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0052&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879488-0e1fa900-f448-11ea-97db-4ddc39b70672.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0053&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879490-0eb83f80-f448-11ea-841e-1d79741d7688.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0054&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879491-0f50d600-f448-11ea-9950-fd2becdf8517.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0055&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879498-0f50d600-f448-11ea-960e-15cf786f1c8a.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0056&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879500-0fe96c80-f448-11ea-9abd-9bfac7fa1e15.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0057&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879506-10820300-f448-11ea-9f7d-6a7ba83fcdcf.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0058&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879508-111a9980-f448-11ea-8033-c1af422ef19a.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0059&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879511-11b33000-f448-11ea-961a-9c5784051023.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0060&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879513-124bc680-f448-11ea-9ecb-da5117ccd49d.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0061&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879517-12e45d00-f448-11ea-9404-05bd6146fc95.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0062&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879519-12e45d00-f448-11ea-970e-8881ffcb1a74.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0063&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879521-137cf380-f448-11ea-84dd-e54d2c1c9b2c.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0064&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879524-137cf380-f448-11ea-8805-9b504f50fa58.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0065&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879529-14158a00-f448-11ea-9cb2-c65143aaece9.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0066&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879535-14ae2080-f448-11ea-9f14-1860020cdd15.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0067&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879537-1546b700-f448-11ea-9fc5-4e9ec17ee8fc.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0068&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879540-15df4d80-f448-11ea-80da-6bf1f0447398.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0069&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879544-15df4d80-f448-11ea-82de-a2b01cd64151.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0070&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879545-1677e400-f448-11ea-9f14-30a84ed765d8.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0071&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879547-17107a80-f448-11ea-898b-bc238173b363.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0072&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879550-17107a80-f448-11ea-8b4d-387c1b227462.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0073&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879552-17a91100-f448-11ea-9ea2-e0fcf9cc0b2d.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0074&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879554-1841a780-f448-11ea-92de-c753d332a89f.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0075&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879556-1841a780-f448-11ea-8322-a79c3204aa30.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0076&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879559-18da3e00-f448-11ea-8453-91364deaf630.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0077&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879562-1972d480-f448-11ea-9aef-36d2ac517c41.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0078&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879566-1972d480-f448-11ea-8ce4-503eb6dd822a.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0079&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92879568-1a0b6b00-f448-11ea-89be-2df5dc622965.jpg&quot; alt=&quot;고양시 공공자전거 스테이션 최적 위치 선정 - 수요와 Rebalancing을 고려한 최적 자전거 _page-0080&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>08: 결과 분석</title>
        <link>/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-08.html</link>
        <guid isPermaLink="true">/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-08.html</guid>
        <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92856145-136ffa00-f42e-11ea-94c7-7d28260a033e.png&quot; alt=&quot;screencapture-compas-nb-lh-or-kr-user-wansook0316-nbconvert-html-result-ipynb-2020-09-11-11_42_16-10&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>07: 최적 후보군 선정 알고리즘</title>
        <link>/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-07.html</link>
        <guid isPermaLink="true">/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-07.html</guid>
        <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92856129-0f43dc80-f42e-11ea-84ca-b1aee4ddd4b4.png&quot; alt=&quot;screencapture-compas-nb-lh-or-kr-user-wansook0316-nbconvert-html-result-ipynb-2020-09-11-11_42_16-7&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>06: 후보군 생성 &amp; 수요 예측 모델</title>
        <link>/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-06-%ED%9B%84%EB%B3%B4%EA%B5%B0-%EC%83%9D%EC%84%B1.html</link>
        <guid isPermaLink="true">/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-06-%ED%9B%84%EB%B3%B4%EA%B5%B0-%EC%83%9D%EC%84%B1.html</guid>
        <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92856115-0c48ec00-f42e-11ea-9da3-45e6542c8422.png&quot; alt=&quot;screencapture-compas-nb-lh-or-kr-user-wansook0316-nbconvert-html-result-ipynb-2020-09-11-11_42_16-6&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>05: EDA &amp; 후보군 생성</title>
        <link>/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-05-EDA-%ED%9B%84%EB%B3%B4%EA%B5%B0-%EC%83%9D%EC%84%B1.html</link>
        <guid isPermaLink="true">/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-05-EDA-%ED%9B%84%EB%B3%B4%EA%B5%B0-%EC%83%9D%EC%84%B1.html</guid>
        <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92856105-094dfb80-f42e-11ea-90ef-2236f1c328f8.png&quot; alt=&quot;screencapture-compas-nb-lh-or-kr-user-wansook0316-nbconvert-html-result-ipynb-2020-09-11-11_42_16-5&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>04: EDA 2</title>
        <link>/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-04-EDA.html</link>
        <guid isPermaLink="true">/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-04-EDA.html</guid>
        <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92856095-06eba180-f42e-11ea-8231-94958796f667.png&quot; alt=&quot;screencapture-compas-nb-lh-or-kr-user-wansook0316-nbconvert-html-result-ipynb-2020-09-11-11_42_16-4&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>03: EDA 1</title>
        <link>/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-03-EDA.html</link>
        <guid isPermaLink="true">/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-03-EDA.html</guid>
        <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92856085-04894780-f42e-11ea-8dce-a2f9876c4d2d.png&quot; alt=&quot;screencapture-compas-nb-lh-or-kr-user-wansook0316-nbconvert-html-result-ipynb-2020-09-11-11_42_16-3&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>02: 전처리 &amp; EDA</title>
        <link>/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-02-%EC%A0%84%EC%B2%98%EB%A6%AC-EDA.html</link>
        <guid isPermaLink="true">/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-02-%EC%A0%84%EC%B2%98%EB%A6%AC-EDA.html</guid>
        <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92856076-0226ed80-f42e-11ea-8201-7b4c973927a4.png&quot; alt=&quot;screencapture-compas-nb-lh-or-kr-user-wansook0316-nbconvert-html-result-ipynb-2020-09-11-11_42_16-2&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>01: 전처리</title>
        <link>/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-01-%EC%A0%84%EC%B2%98%EB%A6%AC.html</link>
        <guid isPermaLink="true">/cv/projects/2020/09/11/%EA%B3%A0%EC%96%91%EC%8B%9C-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%B5%9C%EC%A0%81-%EC%9E%85%EC%A7%80-%EC%84%A0%EC%A0%95-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-01-%EC%A0%84%EC%B2%98%EB%A6%AC.html</guid>
        <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/92856063-fe936680-f42d-11ea-916e-b1e38d3d7fd0.png&quot; alt=&quot;screencapture-compas-nb-lh-or-kr-user-wansook0316-nbconvert-html-result-ipynb-2020-09-11-11_42_16&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>13: Mask R-CNN</title>
        <link>/ds/dl/2020/09/07/computer-vision-13-Mask-RCNN.html</link>
        <guid isPermaLink="true">/ds/dl/2020/09/07/computer-vision-13-Mask-RCNN.html</guid>
        <description>&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-60-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;structure of mask RCNN&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Facebok AI Research (FAIR), Kaiming He, 24 Jan 2018&lt;/li&gt;
  &lt;li&gt;Marr Prize at ICCV 2017&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;object instance segmentation&lt;/code&gt;을 위한 프레임 워크이다. 기존의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;semantic segmentation&lt;/code&gt;을 넘어서 각각의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instance&lt;/code&gt;도 구분이 가능한 구조를 만들었다. 학습이 쉽고 Faster RCNN에 조금의 overhead만 추가하여 5fps의 빠르기로 실행된다. COCO 데이터셋에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instance segmentation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bbox object detection&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;person keypoint detection&lt;/code&gt; 에서 가장 높은 결과를 보였다.&lt;/p&gt;

&lt;h2 id=&quot;핵심-아이디어&quot;&gt;핵심 아이디어&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Faster R-CNN에서 detect한 각각의 box에 mask를 씌워주자!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instance segmentation&lt;/code&gt;은 두 가지 과제를 합친 것이다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;object detection
    &lt;ul&gt;
      &lt;li&gt;bbox를 이용하여 object를 분류하고, 위치를 찾는 것.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;semantic segmentation
    &lt;ul&gt;
      &lt;li&gt;object instance는 구별하지 않지만, 정해진 카테고리별로 각각의 pixel을 분류하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이전의 Segmentation에서 중요한 논문인 FCN에서는 총 3가지를 고려하였다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;pixel 단위의 classification&lt;/li&gt;
  &lt;li&gt;그렇기 때문에 pixel 단위 softmax 값 추출이 필요&lt;/li&gt;
  &lt;li&gt;multi instance를 고려해야 함&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;하지만 mask RCNN은 Faster RCNN을 그대로 가져다가 쓰기 때문에, 이 문제가 다소 변경된다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;del&gt;pixel 단위의 classification&lt;/del&gt; -&amp;gt; 이미 bounding box로 구분을 해줌&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;그렇기 때문에 pixel 단위 softmax 값 추출이 필요&lt;/del&gt; -&amp;gt; bounding box 안에서 물체 인지 아닌지만 구분해주면 됨(Sigmoid)&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;multi instance를 고려해야 함&lt;/del&gt; -&amp;gt; 이미 multi instance로 bounding box를 쳐줌&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-18-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;class, box 외에 mask FCN만 추가한다.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;결과적으로, 이 문제에서 해야할 일은 masking을 수행하는 것이다. 그래서 논문이름도 Mask RCNN이다.&lt;/p&gt;

&lt;h2 id=&quot;equivariance&quot;&gt;Equivariance&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;input에서의 변화가 output의 변화에 영향을 준다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-39-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;Invariance vs. Equivariance&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;classification 문제에서는 label을 도출하는 문제이기 때문에 Invariance 하다. 하지만 segmentation 문제 같은 경우에는 output이 원래 이미지 사이즈와 같아야 하기 때문에 이 문제는 Equivariance로 해결 해야한다. 이 때, 저자들은 convolution은 translation-equivariance 하기 때문에 이 네트워크를 사용했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-41-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-42-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;Fully convolutional network 사용&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;mask RCNN의 구조를 담당하는 Faster RCNN은 Fully conv net을 사용하고 있다. 여기서 mask RCNN은 뒤의 mask head부분 역시 FCN을 사용하여 제작하였다.&lt;/p&gt;

&lt;h2 id=&quot;roi-align&quot;&gt;RoI Align&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-47-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;기존의 Faster RCNN의 구조&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;기존에 Faster RCNN에서는 feature map을 뽑아낸 뒤, Region proposal Network를 사용하여 이를 제시하였다. 그 방법은 RoI pooling이었다. 하지만 segmentation은 detection 문제와 다르게 단지 box를 치는 문제가 아니다. 좀더 정확한 위치정보를 담은 상태의 feature map이 필요하다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-54-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;RoI pooling은 proposal의 위치를 반올림한다.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;기존의 RoI Pooling을 생각해보면, 4개의 좌표 변환 값을 regression하고, 이를 기반으로 예상 좌표를 얻어낸 뒤(실수) 이를 반올림하여 정수단위인 pixel의 위치를 제안한다. 하지만, 소수점을 반올림한 좌표를 가지고 Pooling을 해주면 input image의 원본 위치 정보가 왜곡된다. classfication에는 이런 문제가 심각하지 않지만, pixel-by-pixel로 detection을 진행해야 하는 segmentation 에서는 문제가 발생한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-58-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;RoI Align&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;이 문제를 해결하기 위해 저자들은 다음과 같은 방법을 통해 이를 해결한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;제안된 proposal을 들고온다.&lt;/li&gt;
  &lt;li&gt;Roi pooling에서 4등분 했던 것처럼 일단 자른다.&lt;/li&gt;
  &lt;li&gt;그 안에서 추가적으로 4등분을 한다. (subcell)&lt;/li&gt;
  &lt;li&gt;이렇게 발생한 격자내에 들어오는 픽셀의 면적을 기준으로 가중평균한다.&lt;/li&gt;
  &lt;li&gt;발생한 값을 기준으로 pooling한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-45-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 방법은 Mask Accuracy에서 큰 향상을 보였다.&lt;/p&gt;

&lt;h2 id=&quot;mask-rcnn-architecture&quot;&gt;Mask RCNN architecture&lt;/h2&gt;

&lt;p&gt;Mask R-CNN은 여러 가지 아키텍쳐를 합친 네트워크인데, 크게 두 가지로 나뉜다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Convolutional backbone architecture
    &lt;ul&gt;
      &lt;li&gt;이미지에서 feature extraction&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Network head
    &lt;ul&gt;
      &lt;li&gt;bounding-box 인식(classification &amp;amp; regression), mask 예측&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-64-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;Head Architecture&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;resnet-backbone&quot;&gt;ResNet Backbone&lt;/h3&gt;

&lt;p&gt;논문에서는 ResNet 과 ResNeXt networks 를 depth 50 or 101 layers에 대해 평가했다. 원래 Faster R-CNN은 ResNet을 사용하는데, 4번째 스테이지의 마지막 Conv layer(이하 C4)에서 features를 뽑아낸다.
이 경우, 이 backbone을 사용한다면 우리는 ResNet-50-C4 와 같이 부를 것이다. ResNet-50-C4가 일반적으로 사용된다.&lt;/p&gt;

&lt;h3 id=&quot;resnet-fpn-backbone&quot;&gt;ResNet-FPN Backbone&lt;/h3&gt;

&lt;p&gt;FPN은 Feature Pyramid Network로, top-down architecture를 사용한다. FPN backbone을 사용하는 Faster R-CNN은 피쳐 피라미드의 서로 다른 레벨로부터 RoI features를 뽑아내지만, 나머지는 vanilla ResNet과 같다. Mask R-CNN에서 피쳐 추출을 위해 ResNet-FPN backbone을 이용하는 것은 정확도와 속도 면에서 엄청난 향상을 보였다. Feature Pyramid Network는 추후 글에서 작성하도록 하겠다.&lt;/p&gt;

&lt;h2 id=&quot;loss-function-decoupling&quot;&gt;Loss function (decoupling)&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;L = L_{cls} + L_{box} + L_{mask}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;$L_{cls}$ : Softmax Cross Entropy (loss of classification)&lt;/li&gt;
  &lt;li&gt;$L_{box}$ : bbox regression&lt;/li&gt;
  &lt;li&gt;$L_{mask}$ : Binary Cross Entropy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위의 아이디어를 그대로 가져와서, 결과적으로 masking만 하는 loss 함수를 정의하여 사용한다. 그림으로 이해해 보자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-27-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;이전 방법들과의 비교&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;그림을 보게되면, 단순히 masking을 하는 구조를 추가하고, 이를 반영하는 방식으로 진행된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-35-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;mask Head의 loss update 방법&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;update 방법은 상당히 단순한데, 일단 전체 mask loss는 모든 클래스(사람, 말 등)에서 차이가 나는 mask의 정도로 정의가 된다. 하지만 해당 사진에서 bounding box는 하나만 box 처리가 되어 있다. 기존의 faster RCNN에서 bounding box를 예측할 때는 하나의 box만 처리하기 때문이다. 이런 상황에서 mask에 대한 업데이트는 모든 사물에 대해서 업데이트를 할 수 없게 된다. 그래서 이렇게 해당 사진의 class가 정해질 경우, 해당 class에 해당하는 mask만을 선택하고 이를 업데이트 해준다. 즉, 말이 정답 class인 경우, 이 class에 해당하는 mask만 학습된다.&lt;/p&gt;

&lt;p&gt;결과적으로 이렇게 학습되는 mask branch는 &lt;strong&gt;어떠한 class인지 상관 없이 물체의 masking만 따는 것을 배우게 된다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-37-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;test senario&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;이렇게 학습된 mask branch는 실제로 여러개의 물체에 대한 mask라고 예측할 것이다. 하지만 이 녀석은 어떠한 물체인지 분간하지 못하는데, 이부분에 있어서 classification의 결과를 넣어주어, 하나의 masking을 제안한다. 즉 mask prediction에서는 단지 이 pixel이 mask인지, 아닌지 만을 구분(sigmoid 사용)하도록 하여 성능의 향상을 보였다. 이러한 방법을 Mask prediction 과 class prediction 을 decouple 했다고 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/pr057maskrcnn-180107092616/95/pr057-mask-rcnn-38-638.jpg?cb=1515317235&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;decouple을 시도했을 때 올라간 정확도&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://mylifemystudy.tistory.com/82&quot;&gt;Mask R-CNN 정리&lt;/a&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=RtSZALC9DlU&amp;amp;t=248s&quot;&gt;PR-057: Mask R-CNN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;import seaborn as sns
f = plt.figure(figsize=(10, 6))
gs = f.add_gridspec(1, 2)&lt;/p&gt;

&lt;p&gt;with sns.axes_style(“whitegrid”):
    ax = f.add_subplot(gs[0, 0])
    sns.barplot(x=”date”, y=”LEAS_COUNTS”, data=demand_date, palette=”Blues”, ax=ax)&lt;/p&gt;

&lt;p&gt;with sns.axes_style(“whitegrid”):
    ax = f.add_subplot(gs[0, 1])
    sns.barplot(x=”date”, y=”RTN_COUNTS”, data=demand_date, palette=”YlOrBr”, ax=ax)&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>12: Deep Lab v3</title>
        <link>/ds/dl/2020/09/07/computer-vision-12-deep-lab-v3.html</link>
        <guid isPermaLink="true">/ds/dl/2020/09/07/computer-vision-12-deep-lab-v3.html</guid>
        <description>&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
</description>
        <pubDate>Mon, 07 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>11: Deep Lab v2</title>
        <link>/ds/dl/2020/09/07/computer-vision-11-deep-lab-v2.html</link>
        <guid isPermaLink="true">/ds/dl/2020/09/07/computer-vision-11-deep-lab-v2.html</guid>
        <description>&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
</description>
        <pubDate>Mon, 07 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>10: Deep Lab v1</title>
        <link>/ds/dl/2020/09/07/computer-vision-10-deep-lab-v1.html</link>
        <guid isPermaLink="true">/ds/dl/2020/09/07/computer-vision-10-deep-lab-v1.html</guid>
        <description>&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
</description>
        <pubDate>Mon, 07 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>09: Conditional Random Field(CRF)</title>
        <link>/ds/dl/2020/09/07/computer-vision-09-conditional-random-field.html</link>
        <guid isPermaLink="true">/ds/dl/2020/09/07/computer-vision-09-conditional-random-field.html</guid>
        <description>&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
</description>
        <pubDate>Mon, 07 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>08: Dilated Convolution</title>
        <link>/ds/dl/2020/09/07/computer-vision-08-Dilated-Convolution.html</link>
        <guid isPermaLink="true">/ds/dl/2020/09/07/computer-vision-08-Dilated-Convolution.html</guid>
        <description>&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;앞서 알아본, FCN에서 발생하는 문제를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dilated Convolution&lt;/code&gt;으로 해결하겠다는 논지이다.&lt;/p&gt;

&lt;h2 id=&quot;핵심-아이디어&quot;&gt;핵심 아이디어&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dilated Convolution으로 parameter 수를 유지하면서 Pooling의 효과를 누리고, Resoultion이 줄어드는 것을 막는다.(&lt;del&gt;일석삼조&lt;/del&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;기존의 FCN에서는 pooling으로 인한 해상도 감소문제를 skip connection으로 해결하였다. 여기서, 근본적으로 pooling에 대해 해결하보려는 의지가 엿보인다. 우리가 Pooling을 하는 이유는 global feature를 multi-scale로 보기 위해서이다. 하지만 이런 관점은 classification의 관점에서 맞는 말이다.&lt;/p&gt;

&lt;p&gt;segementation을 위해서는 결국 dense prediction을 얻어내야 하는데, 이는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;up-convolutions&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;multi-scale inputs&lt;/code&gt;를 통해 가능하다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;up-convolutions&lt;/code&gt;는 &lt;a href=&quot;https://wansook0316.github.io/ds/dl/2020/09/07/computer-vision-07-Learning-Deconvolutional-Network-for-Semantic-Segmentation.html&quot;&gt;이전 글&lt;/a&gt;에서 찾아볼 수 있다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;multi sclae inputs&lt;/code&gt;은 이름에서도 유추가 가능하듯이 하나의 이미지에 대해서 여러 scale에서 test를 하는 방법을 의미한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://hoya012.github.io/assets/img/object_detection_sixth/1.PNG&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;multi scale inputs 예시&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dilated Convolution&lt;/code&gt;은 애초에 pooling을 해야돼? 라는 질문에서 출발한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99448C335A014DD609&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;80%&quot; /&gt;&lt;em&gt;Dilated Convolution&lt;/em&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dilated Convolution&lt;/code&gt;은 필터 내부에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zero padding&lt;/code&gt;을 추가해 강제로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;receptive field&lt;/code&gt;를 늘리는 방법이다. 위 그림은 파란색이 인풋, 초록색이 아웃풋인데, 진한 파랑 부분에만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;weight&lt;/code&gt;가 있고 나머지 부분은 0으로 채워진다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;receptive field&lt;/code&gt;란 필터가 한 번의 보는 영영으로 볼 수 있는데, 결국 필터를 통해 어떤 사진의 전체적인 특징을 잡아내기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;receptive field&lt;/code&gt;는 높으면 높을 수록 좋다. 그렇다고 필터의 크기를 크게하면 연산의 양이 크게 늘어나고, 오버피팅의 우려가있다.&lt;/p&gt;

&lt;p&gt;그래서 일반적인 CNN에서는 이를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conv-pooling&lt;/code&gt;의 결합으로 해결한다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pooling&lt;/code&gt;을 통해 dimension을 줄이고 다시 작은 크기의 filter로 conv를 하면, 전체적인 특징을 잡아낼 수 있다. 하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pooling&lt;/code&gt;을 수행하면 기존 정보의 손실이 일어난다. 이를 해결하기 위한것이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dilated Convolution&lt;/code&gt;으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pooling&lt;/code&gt;을 수행하지 않고도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;receptive field&lt;/code&gt;의 크기를 크게 가져갈 수 있기 때문에 spatial dimension의 손실이 적고, 대부분의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;weight&lt;/code&gt;가 0이기 때문에 연산의 효율도 좋다.&lt;/p&gt;

&lt;h2 id=&quot;structure&quot;&gt;Structure&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99BD2B335A01526610&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;Structure of using Dilated Convolution&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;첫번째 그림은 classification을 위한 CNN VGG-16의 아키텍쳐이다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conv-pooling&lt;/code&gt;을 반복적으로 수행한 후, 마지막으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fully Connected Layer&lt;/code&gt;에 통과하여 최종 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;classification&lt;/code&gt; 결과를 얻는 과정을 보여주고있다. 그 아래의 그림은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dilated Convolution&lt;/code&gt;을 통하여 이미지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;segmentation&lt;/code&gt;하는 예를 보여주고 있다. 이 아키텍쳐의 아웃풋의 사이즈는 28x28xN 이며, (N은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;segmentation&lt;/code&gt; 원하는 클래스의 수) 이를 다시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upsampling&lt;/code&gt;하여 원래의 크기로 복원한다. (이부분에서 공간적 정보의 손실이 있다.)&lt;/p&gt;

&lt;p&gt;이 아키텍쳐와 classification 아키텍쳐의 다른점은 우선 다이아몬드 모양으로 표시한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dilated convolution&lt;/code&gt;으 통해 공간적 정보의 손실을 최소화하였다. 그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dilated convolution&lt;/code&gt; 2번을 적용한 뒤 나온 28x28x4096 에 대하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1x1 convolution&lt;/code&gt;으로 channel의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dimension reduction&lt;/code&gt;을 수행한다. 최종적으로 28x28xN이 나오고 이를 8x &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upsampling&lt;/code&gt;하여 최종적인 segmention 결과를 output으로 내놓는다. 이 때 1x1 convolution 은 공간적인 정보를 잃지 않기 위해 사용되며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;classification&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fully Connected Layer(FC)&lt;/code&gt;와 비슷한 역할을 한다. 하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;classification&lt;/code&gt;에서는 공간적인 정보는 중요하지 않기 때문에 Flatten하여 사용하는 것이다. 이는 &lt;a href=&quot;https://wansook0316.github.io/ds/dl/2020/09/07/computer-vision-06-Fully-Convolutional-Networks.html&quot;&gt;앞선 글&lt;/a&gt;에서 자세하게 다뤄보았다.&lt;/p&gt;

&lt;h2 id=&quot;결과&quot;&gt;결과&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99E713335A01509E2A&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;comparison of whether using dilated conv&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;이 그림을 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pooling-conv&lt;/code&gt;후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upsampling&lt;/code&gt;을 하는 것과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dilated convolution(astrous convolution)&lt;/code&gt;을 하는 것의 차이를 볼 수 있다. 위 그림에서 볼 수 있듯 공간적 정보의 손실이 있는 것을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upsampling&lt;/code&gt; 하면 해상도가 떨어진다. 하지만 dilated convolution의 그림을 보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;receptive field&lt;/code&gt;를 크게 가져가면서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;convolution&lt;/code&gt;을 하면 정보의 손실을 최대화하면서 해상도는 큰 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;output&lt;/code&gt;을 얻을 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://modulabs-biomedical.github.io/Learning_Deconvolution_Network_for_Semantic_Segmentation&quot;&gt;Learning Deconvolution Network for Semantic Segmentation&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
  </channel>
</rss>
