<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>완숙의 에그머니🍳</title>
    <description>Be On My Wave 🌊 | 뚜렷한 목표, 치밀한 계획, 우직한 실천</description>
    <author>wansook0316@gmail.com</author>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 25 Dec 2020 09:48:39 +0900</pubDate>
    <lastBuildDate>Fri, 25 Dec 2020 09:48:39 +0900</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title> [Backend Concept] Proxy</title>
        <description> 프록시란 무엇인가? : &lt;h1 id=&quot;프록시란&quot;&gt;프록시란?&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;대리 응답&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102857729-4c2b6080-446c-11eb-95f9-dafe6aad1eae.png&quot; alt=&quot;image&quot; class=&quot;center&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;프록시(proxy)는 “대리”라는 뜻이다. 그렇다면 어떠한 경우에서 이러한 대리의 개념이 필요할까? 보통은 보안상의 이유로 직접 통신하는 것이 문제가 발생할 경우 이런 방식을 사용한다. 이 때, 직접 통신할 수 없는 두 점 사이에서 중계기로 통신을 수행하는 기능을 “프록시” 그리고 그 기능을 수행하는 서버를 “프록시 서버”라 한다.&lt;/p&gt;

&lt;h1 id=&quot;특징&quot;&gt;특징&lt;/h1&gt;

&lt;p&gt;위의 그림에서 보듯 프록시 서버는 중간에 위치해 있기 때문에, 어느 주체에서 바라보느냐에 따라 그 역할이 다르다.&lt;/p&gt;

&lt;p&gt;먼저, 클라이언트 호스트 입장에서 보게되면 프록시 서버는 그저 원격 서버처럼 작동한다. 반대로 인터넷(서비스 서버) 입장에서 보면 프록시 서버는 마치 클라이언트 처럼 동작한다.&lt;/p&gt;

&lt;p&gt;보통 보안 상의 목적으로 프록시 서버를 사용하지만, 사실 그 외에도 다양한 역할을 수행한다. 우선 프록시 서버는 프록시 서버에 요청된 내용들을 &lt;strong&gt;캐시&lt;/strong&gt;를 사용하여 저장해 둔다. 그리고 이 캐시 안에 저장되어 있는 정보를 요청하는 경우, 원격 서버에 접속하지 않고 바로 응답한다. 이럴 경우 전송 시간을 절약할 수 있고, 불필요한 연결을 방지한다는 점에서 장점을 갖는다. 또한 외부와의 트래픽을 방지한다는 것도 장점이 될 수 있겠다.&lt;/p&gt;

&lt;h1 id=&quot;프록시-서버의-종류&quot;&gt;프록시 서버의 종류&lt;/h1&gt;

&lt;p&gt;서버의 위치에 따라 두가지로 나뉜다.&lt;/p&gt;

&lt;h2 id=&quot;forward-proxy&quot;&gt;Forward Proxy&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-22 오후 3 46 53&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102858042-ebe8ee80-446c-11eb-817c-16fd9a82f2ed.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;먼저, 프록시 서버를 통과하여 인터넷에 연결되는 경우이다. 이러한 방식은 즉, 클라이언트 호스트들이 접근하고 싶은 원격 리소스에 가기 위해서는 프록시 서버를 통과해야 갈 수 있다는 말이다. 만약 프록시 서버에 캐시로 저장되어 있다면, 다음 요청시 캐시된 데이터로부터 바로 제공한다.&lt;/p&gt;

&lt;p&gt;이 프록시 서버는 로컬 디스크에 데이터를 저장하며, 클라이언트 호스트들을 사용중인 웹 브라우저를 이용하여 프록시 서버 사용 설정을 해야 사용이 가능하기 때문에, 프록시 서버를 사용한다는 것을 인지 가능하다. 이러한 방식은 대역폭 사용을 감소시킬 수 있다는 것과 접근 정책 구현에 있어 다루기 쉬우면서 비용이 저렴하다. 또한 무조건 프록시 서버를 통과해야 하기 때문에 사용자가 접속하는 웹 사용환경을 제한할 수 있으므로 기업 환경에서 많이 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;reverse-proxy&quot;&gt;Reverse Proxy&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102858610-f061d700-446d-11eb-8f36-8a2ea671ef8e.png&quot; alt=&quot;image&quot; class=&quot;center&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이번에는 전과 다르게 인터넷을 통하여 원격 서버에 접속하기 바로 전단계에 프록시 서버를 놓는 방식이다. 이 방식을 사용하면 클라이언트 호스트들은 프록시 서버에 연결되었다는 것을 알지 못한다. 마치 리소스에 직접 접근하는 것과 같이 느끼게 된다.&lt;/p&gt;

&lt;p&gt;내부 서버가 직접 서비스를 제공해도 되지만 이렇게 구성하는 이유는 보안 때문이다. 보통 기업 네트워크 환경은 DMZ 라는 &lt;strong&gt;내부 네트워크&lt;/strong&gt;와 &lt;strong&gt;외부 네트워크&lt;/strong&gt; 사이에 위치하는 구간이 존재하고, 이 구간에는 웹, FTP, 메일 등 &lt;strong&gt;외부 서비스&lt;/strong&gt;를 제공하는 서버들이 위치하고 있다. 즉, 이러한 서버가 프록시 서버의 역할을 하고 있다고 생각하면 된다.&lt;/p&gt;

&lt;p&gt;만약, DMZ 위치에 WAS(Web application Server)를 두고 사용을 했다고 생각해보자. 서비스를 하는데는 지장이 없겠지만, WAS에는 보통 DB와 통신을 하도록 연동이 되어 있다. 이러한 경우 WAS가 털리면 DB까지 같이 털린다. 그렇기 때문에 WAS는 DMZ의 뒤에 위치시키고, 프록시 서버로 메일 서버, 웹 서버를 두고 데이터를 WAS로 부터 받아와서 서비스를 하는 방식을 많이 사용한다.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/cloud/2020/12/22/%ED%94%84%EB%A1%9D%EC%8B%9C.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/cloud/2020/12/22/%ED%94%84%EB%A1%9D%EC%8B%9C.html</guid>
        
        <category>Terms</category>
        
        <category>Server</category>
        
        
        <category>DS/Cloud</category>
        
      </item>
    
      <item>
        <title> [Backend Concept] HTTP Structure</title>
        <description> 프록시란 무엇인가? : &lt;h1 id=&quot;http&quot;&gt;HTTP&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;HyperText Transfer Protocol&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;하이퍼 텍스트(HTML) 문서를 교환하기 위해 만들어진 protocol(통신 규약)을 의미한다. 즉, 웹 상에서 네트워크로 서버끼리 통신할 때 어떻게 통신할래? 에 대한 답이다. 프론트 서버와 클라이언트 간의 통신에 사용되고, 프론트와 백 서버간의 통신에서도 사용된다. &lt;strong&gt;TCP/IP&lt;/strong&gt; 기반으로 되어 있다.&lt;/p&gt;

&lt;h1 id=&quot;핵심-특징&quot;&gt;핵심 특징&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Request/Responce 구조로 되어 있다.
    &lt;ul&gt;
      &lt;li&gt;클라이언트가 http request를 보내면, 서버는 http responce를 보낸다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stateless이다.
    &lt;ul&gt;
      &lt;li&gt;상태를 저장하지 않는다. 이게 무슨말 일까?&lt;/li&gt;
      &lt;li&gt;즉, 요청이 오면 그에 응답을 할 뿐, 여러 요청/응답 끼리 연결되어 있지 않다. 즉, 각각의 요청과 응답은 독립적이다.&lt;/li&gt;
      &lt;li&gt;예를 들어보면, 클라이언트가 요청을 하고, 응답을 받았다. 그 다음에 다시 요청을 보냈다고 해서 그 전에 보낸 요청/응답에 대해 알 수 없다.&lt;/li&gt;
      &lt;li&gt;이런 과정이 만약 필요하다면 &lt;strong&gt;쿠키, 세션&lt;/strong&gt;등을 사용해야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;http-구조&quot;&gt;HTTP 구조&lt;/h1&gt;

&lt;h2 id=&quot;request-structure&quot;&gt;Request Structure&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102958407-1f388580-4520-11eb-9136-a194b53623e2.png&quot; alt=&quot;image&quot; class=&quot;center&quot; width=&quot;30%&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /search HTTP/1.1
Accept: */*
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Type: application/json
Content-Length: 257
Host: google.com
User-Agent: HTTPie/0.9.3

{
    &quot;imp_uid&quot;: &quot;imp_1234567890&quot;,
    &quot;merchant_uid&quot;: &quot;order_id_8237352&quot;,
    &quot;status&quot;: &quot;paid&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;요청-라인&quot;&gt;요청 라인&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /search HTTP/1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가장 먼저 나오는 문구이다. 예시 요청 메시지에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET / HTTP/1.1&lt;/code&gt;이 요청 라인이다. 요청 라인에는 세개의 필드가 있다. 다음과 같은 구조로 되어 있다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Method URL Version&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;method&quot;&gt;Method&lt;/h4&gt;

&lt;p&gt;어떠한 Method를 사용하여 정보를 요청하느냐에 대한 정보이다. 즉, 요청 방식이다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PUT&lt;/code&gt; 등이 있다.&lt;/p&gt;

&lt;h4 id=&quot;url&quot;&gt;URL&lt;/h4&gt;

&lt;p&gt;요청하는 리소스의 위치를 나타낸다. 현재는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;로, 즉 루트 경로를 나타내고 있다.&lt;/p&gt;

&lt;h4 id=&quot;version&quot;&gt;Version&lt;/h4&gt;

&lt;p&gt;HTTP 버전을 의미한다. 대부분의 version 명명법과 같이 맨 앞 숫자 1은 Major 업데이트를 의미하고, 그 뒤는 Minor 업데이트를 말한다.&lt;/p&gt;

&lt;h3 id=&quot;header&quot;&gt;Header&lt;/h3&gt;

&lt;p&gt;해당 request에 대한 추가 정보(addtional information)를 담고 있는 부분이다. 예를 들어, request 메세지 body의 총 길이 (Content-Length) 등. Key:Value 값으로 되어있다. Headers도 크게 3부분으로 나뉘지만(general headers, request headers, entity headers) 너무 자세한 부분이므로, 3부분 으로 구성되어 있다는 것만 알고 있어도 괜찮다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Accept: application/json
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Length: 83
Content-Type: application/json
Host: intropython.com
User-Agent: HTTPie/0.9.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;자주 사용되는 header 정보에는 이런 것들이 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Host
    &lt;ul&gt;
      &lt;li&gt;요청이 전송되는 target의 host url: 예를 들어, google.com&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;User-Agent
    &lt;ul&gt;
      &lt;li&gt;요청을 보내는 클라이언트의 대한 정보: 예를 들어, 웹브라우저에 대한 정보.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Accept
    &lt;ul&gt;
      &lt;li&gt;해당 요청이 받을 수 있는 응답(response) 타입.
Connection&lt;/li&gt;
      &lt;li&gt;해당 요청이 끝난 후에 클라이언트와 서버가 계속해서 네트워크 컨넥션을 유지 할 것인지 아니면 끊을 것인지에 대해 지시하는 부분.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Content-Type
    &lt;ul&gt;
      &lt;li&gt;해당 요청이 보내는 메세지 body의 타입. 예를 들어, JSON을 보내면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application/json&lt;/code&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Content-Length:
    &lt;ul&gt;
      &lt;li&gt;메세지 body의 길이.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;body&quot;&gt;Body&lt;/h3&gt;

&lt;p&gt;해당 Request의 실제 메시지, 내용을 말한다. Body가 없는 요청도 많다. GET 과 같은 method를 사용하는 경우 보통 정보를 받기 위한 것이 많으므로 Body는 비워져 있다. 반대로 어떠한 정보를 가져오면서 요청하는 경우에는 이 body는 채워져 있다. 예를 들어 POST를 사용하여 로그인을 하려는 경우, 값을 함께 들고온다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;imp_uid&quot;: &quot;imp_1234567890&quot;,
    &quot;merchant_uid&quot;: &quot;order_id_8237352&quot;,
    &quot;status&quot;: &quot;paid&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;responce-구조&quot;&gt;Responce 구조&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102958423-2790c080-4520-11eb-8b23-30f2f3da92b9.png&quot; alt=&quot;image&quot; class=&quot;center&quot; width=&quot;30%&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 404 Not Found

Connection: close
Content-Length: 1573
Content-Type: text/html; charset=UTF-8
Date: Mon, 20 Aug 2018 07:59:05 GMT

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=en&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;meta name=viewport content=&quot;initial-scale=1, minimum-scale=1, width=device-width&quot;&amp;gt;
  &amp;lt;title&amp;gt;Error 404 (Not Found)!!1&amp;lt;/title&amp;gt;
  &amp;lt;style&amp;gt;
    *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* &amp;gt; body{background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}
  &amp;lt;/style&amp;gt;
  &amp;lt;a href=//www.google.com/&amp;gt;&amp;lt;span id=logo aria-label=Google&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
  &amp;lt;p&amp;gt;&amp;lt;b&amp;gt;404.&amp;lt;/b&amp;gt; &amp;lt;ins&amp;gt;That’s an error.&amp;lt;/ins&amp;gt;
  &amp;lt;p&amp;gt;The requested URL &amp;lt;code&amp;gt;/payment-sync&amp;lt;/code&amp;gt; was not found on this server.  &amp;lt;ins&amp;gt;That’s all we know.&amp;lt;/ins&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;status-line&quot;&gt;Status Line&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 404 Not Found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;응답의 상태를 간략하게 나타내는 부분이다. Version, Status Code, Status Text로 구성되어 있다.&lt;/p&gt;

&lt;h3 id=&quot;headers&quot;&gt;Headers&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Connection: close
Content-Length: 1573
Content-Type: text/html; charset=UTF-8
Date: Mon, 20 Aug 2018 07:59:05 GMT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Request의 headers와 동일하다. 하지만 응답시에만 사용하는 header가 있는데, User-Agent 대신 Server 헤더가 사용된다.&lt;/p&gt;

&lt;h3 id=&quot;body-1&quot;&gt;Body&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=en&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;meta name=viewport content=&quot;initial-scale=1, minimum-scale=1, width=device-width&quot;&amp;gt;
  &amp;lt;title&amp;gt;Error 404 (Not Found)!!1&amp;lt;/title&amp;gt;
  &amp;lt;style&amp;gt;
    *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* &amp;gt; body{background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}
  &amp;lt;/style&amp;gt;
  &amp;lt;a href=//www.google.com/&amp;gt;&amp;lt;span id=logo aria-label=Google&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
  &amp;lt;p&amp;gt;&amp;lt;b&amp;gt;404.&amp;lt;/b&amp;gt; &amp;lt;ins&amp;gt;That’s an error.&amp;lt;/ins&amp;gt;
  &amp;lt;p&amp;gt;The requested URL &amp;lt;code&amp;gt;/payment-sync&amp;lt;/code&amp;gt; was not found on this server.  &amp;lt;ins&amp;gt;That’s all we know.&amp;lt;/ins&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Request의 body와 대부분 동일하다. 하지만 항상 있을 필요는 없다. 경우에 따라 Body가 없는 Responce도 있다.&lt;/p&gt;

&lt;h1 id=&quot;http-method&quot;&gt;HTTP Method&lt;/h1&gt;

&lt;h2 id=&quot;get&quot;&gt;GET&lt;/h2&gt;
&lt;p&gt;이름 그대로 어떠한 데이터를 서버로 부터 받아(GET)올때 주로 사용하는 Method. 데이터 생성/수정/삭제 없이 받아오기만 할때 사용된다. 가장 간단하고 많이 사용되는 HTTP Method이다. 언급한대로 주로 데이터를 받아올때 사용되기 때문에 request에 body를 안 보내는 경우가 많다.&lt;/p&gt;

&lt;h2 id=&quot;post&quot;&gt;POST&lt;/h2&gt;
&lt;p&gt;데이터를 생성/수정/삭제 할때 주로 사용되는 Method. 데이터를 생성 및 수정 할때 많이 사용하기 때문에 대부분의 경우 request body가 포함되서 보내진다.&lt;/p&gt;

&lt;h2 id=&quot;options&quot;&gt;OPTIONS&lt;/h2&gt;
&lt;p&gt;주로 요청 URI에서 사용할 수 있는 Method를 받아올때  사용된다. 예를 들어, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/update uri&lt;/code&gt;에서 어떤 method를 요청 가능한가(GET? POST?)를 알고 싶으면 먼저 OPTIONS 요청을 사용해서 확인하게 된다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Request 하기
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http -v OPTIONS http://example.org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Request Message
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;OPTIONS / HTTP/1.1
Accept: */*
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Length: 0
Host: example.org
User-Agent: HTTPie/0.9.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Responce Message
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
Allow: OPTIONS, GET, HEAD, POST
Cache-Control: max-age=604800
Content-Length: 0
Date: Mon, 20 Aug 2018 08:37:45 GMT
Expires: Mon, 27 Aug 2018 08:37:45 GMT
Server: EOS (vny006/0450)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;put&quot;&gt;PUT&lt;/h2&gt;
&lt;p&gt;POST와 비슷하다. 데이터를 생성 할때 사용되는 Method. POST와 겹치기 때문에 PUT을 사용하는 곳도 있고 POST로 통일해서 사용하는 곳도 있는데, 최근 몇년 사이에 POST에 밀려서 잘 사용 안되는 추세.&lt;/p&gt;

&lt;h2 id=&quot;delete&quot;&gt;DELETE&lt;/h2&gt;
&lt;p&gt;특정 데이터를 서버에서 삭제 요청을 보낼때 쓰이는 Method. PUT과 마찬가지로 POST에 밀려서 잘 사용안되는 추세.&lt;/p&gt;

&lt;h2 id=&quot;http-status-code&quot;&gt;HTTP Status Code&lt;/h2&gt;

&lt;h3 id=&quot;200-ok&quot;&gt;200 OK&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;가장 자주 보게 되는 status code.&lt;/li&gt;
  &lt;li&gt;문제없이 다 잘 실행 되었을때 보내는 코드.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;301-moved-permanently&quot;&gt;301 Moved Permanently&lt;/h3&gt;
&lt;p&gt;해당 URI가 다른 주소로 바뀌었을때 보내는 코드.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 301 Moved Permanently
Location: http://www.example.org/index.asp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;400-bad-request&quot;&gt;400 Bad Request&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;해당 요청이 잘못된 요청일때 보내는 코드.&lt;/li&gt;
  &lt;li&gt;주로 요청에 포함된 input 값들이 잘못된 값들이 보내졌을때 사용되는 코드.&lt;/li&gt;
  &lt;li&gt;예를 들어, 전화번호를 보내야 되는데 text가 보내졌을때 등등.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;401-unauthorized&quot;&gt;401 Unauthorized&lt;/h2&gt;
&lt;p&gt;유저가 해당 요청을 진행 할려면 먼저 로그인을 하거나 회원 가입을 하거나 등등이 필요하다는 것을 나타내려 할때 쓰이는 코드.&lt;/p&gt;

&lt;h2 id=&quot;403-forbidden&quot;&gt;403 Forbidden&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;유저가 해당 요청에 대한 권한이 없다는 뜻.&lt;/li&gt;
  &lt;li&gt;예를 들어, 오직 과금을 한 유저만 볼 수 있는 데이터를 요청 했을때 등.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;404-not-found&quot;&gt;404 Not Found&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;요청된 uri가 존재 하지 않는다는 뜻.
```
http -v google.com/no-such-uri&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GET /no-such-uri HTTP/1.1
Accept: &lt;em&gt;/&lt;/em&gt;
Accept-Encoding: gzip, deflate
Connection: keep-alive
Host: google.com
User-Agent: HTTPie/0.9.3&lt;/p&gt;

&lt;p&gt;HTTP/1.1 404 Not Found
Content-Length: 1572
Content-Type: text/html; charset=UTF-8
Date: Mon, 20 Aug 2018 08:46:48 GMT
Referrer-Policy: no-referrer
```&lt;/p&gt;

&lt;h2 id=&quot;500-internal-server-error&quot;&gt;500 Internal Server Error&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;서버에서 에러가 났을때 사용되는 코드.&lt;/li&gt;
  &lt;li&gt;API 개발을 하는 백앤드 개발자들이 싫어하는 코드.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 22 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/cloud/2020/12/22/Http-Structure.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/cloud/2020/12/22/Http-Structure.html</guid>
        
        <category>Terms</category>
        
        <category>Server</category>
        
        
        <category>DS/Cloud</category>
        
      </item>
    
      <item>
        <title> [MindDetector] 마음을 읽는 AI 우울감 자가진단 서비스, 마인드디텍터</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Google NMT api와 kobert를 사용하여 감성 분석을 진행하고, 서비스에 탑재하였다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sarah5398/mind-detector&quot;&gt;마음을 읽는 AI 우울감 자가진단 서비스, 마인드디텍터&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102734570-810fb880-4383-11eb-9bff-bb8a403cb7ac.jpg&quot; alt=&quot;f9180a50826347d9ad4db726f6d58a74NgzvkNaAgUePc86E-0&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102734578-866d0300-4383-11eb-9651-0711e280ed24.jpg&quot; alt=&quot;f9180a50826347d9ad4db726f6d58a74NgzvkNaAgUePc86E-1&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102734580-87059980-4383-11eb-9862-96d4d651f0f9.jpg&quot; alt=&quot;f9180a50826347d9ad4db726f6d58a74NgzvkNaAgUePc86E-2&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102734584-879e3000-4383-11eb-9d70-810cded6864f.jpg&quot; alt=&quot;f9180a50826347d9ad4db726f6d58a74NgzvkNaAgUePc86E-3&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102734585-8836c680-4383-11eb-9339-45c0edbc744d.jpg&quot; alt=&quot;f9180a50826347d9ad4db726f6d58a74NgzvkNaAgUePc86E-4&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102734588-88cf5d00-4383-11eb-9631-0a2ba0584790.jpg&quot; alt=&quot;f9180a50826347d9ad4db726f6d58a74NgzvkNaAgUePc86E-5&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102734590-88cf5d00-4383-11eb-9f8e-0cfb4a7266ab.jpg&quot; alt=&quot;f9180a50826347d9ad4db726f6d58a74NgzvkNaAgUePc86E-6&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/projects/2020/12/21/Mind-detector.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/projects/2020/12/21/Mind-detector.html</guid>
        
        <category>project</category>
        
        <category>CV</category>
        
        
        <category>CV/Projects</category>
        
      </item>
    
      <item>
        <title> [GCP Fundamentals] 03: Virtul Machine in Cloud</title>
        <description> 가상 머신이 무엇인지 알아보자. : &lt;h1 id=&quot;학습-목표&quot;&gt;학습 목표&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Google Compute Engine의 목적 및 사용 사례 파악한다.&lt;/li&gt;
  &lt;li&gt;다양한 Google Cloud Platform 네트워킹 및 운영 툴 및 서비스 요약&lt;/li&gt;
  &lt;li&gt;GCP(Google Cloud Platform) 콘솔을 사용하여 컴퓨팅 엔진 가상 시스템을 구축&lt;/li&gt;
  &lt;li&gt;gcloud 명령줄 인터페이스를 사용하여 Compute Engine 가상 시스템을 빌드한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;클라우드에서 워크로드를 실행할 수 있는 모든 방법 중에서 가상 시스템이 가장 익숙할 수 있습니다. 컴퓨팅 엔진을 사용하면 구글의 글로벌 인프라에서 가상 머신을 실행할 수 있습니다. 이 모듈에서는 Google Compute Engine이 Google 가상 네트워킹에 중점을 두고 작동하는 방법에 대해 알아보겠습니다. 가상 머신의 좋은 점 중 하나는 가상 머신이 각각 &lt;strong&gt;완전한 운영 체제의 파워와 일반성&lt;/strong&gt;을 가지고 있다는 것입니다. CPU 전원 및 메모리 양, 스토리지 양과 유형을 지정하고 운영 체제를 구축하듯이 가상 시스템을 구성할 수 있습니다. 유연하게 재구성할 수 있으며, 구글 클라우드에서 실행되는 VM의 네트워크 연결성은 전 세계적으로 비교할 수 없을 정도로 뛰어납니다.&lt;/p&gt;

&lt;h1 id=&quot;virtual-private-cloud-vpc-network&quot;&gt;Virtual Private Cloud (VPC) Network&lt;/h1&gt;

&lt;p&gt;많은 사람들이 첫 GCP 프로젝트에서 자체 Virtual Private Cloud를 정의하거나 기본 VPC를 선택하여 시작할 수 있습니다. 그럼에도 불구하고 VPC 네트워크는 Google Cloud 플랫폼 리소스를 서로 연결하고 인터넷에 연결합니다. 네트워크를 분할하고 방화벽 규칙을 사용하여 인스턴스에 대한 액세스를 제한하며 정적 경로를 생성하여 트래픽을 특정 대상으로 전달할 수 있습니다. GCP에 처음 온 많은 사람들을 놀라게 하는 것이 있습니다. 정의한 Virtual Private Cloud 네트워크에는 글로벌 범위가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;871&quot; alt=&quot;스크린샷 2020-12-18 오후 3 58 43&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102584494-e8dabf00-4149-11eb-96cb-aa2f27e372dc.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;전 세계 모든 GCP 영역에 서브넷을 가질 수 있으며 서브넷은 영역을 구성하는 영역에 걸쳐 있을 수 있습니다. 이 아키텍처를 사용하면 글로벌 범위에서 자신만의 네트워크 레이아웃을 쉽게 정의할 수 있습니다. 동일한 서브넷의 서로 다른 영역에 리소스를 가질 수도 있습니다. 서브넷에 할당된 IP 주소 범위를 확장하여 사용자 지정 네트워크에서 서브넷의 크기를 동적으로 늘릴 수 있습니다. 이 작업은 이미 구성된 VM에는 영향을 주지 않습니다. 이 예에서는 VPC에 네트워크가 하나 있습니다. 지금까지, GCPu s-east1 영역에 정의된 하나의 서브넷을 가지고 있다. 두 개의 컴퓨팅 엔진 VM이 연결되어 있습니다. 서로 다른 영역에 있더라도 동일한 서브넷에 있는 인접 네트워크입니다. 이 기능을 사용하여 복원력이 뛰어나지만 네트워크 레이아웃이 단순한 솔루션을 구축할 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;compute-engine&quot;&gt;Compute Engine&lt;/h1&gt;

&lt;p&gt;Compute Engine을 사용하면 Google 인프라에서 가상 시스템을 생성하고 실행할 수 있습니다. 초기 투자도 없으며, 빠르고 일관된 성능을 제공하도록 설계된 시스템에서 수천 개의 가상 CPU를 실행할 수 있습니다. Google Cloud Platform 콘솔 또는 GCloud 명령줄 도구를 사용하여 가상 시스템 인스턴스를 생성할 수 있습니다. VM은 Google에서 제공하는 Linux 및 윈도우즈 Server 이미지 또는 이러한 이미지의 사용자 지정 버전을 실행할 수 있으며, 대부분의 물리적 서버에 대한 이미지를 가져올 수도 있습니다. VM을 생성할 때 메모리 양과 가상 CPU 수를 결정하는 시스템 유형을 선택합니다. 이 종류들은 매우 작은 것에서부터 매우 큰 것까지 다양합니다. 요구 사항을 완벽하게 충족하는 미리 정의된 유형을 찾을 수 없는 경우 사용자 지정 VM을 만들 수 있습니다.&lt;/p&gt;

&lt;p&gt;처리 능력에 대해 말하자면, GPU를 활용할 수 있는 기계 학습 및 데이터 처리와 같은 워크로드가 있는 경우 많은 GCP 영역에 GPU를 사용할 수 있습니다. 물리적 컴퓨터에 디스크가 필요한 것처럼 VM도 디스크가 필요합니다. 표준 스토리지와 SSD 중 두 가지 종류의 영구 스토리지를 선택할 수 있습니다. 애플리케이션에 고성능 스크래치 공간이 필요한 경우 로컬 SSD를 연결할 수 있지만 VM이 종료될 때 로컬 SSD 콘텐츠가 오래가지 않으므로 영구적인 가치를 지닌 데이터를 다른 곳에 저장해야 합니다. 이것이 다른 종류의 디스크를 영구 디스크라고 부르는 이유입니다. 어쨌든 대부분의 사용자는 표준 영구 디스크로 시작하며 이것이 기본값입니다.&lt;/p&gt;

&lt;p&gt;부팅 이미지도 선택할 수 있습니다. GCP는 다양한 버전의 Linux와 Windows를 사용할 수 있으며 자신만의 이미지를 가져올 수도 있습니다. 많은 GCP 고객은 VM이 처음 부팅 시 소프트웨어 패키지 설치와 같은 특정 구성을 항상 제안하기를 원합니다. GCP VM 시작 스크립트를 전달하는 것은 매우 일반적입니다. 다른 종류의 메타데이터도 전달할 수 있습니다. VM이 실행되면 해당 디스크의 지속적 스냅샷을 쉽게 만들 수 있습니다. 이를 백업으로 유지하거나 VM을 다른 영역으로 마이그레이션해야 할 때 사용할 수 있습니다. 어떤 사람도 작업을 완료하기 위해 대기하고 있지 않은 워크로드, 예를 들어 대규모 데이터 집합을 분석하는 배치 작업을 예로 들 수 있습니다. 작업을 실행하기 위한 사전 예방적 VM을 선택하면 비용을 절감할 수 있습니다. 사전 예방적 VM은 한 가지 측면에서 일반 컴퓨팅 엔진 VM과 다릅니다. 다른 곳에 리소스가 필요한 경우 해당 리소스를 종료할 수 있는 컴퓨팅 엔진 사용 권한을 부여했습니다. 사전 예방적 VM을 사용하면 많은 비용을 절약할 수 있지만 작업을 중지하고 재시작할 수 있습니다. 미리 정의된 시스템 유형 집합을 사용하거나 사용자 지정 시스템 유형을 생성하여 가상 CPU 수 및 메모리 양과 같은 인스턴스의 시스템 속성을 선택할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;871&quot; alt=&quot;스크린샷 2020-12-21 오전 11 43 43&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102733887-c9c67200-4381-11eb-89e6-5dc1a6ff3c9e.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;조금 전에 컴퓨팅 엔진에서 매우 큰 VM을 만들 수 있다고 언급했습니다. 이 비디오가 생성될 당시 최대 가상 CPU 수와 VM은 96개였으며 최대 메모리 크기는 624GB의 베타 버전이었습니다. GCP 웹 사이트를 확인하여 현재 이 최대값이 어디에 있는지 확인하십시오. 이러한 대용량 VM은 인메모리 데이터베이스나 CPU 집약적 분석과 같은 워크로드에 적합하지만 대부분의 GCP 고객은 스케일업하지 않고 스케일아웃하는 것으로 시작합니다. 컴퓨팅 엔진에는 로드 메트릭을 기반으로 애플리케이션에서 VM을 추가하고 제거할 수 있는 자동 확장이라는 기능이 있습니다. 이 작업의 또 다른 부분은 VM 간에 들어오는 트래픽의 균형을 조정하는 것이며, Google VPC는 여러 가지 종류의 로드 밸런싱을 지원합니다. 다음 섹션에 있는 것들을 고려해 보겠습니다.&lt;/p&gt;

&lt;h1 id=&quot;important-vpc-capabilities&quot;&gt;Important VPC capabilities&lt;/h1&gt;

&lt;p&gt;물리적 네트워크와 마찬가지로 VPC에도 라우팅 테이블이 있습니다. 이 옵션은 동일한 네트워크 내의 한 인스턴스에서 다른 인스턴스로 트래픽을 전달하는 데 사용됩니다. 외부 IP 주소를 요구하지 않고 하위 네트워크 및 GCP 영역 사이에서도 가능합니다. VPC 라우팅 테이블은 기본 제공되므로 라우터를 프로비저닝하거나 관리할 필요가 없습니다. GCP에 대해 프로비저닝하거나 관리할 필요가 없는 또 다른 기능, 방화벽 인스턴스입니다. VPC는 글로벌 분산 방화벽을 제공합니다. 제어하여 수신 트래픽과 송신 트래픽 모두에 대한 액세스를 제한할 수 있습니다. Compute Engine 인스턴스의 메타데이터 태그 측면에서 방화벽 규칙을 정의할 수 있으므로 매우 편리합니다. 예를 들어 모든 웹 서버에 “web”이라는 태그를 지정하고 포트 80 또는 443의 트래픽이 “web” 태그로 모든 VM에 허용된다는 방화벽 규칙을 작성할 수 있습니다. 기억하세요, VPC는 GCP 프로젝트에 속합니다. 하지만 귀사의 GCP 프로젝트가 여러 개 있는데 VPC가 서로 의견을 교환해야 한다면 어떻겠습니까? 걱정마세요, 그건 완전히 실행 가능하고 다루기 쉽거든요. 두 VPC가 트래픽을 교환할 수 있도록 피어 관계를 설정하기만 하면 됩니다. 한편, IAM의 모든 기능을 사용하여 한 프로젝트에서 VPC와 상호 작용할 수 있는 사람과 대상을 제어하려는 경우 이를 위한 공유 VPC가 제공됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;871&quot; alt=&quot;스크린샷 2020-12-21 오전 11 46 43&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102734056-35104400-4382-11eb-820b-6dcefd8c39c4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;몇 개의 슬라이드에서는 변화하는 로드에 대응하기 위해 가상 머신이 자동으로 확장되는 방법에 대해 설명했습니다. 하지만 고객이 VM 4개와 VM 40개를 동시에 제공할 수 있는데 어떻게 애플리케이션을 이용할 수 있습니까? 클라우드 로드 밸런싱이 그 해답입니다. 클라우드 로드 밸런싱은 모든 트래픽을 위한 완전한 분산 소프트웨어 정의 관리 서비스입니다. 또한 로드 밸런싱 장치는 관리해야 하는 VM에서 실행되지 않으므로 확장이나 관리에 대해 걱정할 필요가 없습니다. HTTP 및 HTTPS, 기타 TCP 및 SSL 트래픽, UDP 트래픽 등 모든 트래픽 앞에 클라우드 로드 밸런싱을 배치할 수 있습니다. 클라우드 로드 밸런싱을 사용하면 단일 anycast IP 프론트가 전 세계 지역의 모든 백엔드 인스턴스를 종료합니다. 이 기능은 자동 다중 영역 페일오버를 포함하여 영역 간 로드 밸런싱을 제공하며, 백엔드가 정상 상태가 되지 않을 경우 트래픽을 분수 단위로 이동합니다. 클라우드 로드 밸런싱은 사용자, 트래픽, 백엔드 상태, 네트워크 상태 및 기타 관련 조건의 변화에 신속하게 대응합니다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;871&quot; alt=&quot;스크린샷 2020-12-21 오후 12 07 13&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102735177-12cbf580-4385-11eb-9141-e713e8cbe74a.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102735474-e95f9980-4385-11eb-9ed3-81be6892474f.png&quot; alt=&quot;0_filoFgWcpVAm5ere&quot; /&gt;&lt;/p&gt;

&lt;p&gt;수요가 크게 증가할 것으로 예상하면 어떻게 될까요? 말하자면, 온라인 게임이 히트를 칠 것 같아요. Google에 수신 로드를 경고하기 위해 지원 티켓을 신청해야 합니까? 아니요. 사전 경고는 필요하지 않습니다. 웹 응용 프로그램에 대해 국가 간 로드 밸런싱이 필요한 경우 HTTPS 로드 밸런싱을 사용합니다. HTTP가 아닌 Secure Sockets Layer 트래픽의 경우 글로벌 SSL 프록시 로드 밸런서를 사용합니다. Secure Sockets Layer를 사용하지 않는 다른 TCP 트래픽인 경우 글로벌 TCP 프록시 로드 밸런서를 사용합니다. 이러한 두 가지 프록시 서비스는 특정 포트 번호에서만 작동하고 TCP에서만 작동합니다. 포트 번호에 UDP 트래픽 또는 트래픽을 로드 밸런싱하려면 지역 로드 밸런서를 사용하여 GCP 영역에 걸쳐 로드 밸런싱이 가능합니다.&lt;/p&gt;

&lt;p&gt;마지막으로, 이러한 모든 서비스의 공통점은 인터넷에서 구글 네트워크로 들어오는 트래픽을 위한 것이라는 점입니다. 하지만 프로젝트 내에서 트래픽의 균형을 맞추려면 어떻게 해야 합니까? 예를 들어, 애플리케이션의 프레젠테이션 계층과 비즈니스 논리 계층 사이에서? 이를 위해 내부 로드 밸런서를 사용합니다. GCP 내부 IP 주소의 트래픽을 수락하고 컴퓨팅 엔진 VM 간에 로드 밸런싱을 수행합니다. 사람들이 지불하지 않는 가장 유명한 구글 서비스 중 하나는 8.8.8.8로, 전 세계에 퍼블릭 도메인 이름 서비스를 제공합니다. DNS는 인터넷 호스트 이름을 주소로 변환합니다. 여러분이 상상하듯이, 구글은 고도로 발달된 DNS 인프라를 가지고 있습니다. 8.8.8.8을 사용할 수 있으므로 모든 사용자가 이용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 GCP에 구축한 애플리케이션의 인터넷 호스트 이름과 주소는 어떻게 됩니까? GCP는 클라우드 DNS를 제공하여 전 세계가 이를 찾을 수 있도록 지원합니다. 구글과 동일한 인프라에서 실행되는 관리형 DNS 서비스입니다. 이 제품은 대기 시간이 짧고 가용성이 높으며 사용자가 애플리케이션과 서비스를 사용할 수 있게 하는 비용 효율적인 방법입니다. 게시하는 DNS 정보는 전 세계 중복 위치에서 제공됩니다. 클라우드 DNS도 프로그래밍할 수 있습니다. GCP 콘솔, 명령줄 인터페이스 또는 API를 사용하여 수백만 개의 DNS 영역과 레코드를 게시하고 관리할 수 있습니다.&lt;/p&gt;

&lt;p&gt;구글은 전세계적인 에지 캐시 시스템을 가지고 있습니다. 이 시스템을 사용하여 Google Cloud CDN을 사용하여 프로그램에서 콘텐츠 전송을 가속화할 수 있습니다. 고객은 네트워크 지연 시간을 줄일 수 있습니다. 콘텐츠의 원본은 로드가 줄어들고 비용도 절약할 수 있습니다. HTTPS 로드 밸런싱을 설정한 후에는 확인란 하나로 클라우드 CDN을 활성화하기만 하면 됩니다.&lt;/p&gt;

</description>
        <pubDate>Tue, 15 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/cloud/2020/12/15/GCP-Fundamentals-03-Virtual-machine-in-the-cloud.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/cloud/2020/12/15/GCP-Fundamentals-03-Virtual-machine-in-the-cloud.html</guid>
        
        <category>Cloud</category>
        
        <category>GCP</category>
        
        <category>Google</category>
        
        
        <category>DS/Cloud</category>
        
      </item>
    
      <item>
        <title> [GCP Fundamentals] 02: Getting Started with GCP</title>
        <description> 본격적으로 시작해보자! : &lt;h1 id=&quot;학습-목표&quot;&gt;학습 목표&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Google Cloud Platform에서 프로젝트, 폴더 및 조직 노드의 용도를 알기&lt;/li&gt;
  &lt;li&gt;ID 및 액세스 관리의 목적 및 사용 사례 설명&lt;/li&gt;
  &lt;li&gt;Google Cloud Platform과 상호 작용하는 방법을 알기&lt;/li&gt;
  &lt;li&gt;Cloud Launcher를 사용하여 솔루션 배포를 구축하기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;GCP에서 워크로드를 실행할 때 프로젝트를 사용하여 워크로드를 구성한다. Google Cloud Identity와 액세스 관리(IM 또는 IAM이라고도 함)를 사용하여 누가 무엇을 할 수 있는지 제어할 수 있다.&lt;/p&gt;

&lt;p&gt;또 이러한 기능을 여러 인터페이스를 선택하여 연결할 수 있다. 이번에는 이러한 기본 사항을 사용해 보는 것을 기반으로 시작한다.&lt;/p&gt;

&lt;p&gt;프로젝트는 GCP에서 사용하는 리소스를 구성하는 주요 방법이다. 일반적으로 공통적인 비즈니스 목표를 기반으로 관련 리소스를 그룹화하는 데 사용한다. 최소한의 특권의 원칙은 클라우드든 사내든 모든 종류의 컴퓨팅 인프라를 관리하는 데 매우 중요하다. 이 원칙은 각 &lt;strong&gt;사용자가 자신의 작업을 수행하는 데 필요한 권한&lt;/strong&gt;만 가지는 것을 말한다. 최소 권한 환경에서 사람들은 전체 종류의 오류로부터 보호된다.&lt;/p&gt;

&lt;p&gt;예를 들어보자. 내 동료가 우연히 실행 중인 생산 데이터베이스를 삭제한 적이 있다. 그러지 말았어야 했는데 시스템에서 루트 사용자로 일하고 있었기 때문이다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 5 02 21&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102321037-78546680-3fc0-11eb-807f-d7ad7e74d35f.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;GCP 고객은 IM을 사용하여 최소한의 특권을 구현하고, 모든 사람이 더 생산적으로 일할 수 있도록 한다. GCP의 관리 계층과 상호 작용하는 네 가지 방법은 웹 기반 콘솔, SDK 및 SDK 및 명령줄 툴, API, 모바일 애플리케이션 등이다. 이번 챕터에서는 콘솔과 명령줄 도구를 이용한다.&lt;/p&gt;

&lt;p&gt;사내 인프라에 애플리케이션을 구축하면 전체 스택 보안을 책임져야 한다. 하드웨어의 물리적 보안과 해당 하드웨어가 있는 시설에서 디스크에 있는 데이터를 암호화하여 네트워크의 무결성에 이르기까지 애플리케이션에 저장된 컨텐츠를 안전하게 보호해야 한다.&lt;/p&gt;

&lt;p&gt;애플리케이션을 Google Cloud Platform으로 이동하면 Google은 많은 하위 보안 계층을 처리한다. 그것의 규모 때문에, 구글은 대부분의 고객들이 스스로 할 수 있는 것보다 더 높은 수준의 보안을 제공할 수 있다. 보안 스택의 상위 계층은 고객의 책임으로 남는다. 구글은 IAM과 같은 도구를 제공하여 고객이 이러한 계층에서 선택한 정책을 구현할 수 있도록 지원한다.&lt;/p&gt;

&lt;h1 id=&quot;the-google-cloud-platform-resource-hierarchy&quot;&gt;The Google Cloud Platform resource hierarchy&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 5 20 46&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102322836-0af60500-3fc3-11eb-99cc-6bd7f7312ccc.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bottom-up 방식으로 GCP 리소스 계층을 가장 쉽게 이해할 수 있다. 가상 시스템, 클라우드 스토리지 버킷, 테이블 및 빅 쿼리 등 GCP에서 사용하는 모든 리소스가 프로젝트로 구성된다.&lt;/p&gt;

&lt;p&gt;선택적으로 이러한 프로젝트를 폴더로 구성할 수 있다. 폴더는 다른 폴더를 포함할 수 있다. 조직에서 사용하는 모든 폴더와 프로젝트를 조직 노드 아래에 가져올 수 있다. 프로젝트, 폴더 및 조직 노드는 모두 정책을 정의할 수 있는 위치이다. 일부 GCP 리소스를 사용하면 앞서 언급한 클라우드 스토리지 버킷과 같이 개별 리소스에 정책도 적용할 수 있다.&lt;/p&gt;

&lt;p&gt;한편 정책은 계층에서 &lt;strong&gt;아래로 상속&lt;/strong&gt;된다. 모든 Google Cloud 플랫폼 리소스는 프로젝트에 속해 있다. 프로젝트는 API 관리, 빌링 및 공동작업자 추가/제거, 기타 Google 서비스 등과 같은 GCP 서비스를 활성화 및 사용하기 위한 기반이다. 각 프로젝트는 별도의 구획이며 각 리소스는 정확히 하나의 구획에 속한다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 5 21 31&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102322917-25c87980-3fc3-11eb-9d82-1d5eeecede5e.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트 소유자와 사용자는 서로 다를 수 있다. 프로젝트 소유자와 사용자는 별도로 작성되고 개별적으로 관리된다. 각 GCP 프로젝트에는 사용자가 할당하는 &lt;strong&gt;프로젝트 ID와 이름&lt;/strong&gt;이 있다. 프로젝트 ID는 영구적이고 변경 불가능한 식별자로 GCP 전체에서 고유해야 한다. 여러 컨텍스트에서 프로젝트 ID를 사용하여 GCP와 함께 작업할 프로젝트를 지정할 수 있다.&lt;/p&gt;

&lt;p&gt;반면에 프로젝트 이름은 사용자의 편의를 위해 지정되며 지정할 수 있다. 또한 GCP에는 각 프로젝트에 고유한 프로젝트 번호가 할당되어 다양한 컨텍스트에서 디스플레이가 표시된다. 하지만 그것을 사용하는 것은 대부분 이 과정의 범위를 벗어난다. 일반적으로 프로젝트 ID는 사람이 읽을 수 있는 문자열로 만들어지며 프로젝트를 참조하기 위해 자주 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 5 22 10&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102322980-3c6ed080-3fc3-11eb-9ca0-47bf33d2997d.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럴 필요는 없지만 프로젝트를 폴더로 구성할 수 있다. 폴더를 사용하면 더 관리를 효율적으로 할 수 있다. 예를 들어 폴더를 사용하여 조직의 여러 부서, 팀, 응용프로그램 또는 환경을 나타낼 수 있다. 폴더를 통해 팀은 독립적으로 작업할 수 있도록 관리 권한을 위임할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 5 22 37&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102323032-4c86b000-3fc3-11eb-9d62-5b4c28d2116b.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;폴더의 리소스는 폴더에서 IAM 정책을 상속한다. 따라서 프로젝트 3과 4를 동일한 팀에서 설계로 관리하는 경우 IAM 정책을 B 폴더에 넣을 수 있다. 반대로 이러한 정책의 중복 사본을 프로젝트 3과 프로젝트 4에 넣는 것은 지루하고 오류가 발생하기 쉽다.  폴더를 사용하려면 계층 맨 위에 조직 노드가 필요하다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 5 23 13&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102323099-61fbda00-3fc3-11eb-9eae-e4fd08a46091.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;뭔가 어려워 보인다. 하지만 그렇지 않다. 효율적으로 관리하기 위한 계층도에 대해서 설명하는 것이다. 회사의 모든 프로젝트를 하나의 구조로 구성하는 것이 좋다. 대부분의 기업은 리소스가 사용되는 방식에 대한 중앙 집중식 가시성을 확보하고 정책을 중앙에서 적용하기를 원한다. 이것이 바로 조직 노드의 용도이다. 이런 계층도의 최상층이라 생각하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 5 23 55&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102323165-7a6bf480-3fc3-11eb-8558-77ec8219fe6f.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이러한 조직을 관리하기 위해서는 특별한 권한을 가진 사람들이 필요하다. 예를 들어 권한이 있는 사용자만 정책을 변경할 수 있도록 조직 정책 관리자를 지정할 수 있다.&lt;/p&gt;

&lt;p&gt;또한 프로젝트 작성자 역할을 할당할 수도 있다. 이것은 누가 비용을 지출할 수 있는지 제어할 수 있는 좋은 방법이다. 그러면 조직 노드를 어떻게 확보할 수 있을까?&lt;/p&gt;

&lt;p&gt;사실, G Suite의 고객인지 여부에 따라 답이 달라진다. G Suite 도메인이 있는 경우 GCP 프로젝트는 자동으로 조직 노드에 속하게 된다. 그렇지 않으면 Google Cloud Identity를 사용하여 생성할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 5 25 42&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102323358-ba32dc00-3fc3-11eb-9b67-89f95f60064d.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;명심해야 할 중요한 규칙이 하나 있다. 상위 수준에서 구현된 정책은 하위 수준에서 부여된 액세스 권한을 제거할 수 없다. 예를 들어, 책장 프로젝트에 적용된 정책이 사용자에게 클라우드 저장소 버킷을 수정할 수 있는 권한을 Pat에게 부여하지만 조직 수준의 정책은 Pat이 클라우드 저장소 버킷을 변경하지 않고 볼 수만 있다고 가정해 보자. 더 관대한 정책(읽기/쓰기 권한) 이 효력을 발휘한다.&lt;/p&gt;

&lt;h1 id=&quot;identity-and-access-management-iam&quot;&gt;Identity and Access Management (IAM)&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-17 오후 3 18 55&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102451085-30dee080-407b-11eb-8c87-99ffa51b3b9a.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;IAM을 통해 관리자는 특정 리소스에 대한 작업을 수행할 수 있는 사용자를 인증할 수 있다. IAM 정책에는 “누구” 부분, “무엇을 할 수 있는지” 부분 및 “어떤 리소스에서” 부분이 있다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-17 오후 3 20 07&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102451177-5a980780-407b-11eb-8672-07291e16b960.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“누구” 부분은 &lt;strong&gt;사용자 이름&lt;/strong&gt;을 지정한다. IAM 정책의 “누구” 부분은 Google 계정, Google 그룹, Service 계정, 전체 G Suite 또는 Cloud Identity 도메인으로 정의할 수 있다. “할 수 있는 일” 부분은 IAM &lt;strong&gt;역할&lt;/strong&gt;에 의해 정의된다. IAM 역할은 &lt;strong&gt;사용 권한 모음&lt;/strong&gt;이다. 대부분의 경우 의미 있는 작업을 수행하려면 둘 이상의 권한이 필요하다. 예를 들어 프로젝트의 인스턴스를 관리하려면 인스턴스를 생성, 삭제, 시작, 중지 및 변경해야 한다. 따라서 사용 권한은 관리하기 쉬운 역할로 함께 그룹화된다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-17 오후 3 22 14&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102451353-a64ab100-407b-11eb-81e6-c5a0549f4058.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;IAM 정책의 “누구” 부분은 Google 계정, Google 그룹, Service 계정 또는 전체 G Suite 또는 Cloud Identity 도메인일 수 있습니다. Cloud IAM에는 세 가지 역할이 있다. 각자 차례대로 이야기합시다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-17 오후 3 24 03&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102451483-e6aa2f00-407b-11eb-9117-833debd4989c.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;원시적 역할은 광범위합니다. GCP 프로젝트에 적용하면 해당 프로젝트의 모든 리소스에 영향을 미칩니다. &lt;strong&gt;소유자, 편집자 및 뷰어&lt;/strong&gt; 역할이다.&lt;/p&gt;

&lt;p&gt;지정된 리소스의 &lt;strong&gt;뷰어&lt;/strong&gt;인 경우 상태를 검사하지만 변경할 수는 없다. &lt;strong&gt;편집자&lt;/strong&gt;인 경우 뷰어가 수행할 수 있는 모든 작업을 수행할 수 있으며 뷰어의 상태를 변경할 수도 있다. 또한 &lt;strong&gt;소유자&lt;/strong&gt;인 경우 편집자가 할 수 있는 모든 작업을 수행할 수 있으며 리소스에 대한 역할 및 사용 권한도 관리할 수 있다. 프로젝트의 소유자 역할도 청구 설정을 한 가지 더 수행할 수 있다.&lt;/p&gt;

&lt;p&gt;기업들은 누군가가 프로젝트의 리소스를 변경할 권리 없이 프로젝트에 대한 청구서를 관리할 수 있기를 바란다. 그렇기 때문에 다른 사용자에게 &lt;strong&gt;청구 관리자 역할을 부여&lt;/strong&gt;할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-17 오후 3 26 13&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102451630-34bf3280-407c-11eb-8f54-7aa170363c8c.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;또한 너무 한 담당자의 역할이 커지는 것을 방지하기 위해서 세분화된 유형까지 역할 분배가 가능하다. 이런 경우에 대한 유형이 predefined role이다. 예를 들어 이 과정 후반부에서 가상 머신을 서비스로 제공하는 컴퓨팅 엔진에 대해 살펴보자. Compute Engine은 미리 정의된 역할 집합을 제공하며 이러한 역할을 특정 프로젝트, 지정된 폴더 또는 전체 조직의 Compute Engine 리소스에 적용할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;interacting-with-google-cloud-platform&quot;&gt;Interacting with Google Cloud Platform&lt;/h1&gt;

&lt;p&gt;Google Cloud Platform과 상호 작용할 수 있는 4가지 방법이 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Console&lt;/li&gt;
  &lt;li&gt;SDK, Cloud Shell&lt;/li&gt;
  &lt;li&gt;Mobile App&lt;/li&gt;
  &lt;li&gt;REST API&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;GCP 콘솔은 웹 기반 관리 인터페이스이다. 사용하는 모든 프로젝트와 리소스를 보고 관리할 수 있다. 또한 GCP 서비스의 API를 활성화, 비활성화 및 탐색할 수 있다.&lt;/p&gt;

&lt;p&gt;또한 Cloud Shell에 액세스할 수 있다. GCP에 대한 &lt;strong&gt;명령줄 인터페이스&lt;/strong&gt;로 브라우저에서 쉽게 액세스할 수 있다. Cloud Shell에서는 Google Cloud Software Development Kit SDK에서 제공하는 툴을 먼저 설치할 필요 없이 사용할 수 있다. Google Cloud SDK는 GCP에서 리소스 및 애플리케이션을 관리하는 데 사용할 수 있는 도구 세트이다. 여기에는 Google Cloud Platform 제품 및 서비스에 대한 기본 명령줄 인터페이스를 제공하는 gcloud 툴이 포함된다. 구글 클라우드 스토리지용 gsutil과 BigQuery용 bq도 있다. SDK 명령을 실행하는 가장 쉬운 방법은 GCP 콘솔에서 Cloud Shell 버튼을 클릭하는 것이다. 이러한 모든 명령이 이미 설치되어 있는 가상 시스템의 &lt;strong&gt;웹 브라우저&lt;/strong&gt;에 명령줄이 표시된다. 또한 랩톱, 가상 시스템 및 기타 클라우드의 온사이트 서버 등 자신의 컴퓨터에 SDK를 설치할 수 있다. SDK는 &lt;strong&gt;도커&lt;/strong&gt; 이미지로도 사용할 수 있어 사용하기 쉽고 깔끔한 방법이다.&lt;/p&gt;

&lt;p&gt;GCP를 구성하는 서비스는 사용자가 &lt;strong&gt;작성하는 코드가 이를 제어할 수 있도록&lt;/strong&gt; 애플리케이션 프로그래밍 인터페이스를 제공한다. 이러한 API를 RESTful이라고 합니다. 다시 말해, 그들은 대표적인 상태 전이 패러다임을 따른다. 우리는 그것이 무엇을 의미하는지 자세히 말할 필요가 없다. 기본적으로, 코드는 웹 브라우저가 웹 서버와 대화하는 것과 같은 방식으로 구글 서비스를 사용할 수 있다는 것을 의미한다. API는 리소스 및 GCP의 이름을 URL로 지정합니다. 코드는 JSON을 사용하여 API에 정보를 전달할 수 있으며, 이는 웹을 통해 텍스트 정보를 전달하는 매우 일반적인 방법입니다. 또한 사용자 로그인 및 액세스 제어를 위한 개방형 시스템이 있습니다. GCP 콘솔을 사용하여 API를 설정 및 해제할 수 있습니다. 많은 API는 기본적으로 해제되어 있으며, 많은 API는 할당량 및 제한과 연관되어 있습니다. 이러한 제한사항은 자원을 실수로 사용하지 않도록 보호합니다. 필요한 API만 사용하도록 설정할 수 있으며 리소스가 더 필요할 때 할당량 증가를 요청할 수 있습니다. 예를 들어 GCP 리소스를 제어해야 하는 애플리케이션을 작성하는 경우 API를 올바르게 사용해야 합니다. 그러기 위해서는 APIs Explorer를 사용해야 합니다. GCP 콘솔에는 APIs Explorer라는 도구가 포함되어 있어 API에 대해 대화식으로 배울 수 있습니다. 이를 통해 사용 가능한 API와 버전을 확인할 수 있습니다. 이러한 API는 매개 변수와 해당 API에 대한 설명서가 내장되어 있어야 합니다. 사용자 인증으로도 API를 대화식으로 사용해 볼 수 있습니다. API를 탐색했으며 이 API를 사용하는 애플리케이션을 만들 준비가 되었다고 가정해 보십시오. 처음부터 코딩 작업을 시작해야 합니까? 아니오. 구글은 당신의 코드에서 GCP를 호출하는 업무에서 많은 번거로움을 덜어주는 클라이언트 라이브러리를 제공합니다. 도서관에는 두가지 종류가 있다. Cloud Client Libraries는 최신 Google 클라우드이며 API에 권장되는 라이브러리입니다. 그들은 각 언어의 고유 스타일과 관용구를 채택한다. 반면에 Cloud Client Library는 최신 서비스와 기능을 지원하지 않는 경우도 있습니다. 이 경우 Google API 클라이언트 라이브러리를 사용하여 원하는 언어를 사용할 수 있습니다. 이 도서관은 일반성과 완전성을 위해 설계되었다. 마지막으로, 개발자들뿐만 아니라 모든 사람들이 관심을 가질 수 있는 한 가지 툴이 더 있습니다. GCP에서 사용하는 리소스를 검사하고 관리할 수 있는 Android 및 iOS용 모바일 앱이 있습니다. 대시보드를 작성하여 필요한 정보를 한 눈에 볼 수 있습니다.&lt;/p&gt;

</description>
        <pubDate>Tue, 15 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/cloud/2020/12/15/GCP-Fundamentals-02-Getting-started-with-GCP.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/cloud/2020/12/15/GCP-Fundamentals-02-Getting-started-with-GCP.html</guid>
        
        <category>Cloud</category>
        
        <category>GCP</category>
        
        <category>Google</category>
        
        
        <category>DS/Cloud</category>
        
      </item>
    
      <item>
        <title> [GCP Fundamentals] 01: Introdution</title>
        <description> 클라우드 서비스를 사용하는 이점이 무엇일까? : &lt;h1 id=&quot;학습-목표&quot;&gt;학습 목표&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Google 클라우드 플랫폼의 이점에 대해 이해하기.&lt;/li&gt;
  &lt;li&gt;위치, 데이터 센터, 지역 및 구역을 포함한 Google 네트워크 인프라의 구성요소를 정의하기.&lt;/li&gt;
  &lt;li&gt;서비스형 인프라(IaaS)와 서비스형 플랫폼(PaaS) 비교하기&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;google-cloud-platform&quot;&gt;Google Cloud Platform&lt;/h1&gt;

&lt;p&gt;GCP는 총 4가지의 주요 서비스를 제공한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Computing&lt;/li&gt;
  &lt;li&gt;Storage&lt;/li&gt;
  &lt;li&gt;Bigdata&lt;/li&gt;
  &lt;li&gt;Machine Learning&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;먼저 Computing과 Starage의 관점에서 진행해 본다. 클라우드 서비스를 사용하는 것은 애플리케이션과 데이터 관점에서 매우 좋은 툴이다. 클라우드를 사용하게 되면 인프라를 구축하는데 드는 매우 다양한 잡일로 부터 해방된다. 앞으로 아래에 적힌 것들에 대해 집중적으로 알아보자.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;GCP란?&lt;/li&gt;
  &lt;li&gt;어떻게 구성되어 있는가?&lt;/li&gt;
  &lt;li&gt;왜 GCP인가?&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;what-is-cloud-computing&quot;&gt;What is Cloud Computing?&lt;/h1&gt;
&lt;p&gt;말만 많이 들었지 사실 어떠한 특성을 기반으로 클라우드 컴퓨팅이라 부르는지 몰랐기 떄문에 정확한 정의를 이해할 필요가 있다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-15 오후 5 00 23&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102187205-06fcb100-3ef7-11eb-8288-f62493252a71.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;클라우드 컴퓨팅은 이 다섯 가지 중요한 특성을 가진 정보 기술(IT)을 사용하는 방법이다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;on-demand 또는 self-service 방식으로 컴퓨팅 리소스를 확보한다.
    &lt;ul&gt;
      &lt;li&gt;이 때, 인간의 개입이 필요 없이 Computing power, storage, network를 얻을 수 있다면 된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;원하는 곳에서 인터넷을 통해 이러한 리소스에 접근이 가능하다.&lt;/li&gt;
  &lt;li&gt;리소스 제공자는 큰 pool을 가지고 있고, 이것들을 고객에 할당한다.
    &lt;ul&gt;
      &lt;li&gt;할당 과정에서 고객들은 자원의 정확한 물리적 위치에 대해 알거나 신경쓸 필요가 없다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;자원은 탄력적이다.
    &lt;ul&gt;
      &lt;li&gt;더 많은 자원이 필요하다면 쉽게 얻을 수 있다. 적은 자원이 필요하면 이를 줄일 수도 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;고객은 사용하는 것, 또는 예약한 것에 대해서만 돈을 지불한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;발전-과정&quot;&gt;발전 과정&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-15 오후 5 11 43&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102188422-9ce50b80-3ef8-11eb-8432-4681cbe9bd66.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;왜 요즘 클라우드가 그렇게 중요한 걸까? 이유를 이해하기 위해서는 역사를 살펴봐야 한다. 클라우드 컴퓨팅을 향한 첫번째 wave는 it 업체들이 수십년 동안 해온 colocation 방법이다. 기존에 인프라를 구축하기 위해서는 땅을 빌리고, 그곳에 데이터 센터를 건설해야 했다. 이로부터 발생하는 비용은 부동산이 지배적이기 때문에 자본이 집중되는 단점이 있었다. 이러한 이유로 부터 colocation 제공 업체로 부터 물리적인 공간을 임대받게 되면 보다 유연한 사용이 가능하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Colocation이란?
    &lt;ul&gt;
      &lt;li&gt;서버, 하드웨어 및 기타 장비를 위한 물리적 공간을 임대한다.&lt;/li&gt;
      &lt;li&gt;장비는 사용자가 가져오는 것.&lt;/li&gt;
      &lt;li&gt;현재 하드웨어에 만족한다면, colocation은 가장 좋은 선택이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이후, 2000년대의 첫 10년 동안 효율성 필요성으로 인해 가상화를 사용하게 되었다. 가상화란 한 대의 서버가 여러대의 서버를 운영하는 것처럼 사용할 수 있게 하는 기술을 말한다. 가상화는 자원을 더 효율적으로 사용할 수 있게 해준다. 하지만 여전히 사용자는 인프라를 구입하고, 유지해야 한다는 문제가 발생한다. 어느정도의 리소스가 필요한지, 언제 필요한지를 예상하고, 끊임없이 작동시켜야 한다.&lt;/p&gt;

&lt;p&gt;약 10년 전 구글은 가상화 모델의 한계 때문에, 충분히 빠르게 움직일 수 없다는 것을 깨달았다. 그래서 구글은 자동화된 서비스로 만들어진 자동화되고 탄력적인 클라우드, 즉 컨테이너 기반 아키텍처로 전환했다. 컨테이너에 대해서는 추후에 다시 설명하겠다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 센터란?
    &lt;ul&gt;
      &lt;li&gt;데이터 센터는 서버 컴퓨터와 네트워크 회선 등을 제공하는 건물이나 시설을 말한다. 서버 호텔이라고도 부른다. 데이터 센터는 인터넷의 보급과 함께 폭발적으로 성장하기 시작했다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;gcp-computing-architectures&quot;&gt;GCP computing architectures&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-15 오후 5 42 02&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102191502-d91a6b00-3efc-11eb-92a4-d9921855c94f.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아키텍쳐는 크게 3가지로 구분된다. Infra a a Service(IaaS), Platform as a Service(PaaS), Service as a Service(SaaS)가 그것이다. 차례차례 알아보자.&lt;/p&gt;

&lt;p&gt;먼저, IaaS는 기존의 데이터 센터에서 익숙한 방식으로 구성된 컴퓨팅 자원, 스토리지, 네트워크를 제공하는 방향이다. 즉, 할당된 서버 자체의 비용을 지불한다.&lt;/p&gt;

&lt;p&gt;두번째로 PaaS 방식은, 사용자가 작성하는 애플리케이션 코드 자체를 인프라 액세서를 제공하는 라이브러리에 바인딩하는 것을 말한다. 즉, 코드를 작성하고, 이를 자원을 알아서 분배해주는 라이브러리와 연결하면 알아서 이를 관리해주는 것이다. 이런 방법을 사용하면 프로그래머는 오직 애플리케이션 코드를 작성하는데 집중할 수 있다.&lt;/p&gt;

&lt;p&gt;마지막으로 SaaS는 구글이 제공하는 Gmail, Docs, Drive 같은 최종 사용자에게 제공되는 서비스를 말한다. 이런 서비스 자체를 사용자가 구매, 혹은 구독하여 사용하는 것을 SaaS라 한다.&lt;/p&gt;

&lt;h1 id=&quot;google-network&quot;&gt;Google Network&lt;/h1&gt;
&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 2 53 35&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102310529-7b465b80-3fae-11eb-86b5-222a82afdd22.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;구글의 네트워크망은 지구상에서 가장 큰 네트워크이다. 약 세계 인터넷 트래픽의 40%를 차지한다. 이 네트워크는 사용자들에게 가능한 한 가장 높은 처리량, 그리고 낮은 latency를 감안하여 고안되었다. 인터넷 사용자가 Google 리소스로 트래픽을 전송할 경우, 구글은 가장 낮은 latency를 가지는 Edge Network에서 사용자 요청에 응답한다.&lt;/p&gt;

&lt;h1 id=&quot;gcp-regions-and-zones&quot;&gt;GCP Regions and Zones&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 2 56 46&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102310739-ec860e80-3fae-11eb-8b7b-6452ac4c3472.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그렇다면 어떻게 GCP가 구성되어 있는지 알아보자. 가장 낮은 level인 Zone부터 시작하자. zone은 GCP 리소스의 배포 영역이다. 예를 들어, Compute Engine을 사용하여 GCP에서 가상 컴퓨터를 실행한다면, 내가 지정한 zone에서 실행된다. 그렇다면 이 zone을 설정하는 것은 GCP 데이터 센터에 할당되는 물리적 기기를 의미할까? 엄밀히 말하면 틀렸다. 하나의 zone은 물리적 단위로 나눠져있지 않다. 물리적 단위로 나눠질 수도 있겠지만, 기본적인 설계는 논리적 단위로 구성되어 있다. 즉, 여러 다른 지역에 위치한 물리적 서버를 묶어서 하나의 zone이라 명명지을 수 있다는 것. 하지만 이 zone의 이름이 어떤 특정 지역을 나타내는 것처럼 되어 있는 이유는 그 논리적 그룹을 묶는 경계가 있기 때문이다. 이 그룹을 region이라 하며, 이 기준은 해당 구역 사이에서 빠른 네트워크 연결성을 가지느냐에 따라 달려있다. region 내에서 네트워크 대기시간은 보통 왕복 5밀리초 정도 이다.&lt;/p&gt;

&lt;p&gt;zone은 region 내의 single failure domain으로 생각한다. 즉, 어떤 프로그램을 배포하는데 있어서 최소 단위가 zone이라는 것. 장애가 없는 애플리케이션을 구축한다고 생각해보자. 예상치 못한 문제에 대해 보호하기 위해 우리는 여러 zone에 내 프로그램을 배포할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 09 59&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102311757-c5304100-3fb0-11eb-9eb6-021763db8bbb.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;또한 Multi region역시 가능하다. 전체 region 자체가 자연재해와 같은 문제가 발생했을 때를 대비하여 만들어진 개념이다. Google Cloud Storage와 같은 서비스는 적어도 지리적으로 두 개 이상의 region에 저장되어 있다.&lt;/p&gt;

&lt;h1 id=&quot;environmental-responsibility&quot;&gt;Environmental Responsibility&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 11 13&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102311862-f1e45880-3fb0-11eb-8015-64d32683dbfd.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이러한 가상화 기술에 대해서 설명했지만, 기본적으로 이러한 가상화 기술을 물리적 인프라를 기반으로 구축된다. 이러한 점에서 여전히 모든 데이터 센터에서 돌아가는 서버는 방대한 양의 에너지를 사용중이다. 기존 데이터 센터는 모든 전 세계 전력의 약 2%를 사용하고 있다. 구글은 이러한 데이터 센터를 가능한 한 효율적으로 운영하기 위해 노력한다. 구글의 데이터 센터는 자원 효율 향상과 폐기물 저감을 위한 표준인 ISO 14001 인증을 처음으로 달성했다.&lt;/p&gt;

&lt;p&gt;핀란드에 하미나에 있는 구글 데이터 센터는 해수를 사용하여 에너지 사용을 줄이고 있다. 풍력, 태양 에너지도 적극적으로 사용하여 100% 탄소 중립을 향해 나아가고 있다.&lt;/p&gt;

&lt;h1 id=&quot;customer-friendly-pricing&quot;&gt;Customer friendly pricing&lt;/h1&gt;
&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 16 33&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102312254-b007e200-3fb1-11eb-808d-600674de51ca.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;~&lt;del&gt;흠..&lt;/del&gt;~ 구글은 IaaS에 속하는 Google Compute Engine에 대해 초당 청구서를 발송한 최초 클라우드 업체이다. 이렇게 세분화된 비용 청구를 통해 큰 비용 절감 효과를 가져왔다. 또한 자동으로 적용되는 지속적인 할인을 제공한다. 특히, 한 달에 25% 이상 인스턴스를 실행하면 컴퓨팅 엔진이 해당 인스턴스에 대해 사용하는 매 분마다 자동으로 할인을 제공한다. 컴퓨팅 엔진 사용자 지정 가상 시스템 유형을 사용하면 해당 애플리케이션에 맞게 가상 시스템을 미세 조정할 수 있으며, 이를 통해 워크로드에 대한 가격을 조정할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;open-apis&quot;&gt;Open APIs&lt;/h1&gt;
&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 20 15&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102312515-345a6500-3fb2-11eb-91f3-ec087a718863.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이런 좋은 점 때문에 workload를 cloud로 전환할 생각을 하지만, 이 때문에 업체에 종속될까봐 전환하는 것을 두려워 한다. 하지만 구글은 우리 제품을 사용했다가, 맘에 안들면 이를 다른 곳에서 실행하기 쉽도록 기능을 제공한다.&lt;/p&gt;

&lt;p&gt;먼저, GCP 제품은 open source 제품과 호환된다. 예를 들어 Cloud Bigtable이 있다. 데이터 베이스 제품인 Bigtable은 오픈 소스 데이터 베이스인 Apache HBase의 인터페이스를 제공하여 코드 이동이 간편하도록 한다. 두번째로, Cloud Dataproc은 오픈 소스 빅데이터 환경인 Hadoop을 관리 서비스로 제공한다.&lt;/p&gt;

&lt;p&gt;이와 같이 구글은 오픈 소스 생태계를 구축하여 구글 이외의 옵션을 제공한다. tensorflow, kubernetes, stackdriver와 같은 모든 서비스는 이러한 상호 운영성을 고려하여 제작되었다.&lt;/p&gt;

&lt;h1 id=&quot;why-choose-gcp&quot;&gt;Why Choose GCP?&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 27 08&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102313031-2a853180-3fb3-11eb-9a1b-bc0922c50c1c.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Google Cloud Platform을 사용하면 웹, 모바일, 분석 및 백엔드 솔루션에 대한 컴퓨팅, 스토리지, 빅데이터, 머신러닝 및 애플리케이션 서비스 중에서 선택할 수 있다. 글로벌하고 비용 효율적이며 오픈 소스 친화적이며 보안을 위해 설계되었다.&lt;/p&gt;

&lt;p&gt;요약해 보자. Google Cloud Platform의 제품 및 서비스는 컴퓨팅, 스토리지, 빅 데이터, 머신러닝, 네트워킹, 운영 및 툴로 광범위하게 분류할 수 있다. 이제 부터는 해당 서비스를 이해하고, 어떠한 상황에 어떤 제품을 적시적소에 이용하는 것이 좋은지 공부하게 될 것이다.&lt;/p&gt;

&lt;h1 id=&quot;multi-layered-security-approach&quot;&gt;Multi-layered security approach&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 29 47&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102313213-894aab00-3fb3-11eb-80de-31a698cb79ec.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;구글은 10억 명 이상의 사용자를 가진 7개의 서비스를 가지고 있기 때문에, 보안은 항상 구글 직원들의 마음에 달려있다고 장담할 수 있다. 보안을 위한 설계가 널리 보급되어 있으며, 인프라 전반에 걸쳐 GCP 및 Google 서비스가 실행되고 있다. 아래쪽에서 시작하여 위로 이동하면서 고객의 데이터를 안전하게 유지하기 위해 구글이 진행하는 과정에 대해 알아보자.&lt;/p&gt;

&lt;p&gt;구글 데이터 센터의 서버 보드와 네트워킹 장비는 모두 구글이 맞춤 설계한 것이다. 구글은 또한 현재 서버와 주변기기 모두에 배포되고 있는 타이탄이라는 하드웨어 보안 칩을 포함하여 맞춤형 칩을 설계하고 있다. Google 서버 컴퓨터는 암호화 서명을 사용하여 올바른 소프트웨어를 부팅하고 있는지 확인한다.&lt;/p&gt;

&lt;p&gt;구글은 여러 계층의 물리적 보안 보호를 통합한 자체 데이터 센터를 설계하고 구축한다. 이러한 데이터 센터에 대한 액세스는 Google 직원 중 극소수에 불과하다. 구글의 인프라는 암호화 개인 정보 보호와 네트워크상의 데이터라고 불리는 원격 프로시저에 대한 무결성을 제공합니다. 이것이 구글 서비스들이 서로 통신하는 방법입니다.&lt;/p&gt;

&lt;p&gt;인프라는 데이터 센터 간에 전송 중인 PC 트래픽을 자동으로 암호화한다. 보통 최종 사용자에게 구글 로그인 페이지로 나타나는 구글 중앙 아이덴티티 서비스는 단순한 사용자 이름과 비밀번호를 요구하는 것 이상의 역할을 한다. 또한 사용자가 과거에 동일한 장치 또는 유사한 위치에서 로그인했는지 여부와 같은 위험 요소에 기초한 추가 정보를 사용자에게 지능적으로 제공한다.&lt;/p&gt;

&lt;h1 id=&quot;budgets-and-billing&quot;&gt;Budgets and Billing&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 33 56&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102313514-1db50d80-3fb4-11eb-8bd3-529718213040.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;어떻게 하면 비용 절감을 할 수 있을까? 좋긴 좋은데. GCP는 예산 및 알림, 청구서 발송, 보고서 및 할당량 등 4가지 툴을 제공한다.&lt;/p&gt;

&lt;p&gt;먼저 예산 및 경고에 대해 살펴보자. 계정별 또는 GCP 프로젝트별로 예산을 정의할 수 있다. 고정으로 할 수도 있고, 다른 수치를 기반으로 설정할 수도 있다. 예를 들어 전원 지출 금액의 백분율이다. 비용이 예산 한계에 도달하면 알림을 생성한다. 예를 들어, 예산 제한액이 20,000달러이고 경고가 90%로 설정되어 있으면 지출액이 18,000달러에 도달하면 알림 알림이 수신된다. 경고는 일반적으로 50%, 90% 및 100%로 설정됩니다. 그러나 사용자 정의도 가능하다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 38 11&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102313846-b64b8d80-3fb4-11eb-9948-6f2ff95fd783.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;청구서 내보내기를 통해 BigQuery 데이터 세트 또는 클라우드 스토리지 버킷과 같이 더 자세한 분석을 위해 검색하기 쉬운 곳에 자세한 청구 정보를 저장할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 39 22&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102313931-e09d4b00-3fb4-11eb-819b-cdd7177fbf11.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;보고서는 GCP 콘솔의 시각적 도구로서 지출 내역을 모니터링할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2020-12-16 오후 3 39 49&quot; src=&quot;https://user-images.githubusercontent.com/37871541/102313972-f0b52a80-3fb4-11eb-9600-5c9a14704cab.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;또한 GCP는 할당량을 구현하여 계정 소유자와 GCP 커뮤니티 전체를 보호한다. 할당량은 &lt;em&gt;오류 또는 악의적인 공격으로 인한 리소스 과소비 방지를 위해 설계&lt;/em&gt;되었다. 할당량에는 두 가지 유형이 있다: Rate quota 및 Allocation quota. 두 가지 모두 GCP 프로젝트 수준에서 적용된다. 특정 시간 후 할당량을 재설정한다. 예를 들어, 기본적으로 Kubernetes Engine 서비스는 100초마다 각 GCP 프로젝트에서 API로 1000개의 호출 할당량을 설정한다. 100초 후 제한값이 재설정됩니다. 반면에 Allocation quota은 프로젝트에서 가질 수 있는 리소스 수를 제어한다. 예를 들어, 기본적으로 각 GCP 프로젝트에는 할당량이 있어 5개 이하의 Virtual Private Cloud 네트워크만 사용할 수 있다. 모든 프로젝트는 동일한 할당량으로 시작되지만 Google Cloud 지원에서 증가하도록 요청하여 일부 프로젝트를 변경할 수 있다.&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/cloud/2020/12/15/GCP-Fundamentals-01-Introduction.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/cloud/2020/12/15/GCP-Fundamentals-01-Introduction.html</guid>
        
        <category>Cloud</category>
        
        <category>GCP</category>
        
        <category>Google</category>
        
        
        <category>DS/Cloud</category>
        
      </item>
    
      <item>
        <title>DS4C Patient Policy Province Dataset</title>
        <description> A Comprehensive COVID-19 Dataset for Causal and Epidemiological Analysis : &lt;p&gt;&lt;a href=&quot;https://www.cmu.edu/dietrich/causality/neurips20ws/&quot;&gt;NeuralPS20 Accepted Papers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102158131-1c0c1c80-3ec4-11eb-85eb-5a03681cb476.jpg&quot; alt=&quot;91f484aca6984f98fc4aa71bb36522dajoqmwF2Oy6KwpEea-0&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102158141-20383a00-3ec4-11eb-8050-d7c468a23f38.jpg&quot; alt=&quot;91f484aca6984f98fc4aa71bb36522dajoqmwF2Oy6KwpEea-1&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102158145-2201fd80-3ec4-11eb-8e37-c9b82317afa4.jpg&quot; alt=&quot;91f484aca6984f98fc4aa71bb36522dajoqmwF2Oy6KwpEea-2&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102158148-229a9400-3ec4-11eb-99da-1791f88a2a1e.jpg&quot; alt=&quot;91f484aca6984f98fc4aa71bb36522dajoqmwF2Oy6KwpEea-3&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102158150-23332a80-3ec4-11eb-83d1-96865e48f34c.jpg&quot; alt=&quot;91f484aca6984f98fc4aa71bb36522dajoqmwF2Oy6KwpEea-4&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102158154-24fcee00-3ec4-11eb-8289-276898bb0c93.jpg&quot; alt=&quot;91f484aca6984f98fc4aa71bb36522dajoqmwF2Oy6KwpEea-5&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/102158155-25958480-3ec4-11eb-98a0-ab2041ae64cd.jpg&quot; alt=&quot;91f484aca6984f98fc4aa71bb36522dajoqmwF2Oy6KwpEea-6&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/publications/2020/12/15/DS4C-NeuralPS-COVID19-policy-dataset.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/publications/2020/12/15/DS4C-NeuralPS-COVID19-policy-dataset.html</guid>
        
        <category>Publications</category>
        
        <category>CV</category>
        
        
        <category>CV/Publications</category>
        
      </item>
    
      <item>
        <title>Tensorflow Developer Certification</title>
        <description>  : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/101233363-dac58100-36fb-11eb-9489-60b8637db137.jpg&quot; alt=&quot;adok7o6a&quot; /&gt;&lt;em&gt;Tensorflow Developer Certification&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/qualification/2020/12/05/Tensorflow-Developer-Certification.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/qualification/2020/12/05/Tensorflow-Developer-Certification.html</guid>
        
        <category>Qualification</category>
        
        <category>CV</category>
        
        
        <category>CV/Qualification</category>
        
      </item>
    
      <item>
        <title>식수 인원 예측을 수행하는 서버 및 이의 동작 방법</title>
        <description>  : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/100846833-5805b180-34c2-11eb-9f82-19c02237a019.jpg&quot; alt=&quot;955596c27dc9442eff76b6c998d51b6aW9CMdEk5Vx4FJPzl-0&quot; class=&quot;center-small&quot; /&gt;
&lt;!-- ![955596c27dc9442eff76b6c998d51b6aW9CMdEk5Vx4FJPzl-1](https://user-images.githubusercontent.com/37871541/100846848-5b00a200-34c2-11eb-988f-d8086f12faf6.jpg){: .center-small } --&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/patents/2020/12/02/%EC%8B%9D%EC%88%98-%EC%9D%B8%EC%9B%90-%EC%98%88%EC%B8%A1-%EC%84%9C%EB%B2%84-%EB%8F%99%EC%9E%91-%ED%8A%B9%ED%97%88.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/patents/2020/12/02/%EC%8B%9D%EC%88%98-%EC%9D%B8%EC%9B%90-%EC%98%88%EC%B8%A1-%EC%84%9C%EB%B2%84-%EB%8F%99%EC%9E%91-%ED%8A%B9%ED%97%88.html</guid>
        
        <category>Patents</category>
        
        <category>CV</category>
        
        
        <category>CV/Patents</category>
        
      </item>
    
      <item>
        <title> [Tensorflow Specialization] Tensorflow Specialization Course</title>
        <description>  : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/101063302-00586a80-35d6-11eb-841c-4b5dfe24530d.jpg&quot; alt=&quot;Coursera-DCLTHUTDPRJ2&quot; /&gt;&lt;em&gt;DeepLearning.AI TensorFlow Developer&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;introduction-to-tensorflow-for-artificial-intelligence-machine-learning-and-deep-learning&quot;&gt;Introduction to TensorFlow for Artificial Intelligence, Machine Learning, and Deep Learning&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/100361928-1c8c6280-303e-11eb-8446-1ba2afec67d8.jpg&quot; alt=&quot;Coursera-M9FXTRCA298Y&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;Introduction to TensorFlow for Artificial Intelligence, Machine Learning, and Deep Learning&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;convolutional-neural-networks-in-tensorflow&quot;&gt;Convolutional Neural Networks in TensorFlow&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/100528454-6765d000-3220-11eb-9af0-81d182fe64e8.jpg&quot; alt=&quot;Coursera-EDZH49AP2QAE&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;Convolutional Neural Networks in TensorFlow&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;natural-language-processing-in-tensorflow&quot;&gt;Natural Language Processing in TensorFlow&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/100850496-38bd5300-34c7-11eb-897e-7262e3975ff8.jpg&quot; alt=&quot;Coursera-JZXYF6YGMXTF&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;Natural Language Processing in TensorFlow&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;sequences-time-series-and-prediction&quot;&gt;Sequences, Time Series and Prediction&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/101063256-f6cf0280-35d5-11eb-8731-48398ce90ccc.jpg&quot; alt=&quot;Coursera-TQ4H8G3NQGYB&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;Sequences, Time Series and Prediction&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Nov 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/courses/2020/11/26/Tensorflow-Specialization-Course.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/courses/2020/11/26/Tensorflow-Specialization-Course.html</guid>
        
        <category>Courses</category>
        
        
        <category>CV/Courses</category>
        
      </item>
    
      <item>
        <title> [Deep Learning Specialization] Deep Learning Specialization Course</title>
        <description>  : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/97710611-4e71de00-1aff-11eb-8c3b-67e330bf6b96.jpg&quot; alt=&quot;Coursera_Deep_Learning&quot; class=&quot;center&quot; /&gt;&lt;em&gt;Deep Learning Specialization Course&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;neural-networks-and-deep-learning&quot;&gt;Neural Networks and Deep Learning&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/97265369-dd65c880-1869-11eb-9f3e-48df90da0950.jpg&quot; alt=&quot;&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;Neural Networks and Deep Learning&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;improving-deep-neural-networks&quot;&gt;Improving Deep Neural Networks&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/97265375-e060b900-1869-11eb-9c78-6f24d8fafe7c.jpg&quot; alt=&quot;Coursera_Improving_Deep_Neural_Networks&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;structuring-machine-learning-projects&quot;&gt;Structuring Machine Learning Projects&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/97265379-e22a7c80-1869-11eb-89ce-449c04568790.jpg&quot; alt=&quot;Coursera_Structuring_Machine_Learning_Projects&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;Structuring Machine Learning Projects&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;convolutional-neural-networks&quot;&gt;Convolutional Neural Networks&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/97265386-e6569a00-1869-11eb-9279-5adfe411d90c.jpg&quot; alt=&quot;Coursera_Convolutional_Neural_Networks&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;Convolutional Neural Networks&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;sequence-models&quot;&gt;Sequence Models&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/97710199-c986c480-1afe-11eb-9433-43a9e6546086.jpg&quot; alt=&quot;Coursera_Sequence_Model&quot; class=&quot;center-small&quot; /&gt;&lt;em&gt;Sequence Model&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/courses/2020/10/27/Deep_Learning_Specialization_Course.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/courses/2020/10/27/Deep_Learning_Specialization_Course.html</guid>
        
        <category>Courses</category>
        
        
        <category>CV/Courses</category>
        
      </item>
    
      <item>
        <title> [Data Augmentater using PyQt5] Data Augmentation Using PyQt5</title>
        <description> PyQt5를 사용하여 Gui기반 데이터 증대 프로그램을 제작하였다. : &lt;blockquote&gt;
  &lt;p&gt;ImgAug 라이브러리와 PyQt5를 사용하여 Gui 기반 Data Augmentater를 제작하였다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wansook0316/data_augmentater&quot;&gt;Data Augmentation Using PyQt5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;100%&quot; alt=&quot;스크린샷 2020-10-25 오후 11 19 03&quot; src=&quot;https://user-images.githubusercontent.com/37871541/97109786-97e5b600-1718-11eb-9e0e-4a68777b9263.png&quot; class=&quot;center&quot; /&gt;
&lt;img width=&quot;100%&quot; alt=&quot;스크린샷 2020-10-25 오후 11 19 06&quot; src=&quot;https://user-images.githubusercontent.com/37871541/97109788-99af7980-1718-11eb-8f0b-a87e0fe44b8a.png&quot; class=&quot;center&quot; /&gt;
&lt;img width=&quot;100%&quot; alt=&quot;스크린샷 2020-10-25 오후 11 19 09&quot; src=&quot;https://user-images.githubusercontent.com/37871541/97109791-9ae0a680-1718-11eb-8299-44345bbd239b.png&quot; class=&quot;center&quot; /&gt;
&lt;img width=&quot;50%&quot; alt=&quot;스크린샷 2020-10-25 오후 11 19 17&quot; src=&quot;https://user-images.githubusercontent.com/37871541/97109794-9e742d80-1718-11eb-9460-166bc93a7aa7.png&quot; class=&quot;center&quot; /&gt;
&lt;img width=&quot;100%&quot; alt=&quot;스크린샷 2020-10-25 오후 11 19 22&quot; src=&quot;https://user-images.githubusercontent.com/37871541/97109796-a03df100-1718-11eb-8be4-70914d5a0841.png&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 25 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/cv/projects/2020/10/25/Data-Augmentation-using-pyqt5.html</link>
        <guid isPermaLink="true">http://localhost:4000/cv/projects/2020/10/25/Data-Augmentation-using-pyqt5.html</guid>
        
        <category>project</category>
        
        <category>CV</category>
        
        
        <category>CV/Projects</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 11: Greedy 와 Non-Greedy</title>
        <description> 정규식에서 Greedy는 무엇을 의미할까? : &lt;p&gt;Greedy는 알고리즘 문제를 풀 때 보았던 용어이다. 이 용어는 어떤 의미로 사용이 될까? 무언가 탐욕적으로 한다는 의미일 것이다. 다음과 같은 문자열에서 처음 나오는 tag를 검색하고 싶다 해보자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt;'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;.*&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;.*&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;.*&amp;gt;&lt;/code&gt; 정규식의 매치 결과로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 문자열을 돌려주기를 기대했지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt; 메타 문자는 매우 &lt;strong&gt;탐욕스러워서&lt;/strong&gt; 매치할 수 있는 최대한의 문자열인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt;&lt;/code&gt; 문자열을 모두 소비해 버렸다. 어떻게 하면 이 탐욕스러움을 제한하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 문자열까지만 소비하도록 막을 수 있을까?&lt;/p&gt;

&lt;p&gt;다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;non-greedy&lt;/code&gt; 문자인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&lt;/code&gt;를 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;의 탐욕을 제한할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;.*?&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;non-greedy 문자인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*?&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+?&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;??&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{m,n}?&lt;/code&gt;와 같이 사용할 수 있다. 가능한 한 가장 최소한의 반복을 수행하도록 도와주는 역할을 한다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/08/regex-11-Greedy.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/08/regex-11-Greedy.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        <category>greedy</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 10: 문자열 바꾸기</title>
        <description> 정규식을 사용하여 원하는 문자열을 바꾸어 보자. : &lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sub&lt;/code&gt; 메서드를 사용하면 정규식과 매치되는 부분을 다른 문자로 쉽게 바꿀 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'(blue|white|red)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'colour'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blue socks and red shoes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'colour socks and colour shoes'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;첫번째 변수는 바꿀 문자열, 두번째 변수는 대상 문자열이다. 그런데 만약 한번만 바꾸고 싶다면 어떻게 해야할까? 세번째 변수로 count를 넘기면 된다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'colour'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blue socks and red shoes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'colour socks and red shoes'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;처음 일치한 부분만 변경된 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subn&lt;/code&gt; 역시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sub&lt;/code&gt;와 동일한 기능을 하지만 반환 결과를 튜플로 돌려준다는 차이가 있다. 돌려준 튜플의 첫 번째 요소는 변경된 문자열이고, 두 번째 요소는 바꾸기가 발생한 횟수이다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'(blue|white|red)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'colour'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blue socks and red shoes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'colour socks and colour shoes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참조-구문-사용하기&quot;&gt;참조 구문 사용하기&lt;/h2&gt;

&lt;p&gt;참조 구문은 그루핑에서 검색된 것에 대해 네이밍을 하는 기능을 말했다. 이런 기능을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sub&lt;/code&gt;와 함께 사용할 경우 포맷을 변경할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;(?P&amp;lt;name&amp;gt;\w+)\s+(?P&amp;lt;phone&amp;gt;(\d+)[-]\d+[-]\d+)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;g&amp;lt;phone&amp;gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;g&amp;lt;name&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;park 010-1234-1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;010&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;park&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 예는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;이름 + 전화번호&lt;/code&gt;의 문자열을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;전화번호 + 이름&lt;/code&gt;으로 바꾸는 예이다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sub&lt;/code&gt;의 바꿀 문자열 부분에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\g&amp;lt;그룹이름&amp;gt;&lt;/code&gt;을 사용하면 정규식의 그룹 이름을 참조할 수 있게 된다.&lt;/p&gt;

&lt;p&gt;다음과 같이 그룹 이름 대신 참조 번호를 사용해도 마찬가지 결과를 돌려준다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;(?P&amp;lt;name&amp;gt;\w+)\s+(?P&amp;lt;phone&amp;gt;(\d+)[-]\d+[-]\d+)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;g&amp;lt;2&amp;gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;g&amp;lt;1&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;park 010-1234-1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;010&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;park&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;함수를-넣어-사용하기&quot;&gt;함수를 넣어 사용하기&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hexrepl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexrepl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Call 65490 for printing, 49152 for user code.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'Call 0xffd2 for printing, 0xc000 for user code.'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;hexrepl 함수는 match 객체(위에서 숫자에 매치되는)를 입력으로 받아 16진수로 변환하여 돌려주는 함수이다. sub의 첫 번째 매개변수로 함수를 사용할 경우 해당 함수의 첫 번째 매개변수에는 정규식과 매치된 match 객체가 입력된다. 그리고 매치되는 문자열은 함수의 반환 값으로 바뀌게 된다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/08/regex-10-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%B0%94%EA%BE%B8%EA%B8%B0.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/08/regex-10-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%B0%94%EA%BE%B8%EA%B8%B0.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        <category>sub</category>
        
        <category>subn</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 09: 전방 탐색(Lookahead Assertions)</title>
        <description> 문자열을 검색하는데 있어 추가적인 조건을 주는 Lookahead Assertions에 대해 알아보자. : &lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;

&lt;p&gt;Lookahead Assertions는 이해하기가 어렵다. 하지만 예시와 함께라면 어떤 경우에 이를 사용해야 하는지 알 수 있을 것이다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.+:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정규식 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.+:&lt;/code&gt;과 일치하는 문자열로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http:&lt;/code&gt;를 돌려주었다. 만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http:&lt;/code&gt;라는 검색 결과에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;을 제외하고 출력하려면 어떻게 해야 할까? 위 예는 그나마 간단하지만 훨씬 복잡한 정규식이어서 그루핑은 추가로 할 수 없다는 조건까지 더해진다면 어떻게 해야 할까?&lt;/p&gt;

&lt;p&gt;이럴 때 사용할 수 있는 것이 바로 전방 탐색이다. 전방 탐색에는 긍정(Positive)과 부정(Negative)의 2종류가 있고 다음과 같이 표현한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;긍정형 전방 탐색(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(?=...)&lt;/code&gt;) - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...&lt;/code&gt; 에 해당되는 정규식과 매치되어야 하며 조건이 통과되어도 문자열이 소비되지 않는다.&lt;/li&gt;
  &lt;li&gt;부정형 전방 탐색(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(?!...)&lt;/code&gt;) - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...&lt;/code&gt;에 해당되는 정규식과 매치되지 않아야 하며 조건이 통과되어도 문자열이 소비되지 않는다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;긍정형-전방-탐색&quot;&gt;긍정형 전방 탐색&lt;/h2&gt;

&lt;p&gt;긍정형 전방 탐색을 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http:&lt;/code&gt;의 결과를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt;로 바꿀 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; p = re.compile(&quot;.+(?=:)&quot;)
&amp;gt;&amp;gt;&amp;gt; m = p.search(&quot;http://google.com&quot;)
&amp;gt;&amp;gt;&amp;gt; print(m.group())
http
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정규식 중 :에 해당하는 부분에 긍정형 전방 탐색 기법을 적용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(?=:)&lt;/code&gt;으로 변경하였다. 이렇게 되면 기존 정규식과 검색에서는 동일한 효과를 발휘하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt; 에 해당하는 문자열이 정규식 엔진에 의해 소비되지 않아(검색에는 포함되지만 검색 결과에는 제외됨) 검색 결과에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;이 제거된 후 돌려주는 효과가 있다.&lt;/p&gt;

&lt;p&gt;여기서 알 수 있는 사실은, Lookahead Assertions이 zero-width assertion이라는 사실이다. 실제 검색에 적용되기 위해서는 엔진이 이를 가지고 있어야 하는데 그렇지는 않고, 그저 있는지 확인만 해주는 역할이다. 이를 소비된다 라는 표현으로 적었다는 것은 앞 글에서 배웠다.&lt;/p&gt;

&lt;h2 id=&quot;부정적-전방-탐색&quot;&gt;부정적 전방 탐색&lt;/h2&gt;

&lt;p&gt;자, 이번에는 다음 정규식을 보자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 정규식은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;파일 이름 + . + 확장자&lt;/code&gt;를 나타내는 정규식이다. 이 정규식은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo.bar&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autoexec.bat&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sendmail.cf&lt;/code&gt; 같은 형식의 파일과 매치될 것이다.&lt;/p&gt;

&lt;p&gt;이 정규식에 확장자가 “bat인 파일은 제외해야 한다”는 조건을 추가해 보자. 가장 먼저 생각할 수 있는 정규식은 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;이 정규식은&lt;/td&gt;
      &lt;td&gt;메타 문자를 사용하여 확장자의 첫 번째 문자가 b가 아니거나 두 번째 문자가 a가 아니거나 세 번째 문자가 t가 아닌 경우를 의미한다. 이 정규식에 의하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo.bar&lt;/code&gt;는 제외되지 않고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autoexec.bat&lt;/code&gt;은 제외되어 만족스러운 결과를 돌려준다. 하지만 이 정규식은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sendmail.cf&lt;/code&gt;처럼 확장자의 문자 개수가 2개인 케이스를 포함하지 못하는 오동작을 하기 시작한다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;따라서 다음과 같이 바꾸어야 한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|..&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;확장자의 문자 개수가 2개여도 통과되는 정규식이 만들어졌다. 하지만 정규식은 점점 더 복잡해지고 이해하기 어려워진다.&lt;/p&gt;

&lt;p&gt;그런데 여기에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bat&lt;/code&gt; 파일말고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exe&lt;/code&gt; 파일도 제외하라는 조건이 추가로 생긴다면 어떻게 될까? 이 모든 조건을 만족하는 정규식을 구현하려면 패턴은 더욱더 복잡해질 것이다. 이런 상황에서 우리는 부정적 전방 탐색을 사용한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bat&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;확장자가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bat&lt;/code&gt;가 아닌 경우에만 통과된다는 의미이다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bat&lt;/code&gt; 문자열이 있는지 조사하는 과정에서 문자열이 소비되지 않으므로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bat&lt;/code&gt;가 아니라고 판단되면 그 이후 정규식 매치가 진행된다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exe&lt;/code&gt; 역시 제외하라는 조건이 추가되더라도 다음과 같이 간단히 표현할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bat&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exe&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/08/regex-09-%EC%A0%84%EB%B0%A9%ED%83%90%EC%83%89.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/08/regex-09-%EC%A0%84%EB%B0%A9%ED%83%90%EC%83%89.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        <category>Lookahead Assertions</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 08: Grouping(그루핑)</title>
        <description> 그룹을 지어 검색을 진행할 수 있는 그루핑에 대해서 알아보자. : &lt;p&gt;특정 문자열이 반복되는지에 대해서 알기 위해서는 어떠한 정규식을 작성해야 할까? 우리가 앞에서 배운 내용으로는 할 수 없다. 이렇게 특정 문자열이 단위로 구성되어 검색을 진행하고 싶을 때 사용하는 것이 그루핑이다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ABC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'(ABC)+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ABCABCABC OK?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ABCABCABC'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ABCABCABC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;()&lt;/code&gt;을 사용하여 간단하게 그루핑을 진행할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;의미론적으로-그루핑하기&quot;&gt;의미론적으로 그루핑하기&lt;/h1&gt;

&lt;p&gt;이렇게 묶어서 무언가를 관리할 수 있다면 추가적으로 이점이 생긴다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;\w+\s+\d+[-]\d+[-]\d+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;park 010-1234-1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 작성하게 되면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;이름 + &quot; &quot; + 전화번호&lt;/code&gt; 형태의 문자열을 찾을 수 있다. 그런데 여기서 이름만 뽑아내고 싶다면 어떻게 해야할까? 사실 위의 반복의 목적보다 이런 의미론적으로 묶어서 뽑아내고자 하는 목적인 경우가 더 많다. 이 때 그루핑을 사용해보자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;(\w+)\s+\d+[-]\d+[-]\d+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;park 010-1234-1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;park&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이름에 해당하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\w+&lt;/code&gt; 부분을 그룹 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(\w+)&lt;/code&gt;으로 만들면 match 객체의 group(인덱스) 메서드를 사용하여 그루핑된 부분의 문자열만 뽑아낼 수 있다. group 메서드의 인덱스는 다음과 같은 의미를 갖는다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;group(인덱스)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;group(0)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;매치된 전체 문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;group(1)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;첫 번째 그룹에 해당되는 문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;group(2)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;두 번째 그룹에 해당되는 문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;group(n)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;n 번째 그룹에 해당되는 문자열&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;(\w+)\s+(\d+[-]\d+[-]\d+)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;park 010-1234-1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;010&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 하면 총 2개의 그룹이 발생하고, 전화번에 해당하는 부분에 접근하고 싶으면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group(2)&lt;/code&gt;를 사용하면 된다. 그럼 전화번호에서 통신사 번호를 뽑아내고자 하면 어떻게 할까?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;(\w+)\s+((\d+)[-]\d+[-]\d+)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;park 010-1234-1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;010&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 예제에서 알 수 있는 것은 group을 중첩하여 사용하는 것이 가능하다는 것이다. 이런 경우 바깥쪽에서 안쪽으로 들어갈 수록 group의 index가 증가한다. zero-width assertion이기 때문에 이 모든 작업이 가능하다는 것을 염두해두자.&lt;/p&gt;

&lt;h1 id=&quot;그루핑된-문자열-재참조하기&quot;&gt;그루핑된 문자열 재참조하기&lt;/h1&gt;

&lt;p&gt;그룹의 또 하나 좋은 점은 한 번 그루핑한 문자열을 재참조(Backreferences)할 수 있다는 점이다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(\b\w+)\s+\1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Paris in the the spring'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'the the'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정규식 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(\b\w+)\s+\1&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(그룹) + &quot; &quot; + 그룹과 동일한 단어&lt;/code&gt;와 매치됨을 의미한다. 이렇게 정규식을 만들게 되면 2개의 동일한 단어를 연속적으로 사용해야만 매치된다. 이것을 가능하게 해주는 것이 바로 재참조 메타 문자인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\1&lt;/code&gt;이다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\1&lt;/code&gt;은 정규식의 그룹 중 첫 번째 그룹을 가리킨다. 두 번째 그룹을 참조하려면 \2를 사용하면 된다.&lt;/p&gt;

&lt;h1 id=&quot;그루핑된-문자열에-이름-붙이기&quot;&gt;그루핑된 문자열에 이름 붙이기&lt;/h1&gt;

&lt;p&gt;정규식 안에 그룹이 무척 많아진다고 생각해 보자. 예를 들어 정규식 안에 그룹이 10개 이상만 되어도 매우 혼란스러울 것이다. 거기에 더해 정규식이 수정되면서 그룹이 추가, 삭제되면 그 그룹을 인덱스로 참조한 프로그램도 모두 변경해 주어야 하는 위험도 갖게 된다. 만약 그룹을 인덱스가 아닌 이름(Named Groups)으로 참조할 수 있다면 어떨까? 즉 딕셔너리와 같은 형식이다. 그렇다면 이런 문제에서 해방되지 않을까?&lt;/p&gt;

&lt;p&gt;이러한 이유로 정규식은 그룹을 만들 때 그룹 이름을 지정할 수 있게 했다. 그 방법은 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(?P&amp;lt;name&amp;gt;\w+)\s+((\d+)[-]\d+[-]\d+)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 정규식은 앞에서 본 이름과 전화번호를 추출하는 정규식이다. 기존과 달라진 부분은 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(\w+) --&amp;gt; (?P&amp;lt;name&amp;gt;\w+)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;대단히 복잡해진 것처럼 보이지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(\w+)&lt;/code&gt;라는 그룹에 name이라는 이름을 붙인 것에 불과하다. 여기에서 사용한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(?...)&lt;/code&gt; 표현식은 정규 표현식의 확장 구문이다. 이 확장 구문을 사용하기 시작하면 가독성이 상당히 떨어지긴 하지만 반면에 강력함을 갖게 된다. 그룹에 이름을 지어 주려면 다음과 같은 확장 구문을 사용해야 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(?P&amp;lt;그룹명&amp;gt;...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그룹에 이름을 지정하고 참조하는 다음 예를 보자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;(?P&amp;lt;name&amp;gt;\w+)\s+((\d+)[-]\d+[-]\d+)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;park 010-1234-1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;park&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 예에서 볼 수 있듯이 name이라는 그룹 이름으로 참조할 수 있다. 그룹 이름을 사용하면 정규식 안에서 재참조하는 것도 가능하다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(?P&amp;lt;word&amp;gt;\b\w+)\s+(?P=word)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Paris in the the spring'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'the the'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 예에서 볼 수 있듯이 재참조할 때에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(?P=그룹이름)&lt;/code&gt;이라는 확장 구문을 사용해야 한다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/08/regex-08-%EA%B7%B8%EB%A3%A8%ED%95%91.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/08/regex-08-%EA%B7%B8%EB%A3%A8%ED%95%91.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        <category>Assertions</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 07: 다양한 메타문자</title>
        <description> 더 다양한 종류의 메타문자에 대해서 알아보자. : &lt;h1 id=&quot;문자열-소비&quot;&gt;문자열 소비&lt;/h1&gt;

&lt;p&gt;정규식을 공부하다 보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assertion&lt;/code&gt; 이라는 단어를 자주 보게된다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assertion&lt;/code&gt;이라는 단어는 검사, 검증, 확인 이라는 의미를 갖고 있다. 결과적으로 어떤 것을 검사하겠다는 의미로 많이 사용한다. 그런데 Zero-width는 무엇인가? 너비가 없다는 의미인데 왜 이런 추상적인 단어를 썼는지는 아직도 모르겠다. 하지만 말을 끼워 맞춰서 연상을 쉽게 해보도록 하자.&lt;/p&gt;

&lt;p&gt;이 개념을 알기 전에 우리가 알아야 할 것이 있다. 지금 이 글을 앞의 메타 문자와 따로 쓴 이유가 여기에 있다. 앞에서 배운 메타문자를 사용하게 되면 우리는 &lt;strong&gt;문자열을 소비&lt;/strong&gt;한다. 이게 무슨 소리일까.&lt;/p&gt;

&lt;p&gt;이 굉장히 추상적인 개념은 예시를 들어 한번만 생각하면 굉장히 쉽게 이해가 가능하다. 예를 들어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;아버지가방에들어간다&lt;/code&gt; 라는 문자열이 있다고 해보자. 내가 궁금한 정보는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;가방&lt;/code&gt;을 찾고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;방에&lt;/code&gt; 를 찾고 싶다. 이러한 문제에 대해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[가방]&lt;/code&gt; 이렇게 정규식을 작성하고 검색을 진행했을 때, 정규식 엔진이 어떤 방식으로 구동하는지를 따라가 보자.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;아버지&lt;/code&gt; 부분 까지는 매치가 되지 않으므로 그냥 지나간다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;가방&lt;/code&gt;을 확인하고는 매치되었으므로 문자열을 &lt;strong&gt;소비&lt;/strong&gt;해 버린다. 즉 없애 버린다와 같은 개념으로 보는 것이다.&lt;/li&gt;
  &lt;li&gt;소비된 문자열은 쳐다도 안보고 그 다음 문자열인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;에들어간다&lt;/code&gt; 라는 문자열에 대해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;가방&lt;/code&gt; 문자열을 찾는다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;가방&lt;/code&gt;을 찾는 정규표현식은 끝난다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;방에&lt;/code&gt;를 찾는 정규표현식이 시작되고, 찾지 못한 상태로 끝난다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이 예시를 보다보면, 소비라는 것이 어떤 의미로 사용되었는지 이해할 수 있다. 즉, 매치가 되는 경우 해당 부분이 없어지게 된다. 정말 &lt;strong&gt;소비&lt;/strong&gt;라는 단어에 걸맞는 행동이다.&lt;/p&gt;

&lt;h1 id=&quot;zero-width-assertion&quot;&gt;Zero-width Assertion&lt;/h1&gt;

&lt;p&gt;그렇다면, 너비가 없는 확인 이라는 의미의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Zero-width Assertion&lt;/code&gt;은 무엇일까. 위에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;가방&lt;/code&gt;이라는 단어는 2의 너비를 가진다고 볼 수 있다. 그리고 매칭이 되었을 때, 이 2의 너비에 해당하는 문자열이 소비된다. 이러한 관점에서 보았을 때, 0의 너비를 가진다고 함은, 검증을 진행하는데 있어 &lt;strong&gt;소비가 되는 문자열이 없다&lt;/strong&gt;라는 의미로 와닿는다. 결과적으로 이러한 해석이 맞으며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Zero-width Assertion&lt;/code&gt;는 검색을 진행하는데 있어 위에서 알아본 문자열 소비가 없는 방법을 말한다. 이제 이러한 종류의 메타 문자에 대해서 알아보자.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;^ 또는 $ 문자를 메타 문자가 아닌 문자 그 자체로 매치하고 싶은 경우에는 \^, $ 로 사용하면 된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;메타문자&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td&gt;또는 이라는 의미 (Or)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;^&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자열의 맨 처음과 일치하는가?(옵션에 따라 의미가 다름)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자열의 맨 끝과 일치하는가?(옵션에 따라 의미가 다름)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자열의 맨 처음과 일치하는가?(옵션에 따라 의미가 다름)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\Z&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자열의 맨 끝과 일치하는가?(옵션에 따라 의미가 다름)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\b&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;단어 구분자(whitespace)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\B&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;whitespace가 양쪽에 없는(사실 단어라고 볼수는 없다) 경우에 해당 문자가 있는 경우 매치&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2&gt;|&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;메타 문자는 or과 동일한 의미로 사용된다. A&lt;/td&gt;
      &lt;td&gt;B라는 정규식이 있다면 A 또는 B라는 의미가 된다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Crow|Servo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'CrowHello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Crow'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-1&quot;&gt;^&lt;/h2&gt;

&lt;p&gt;메타 문자는 문자열의 맨 처음과 일치함을 의미한다. 앞에서 살펴본 컴파일 옵션 re.MULTILINE을 사용할 경우에는 여러 줄의 문자열일 때 각 줄의 처음과 일치하게 된다.&lt;/p&gt;

&lt;p&gt;다음 예를 보자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'^Life'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Life is too short'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Life'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'^Life'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'My Life'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^Life&lt;/code&gt; 정규식은 Life 문자열이 처음에 온 경우에는 매치하지만 처음 위치가 아닌 경우에는 매치되지 않음을 알 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;-2&quot;&gt;$&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; 메타 문자는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt; 메타 문자와 반대의 경우이다. 즉 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt;는 문자열의 끝과 매치함을 의미한다. 다음 예를 보자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'short$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Life is too short'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'short'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'short$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Life is too short, you need python'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;short$&lt;/code&gt; 정규식은 검색할 문자열이 short로 끝난 경우에는 매치되지만 그 이외의 경우에는 매치되지 않음을 알 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;a&quot;&gt;\A&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\A&lt;/code&gt;는 문자열의 처음과 매치됨을 의미한다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt; 메타 문자와 동일한 의미이지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.MULTILINE&lt;/code&gt; 옵션을 사용할 경우에는 다르게 해석된다. re.MULTILINE 옵션을 사용할 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt;은 각 줄의 문자열의 처음과 매치되지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\A&lt;/code&gt;는 줄과 상관없이 전체 문자열의 처음하고만 매치된다.&lt;/p&gt;

&lt;h2 id=&quot;z&quot;&gt;\Z&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\Z&lt;/code&gt;는 문자열의 끝과 매치됨을 의미한다. 이것 역시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\A&lt;/code&gt;와 동일하게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.MULTILINE&lt;/code&gt; 옵션을 사용할 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; 메타 문자와는 달리 전체 문자열의 끝과 매치된다.&lt;/p&gt;

&lt;h2 id=&quot;b&quot;&gt;\b&lt;/h2&gt;

&lt;p&gt;\b는 단어 구분자(Word boundary)이다. 보통 단어는 whitespace에 의해 구분된다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\bclass\b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'no class at all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'class'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\bclass\b&lt;/code&gt; 정규식은 앞뒤가 whitespace로 구분된 class라는 단어와 매치됨을 의미한다. 따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no class at all&lt;/code&gt;의 class라는 단어와 매치됨을 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'the declassified algorithm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 예의 the declassified algorithm 문자열 안에도 class 문자열이 포함되어 있긴 하지만 whitespace로 구분된 단어가 아니므로 매치되지 않는다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'one subclass is'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;subclass 문자열 역시 class 앞에 sub 문자열이 더해져 있으므로 매치되지 않음을 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\b&lt;/code&gt; 메타 문자를 사용할 때 주의해야 할 점이 있다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\b&lt;/code&gt;는 파이썬 리터럴 규칙에 의하면 &lt;strong&gt;백스페이스(BackSpace)를 의미&lt;/strong&gt;하므로 백스페이스가 아닌 단어 구분자임을 알려 주기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r'\bclass\b'&lt;/code&gt;처럼 Raw string임을 알려주는 기호 r을 반드시 붙여 주어야 한다.&lt;/p&gt;

&lt;h2 id=&quot;b-1&quot;&gt;\B&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\B&lt;/code&gt; 메타 문자는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\b&lt;/code&gt; 메타 문자와 반대의 경우이다. 즉 whitespace로 구분된 단어가 아닌 경우에만 매치된다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\Bclass\B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'no class at all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'the declassified algorithm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'class'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'one subclass is'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;class 단어의 앞뒤에 whitespace가 하나라도 있는 경우에는 매치가 안 되는 것을 확인할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/08/regex-07-%EB%8B%A4%EC%96%91%ED%95%9C-%EB%A9%94%ED%83%80%EB%AC%B8%EC%9E%90.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/08/regex-07-%EB%8B%A4%EC%96%91%ED%95%9C-%EB%A9%94%ED%83%80%EB%AC%B8%EC%9E%90.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        <category>Assertions</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 06: 파이썬 백슬래시 문제</title>
        <description> 정규 표현식을 파이썬에서 사용할 때 발생하는 문제인 백슬래시 문제를 알아본다. : &lt;p&gt;앞에서 정규식을 표현할 때 우리는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\&lt;/code&gt; 문자를 사용했다. 하지만 내가 정규식을 작성하는 데 있어서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\&lt;/code&gt;문자 자체를 찾고 싶다면 어떻게 해야할까?&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\section
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 정규식을 작성하게 되면 문제가 발생한다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\s&lt;/code&gt; 부분이 whitespace로 해석되어 의도한 대로 매치가 이루어지지 않는다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ \t\n\r\f\v]ection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;즉, 위와 같은 의미로 해석된다. 이러한 문제에 대해서 해결하고 싶다면 아래와 같게 작성해야 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\\section
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;파이썬의-문제&quot;&gt;파이썬의 문제&lt;/h1&gt;

&lt;p&gt;위의 과정까지는 아무런 문제가 없다. 하지만 파이썬에서 정규식을 저렇게 작성하면 문제가 발생한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;section'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파이썬 정규식 엔진에는 파이썬 문자열 리터럴 규칙에 따라 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\&lt;/code&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\&lt;/code&gt;로 변경되어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\section&lt;/code&gt;이 전달된다. 유닉스의 grep, vi 등에서는 이러한 문제가 없다. 파이썬에서 사용할 때만 발생한다(파이썬의 리터럴 규칙) 결국 정규식 엔진에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;//&lt;/code&gt;문자를 전달하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\\\&lt;/code&gt; 이렇게 전달해야 한다.(~~ㅠ~~) 정규식 엔진은 정규식을 해석하고 수행하는 모듈이다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;section'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정말 번거롭다. 이쁘지도 않고. 이렇게 이해하기 어려운 정규식에 대해서 사람들은 짜증을 표현했다. 이러한 문제로 인해 파이썬 정규식에는 Raw String 규칙이 생겨나게 되었다. 즉 컴파일해야 하는 정규식이 Raw String임을 알려 줄 수 있도록 파이썬 문법을 만든 것이다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\\section'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 정규식 문자열 앞에 r 문자를 삽입하면 이 정규식은 Raw String 규칙에 의하여 백슬래시 2개 대신 1개만 써도 2개를 쓴 것과 동일한 의미를 갖게 된다. 결과적으로 백슬래시를 사용하여 검색을 진행하고자 할때는 raw 표현을 쓰는 것이 좋다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/08/regex-06-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%B0%B1%EC%8A%AC%EB%9E%98%EC%8B%9C-%EB%AC%B8%EC%A0%9C.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/08/regex-06-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%B0%B1%EC%8A%AC%EB%9E%98%EC%8B%9C-%EB%AC%B8%EC%A0%9C.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 05: Compile Option(컴파일 옵션)</title>
        <description> 정규식을 컴파일 할 때, 추가적인 옵션을 주는 방법을 알아보자. : &lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;

&lt;p&gt;지금까지는 간단한 정규식을 살펴 보았지만, 실제로 존재하는 다양한 문자열에서 정보를 뽑아내기 위해서는 추가적인 옵션이 필요하다. 예를 들어 쇼핑몰의 상품 리뷰를 사용자가 작성했다고 한다. 우리는 여기서 핵심적인 단어를 뽑아내야 한다. 하지만 이런 리뷰는 문자열은 맞지만, 전체적으로 보았을 때 줄바꿈 문자(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\n&lt;/code&gt;)가 포함되어 있다. 줄바꿈 문자(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\n&lt;/code&gt;)는 이전에 배운 문자열에서 매치되지 않는 경우이다. 이렇게 어떤 문자열이냐에 따라서 우리는 검색 조건을 달리해야 한다. 이런 문제점을 기반으로 정규식을 컴파일할 때 사용할 수 있는 옵션을 소개한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;option&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;describtion&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DOTALL(S)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;메타문자 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; 가 줄바꿈 문자를 포함하여 모든 문자와 매치할 수 있도록 한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;IGNORECASE(I)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;대소문자에 관계없이 매치할 수 있도록 한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;MULTILINE(M)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;여러줄과 매치할 수 있도록 한다. (^, $ 메타문자의 사용과 관계가 있는 옵션이다)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;VERBOSE(X)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;verbose 모드를 사용할 수 있도록 한다. (정규식을 보기 편하게 만들수 있고 주석등을 사용할 수 있게된다.)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;옵션을 사용할 때는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.DOTALL&lt;/code&gt;처럼 전체 옵션 이름을 써도 되고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.S&lt;/code&gt;처럼 약어를 써도 된다.&lt;/p&gt;

&lt;h2 id=&quot;dotalls&quot;&gt;DOTALL(S)&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;메타문자 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; 가 줄바꿈 문자를 포함하여 모든 문자와 매치할 수 있도록 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; 메타 문자는 &lt;strong&gt;줄바꿈 문자(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\n&lt;/code&gt;)를 제외한&lt;/strong&gt; 모든 문자와 매치되는 규칙이 있다. 만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\n&lt;/code&gt; 문자도 포함하여 매치하고 싶다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.DOTALL&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.S&lt;/code&gt; 옵션을 사용해 정규식을 컴파일하면 된다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a.b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 예를 보면, 컴파일 옵션을 주지 않은 경우 메타문자 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;는 줄바꿈 문자(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\n&lt;/code&gt;)와 매치되지 않음을 알 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a.b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOTALL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01FCF3D8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이번에는 옵션을 준 경우이다. 줄바꿈 문자도 포함하여 결과에 반영한 것을 알 수 있다. 보통 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.DOTALL&lt;/code&gt; 옵션은 여러 줄로 이루어진 문자열에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\n&lt;/code&gt;에 상관없이 검색할 때 많이 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;ignorecase-i&quot;&gt;IGNORECASE, I&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;대소문자에 관계없이 매치할 수 있도록 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.IGNORECASE&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.I&lt;/code&gt; 옵션은 대소문자 구별 없이 매치를 수행할 때 사용하는 옵션이다. 다음 예제를 보자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[a-z]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'python'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01FCFA30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Python'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01FCFA68&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'PYTHON'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01FCF9F8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[a-z]&lt;/code&gt; 정규식은 소문자만을 의미하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.I&lt;/code&gt; 옵션으로 대소문자 구별 없이 매치된다.&lt;/p&gt;

&lt;h2 id=&quot;multiline-m&quot;&gt;MULTILINE, M&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;여러줄과 매치할 수 있도록 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;re.MULTILINE 또는 re.M 옵션은 다음 글에 설명할 메타 문자인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt;와 연관된 옵션이다. 이 메타 문자에 대해 간단히 설명하자면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt;는 문자열의 처음을 의미하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt;는 문자열의 마지막을 의미한다. 예를 들어 정규식이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^python&lt;/code&gt;인 경우 문자열의 처음은 항상 python으로 시작해야 매치되고, 만약 정규식이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python$&lt;/code&gt;이라면 문자열의 마지막은 항상 python으로 끝나야 매치된다는 의미이다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^python&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;python one
life is too short
python two
you need python
python three&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['python one']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정규식 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^python\s\w+&lt;/code&gt;은 python이라는 문자열로 시작하고 그 뒤에 whitespace, 그 뒤에 단어가 와야 한다는 의미이다. 검색할 문자열 data는 여러 줄로 이루어져 있다.&lt;/p&gt;

&lt;p&gt;결과를 보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt; 메타 문자에 의해 python이라는 문자열을 사용한 첫 번째 줄만 매치된 것을 알 수 있다. 하지만 내가 원하는 결과는 해당 문자열의 처음에 조건이 걸리는 것이 아니고, &lt;strong&gt;라인이 변경될 때&lt;/strong&gt; 처음인 경우를 뜻하는 것이다. 이럴 때 사용하는 옵션이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.MULTILINE&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.M&lt;/code&gt;이다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^python&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MULTILINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;python one
life is too short
python two
you need python
python three&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['python one', 'python two', 'python three']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.MULTILINE&lt;/code&gt; 옵션으로 인해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt; 메타 문자가 문자열 전체가 아닌 각 줄의 처음이라는 의미를 갖게 되었다. 즉, re.MULTILINE 옵션은 ^, $ 메타 문자를 문자열의 각 줄마다 적용해 주는 것이다.&lt;/p&gt;

&lt;h2 id=&quot;verbosex&quot;&gt;VERBOSE(X)&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;verbose 모드를 사용할 수 있도록 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;고마운 옵션이다. 사실 정규식은 사용하기 까다롭다. 정규식은 마치 시와 같이 함축적인 단어들의 집합으로 구성되어 있다. 따라서 전문가들이 만들어 놓은 정규식을 보면 정말 섬세하게 다뤄서 해석해야 한다. 좀 더 좋은 방법이 없을까? 이렇게 이해하기 어려운 정규식을 주석 또는 줄 단위로 구분할 수 있다면 얼마나 보기 좋고 이해하기 쉬울까? 이러한 욕구를 해소해줄 수 있는 것이 바로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.VERBOSE&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.X&lt;/code&gt; 옵션이다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;charref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;amp;[#](0[0-7]+|[0-9]+|x[0-9a-fA-F]+);'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;charref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;&quot;&quot;
 &amp;amp;[#]                # Start of a numeric entity reference
 (
     0[0-7]+         # Octal form
   | [0-9]+          # Decimal form
   | x[0-9a-fA-F]+   # Hexadecimal form
 )
 ;                   # Trailing semicolon
&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERBOSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;첫 번째와 두 번째 예를 비교해 보면 컴파일된 패턴 객체인 charref는 모두 동일한 역할을 한다. 하지만 정규식이 복잡할 경우 두 번째처럼 주석을 적고 여러 줄로 표현하는 것이 훨씬 가독성이 좋다는 것을 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.VERBOSE&lt;/code&gt; 옵션을 사용하면 문자열에 사용된 whitespace는 컴파일할 때 제거된다(단 [ ] 안에 사용한 whitespace는 제외). 그리고 줄 단위로 #기호를 사용하여 주석문을 작성할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/06/regex-05-compile-option.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/06/regex-05-compile-option.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 04: match 객체의 메서드</title>
        <description> 검색을 통해 결과로 받은 match 객체의 사용법을 알아본다. : &lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;

&lt;p&gt;앞의 글에서 우리는 컴파일 된 pattern 객체의 메서드를 공부했다. 이 메서드에는 match, search, findall, finditer가 있었다. 해당 메서드들은 검색이 된 경우 match 객체를 리턴했다.&lt;/p&gt;

&lt;p&gt;하지만 우리가 원하는 결과는 이 match 객체 자체가 아니다. 우리는 다음과 같은 궁금증을 가지고 검색을 진행했을 것이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;어떤 문자열이 매치되었는가?&lt;/li&gt;
  &lt;li&gt;매치된 문자열의 인덱스는 어디서부터 어디까지인가?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이러한 것들을 해결하기 위한 메서드를 소개한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;method&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;목적&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;group()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;매치된 문자열을 돌려준다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;start()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;매치된 문자열의 시작 위치를 돌려준다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;end()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;매치된 문자열의 끝 위치를 돌려준다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;span()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;매치된 문자열의 (시작, 끝)에 해당하는 튜플을 돌려준다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ab*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;group&quot;&gt;group()&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;매치된 문자열을 돌려준다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'python'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;start&quot;&gt;start()&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;매치된 문자열의 시작 위치를 돌려준다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;end&quot;&gt;end()&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;매치된 문자열의 끝 위치를 돌려준다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;span&quot;&gt;span()&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;매치된 문자열의 (시작, 끝)에 해당하는 튜플을 돌려준다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 경우는 match를 사용했기 때문에 시작 위치는 항상 0일 것이다. 염두하자.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/06/regex-04-match-%EA%B0%9D%EC%B2%B4%EC%9D%98-%EB%A9%94%EC%84%9C%EB%93%9C.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/06/regex-04-match-%EA%B0%9D%EC%B2%B4%EC%9D%98-%EB%A9%94%EC%84%9C%EB%93%9C.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 03: re module</title>
        <description> 파이썬에서 정규 표현식을 지원하는 re 모듈에 대해 공부하자. : &lt;p&gt;정규 표현식은 다양한 언어에서 사용이 가능하다. 이 글에서는 파이썬을 기반으로 정규 표현식을 확인해 보도록 하자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ab*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;re.compile을 사용하여 정규 표현식(위 예에서는 ab*)을 컴파일한다. re.compile의 결과로 돌려주는 객체 p(컴파일된 패턴 객체)를 사용하여 그 이후의 작업을 수행할 것이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;정규식을 컴파일할 때 특정 옵션을 주는 것도 가능한데, 이에 대해서는 뒤에서 자세히 살펴본다.&lt;/li&gt;
  &lt;li&gt;패턴이란 정규식을 컴파일한 결과이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;method&quot;&gt;Method&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;목적&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;match()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자열의 &lt;strong&gt;처음부터&lt;/strong&gt; 정규식과 매치되는지 조사한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;search()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자열 &lt;strong&gt;전체를 검색&lt;/strong&gt;하여 정규식과 매치되는지 조사한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;findall()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;정규식과 &lt;strong&gt;매치되는 모든 문자열(substring)을 리스트로&lt;/strong&gt; 돌려준다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;finditer()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;정규식과 매치되는 모든 문자열(substring)을 &lt;strong&gt;반복 가능한 객체로&lt;/strong&gt; 돌려준다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;match, search는 정규식과 매치될 때는 match 객체를 돌려주고, 매치되지 않을 때는 None을 돌려준다. 각각의 예를 진행하기 전의 아래의 코드를 먼저 수행하자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[a-z]+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;match&quot;&gt;Match&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;문자열의 처음부터 정규식과 매치되는지 조사한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01F3F9F8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;“python” 문자열은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[a-z]+&lt;/code&gt; 정규식에 부합되므로 match 객체를 돌려준다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3 python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;“3 python” 문자열은 처음에 나오는 문자 3이 정규식 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[a-z]+&lt;/code&gt;에 부합되지 않으므로 None을 돌려준다. match의 결과로 match 객체 또는 None을 돌려주기 때문에 파이썬 정규식 프로그램은 보통 다음과 같은 흐름으로 작성한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;정규표현식&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'string goes here'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Match found: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'No match'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;검색되지 않은 경우 작업을 수행하지 않는다.&lt;/p&gt;

&lt;h2 id=&quot;search&quot;&gt;search&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;문자열 전체를 검색하여 정규식과 매치되는지 조사한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01F3FA68&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;match와 동일한 결과이다. 하지만 아래의 예는 결과가 다르다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3 python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01F3FA30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;“3 python” 문자열의 첫 번째 문자는 “3”이지만 search는 문자열의 처음부터 검색하는 것이 아니라 문자열 전체를 검색하기 때문에 “3 “ 이후의 “python” 문자열과 매치된다. 이렇듯 match 메서드와 search 메서드는 문자열의 처음부터 검색할지의 여부에 따라 &lt;strong&gt;다르게 사용&lt;/strong&gt;해야 한다.&lt;/p&gt;

&lt;h1 id=&quot;findall&quot;&gt;findall&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;정규식과 매치되는 모든 문자열(substring)을 리스트로 돌려준다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;life is too short&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'life'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'is'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'too'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'short'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;“life is too short” 문자열의 ‘life’, ‘is’, ‘too’, ‘short’ 단어를 각각 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[a-z]+&lt;/code&gt; 정규식과 매치해서 리스트로 돌려준다.&lt;/p&gt;

&lt;h1 id=&quot;finditer&quot;&gt;finditer&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;정규식과 매치되는 모든 문자열(substring)을 반복 가능한 객체로 돌려준다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;findall과 마찬가지로 문자열에 해당하는 단어를 돌려준다. 하지만 우리가 이 정규 표현식을 사용하는 경우 중에서, 하나의 문자열에 존재하는 다양한 단어들에 대해 다시한번 검색을 진행하고 싶을 수 있다. 이런 경우 findall은 리스트를 결과값으로 뱉기 때문에 이러한 작업을 진행하기 어렵다. 이러한 필요성에서 finditer method는 굉장히 유용하다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finditer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;life is too short&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callable_iterator&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01F5E390&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01F3F9F8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01F3FAD8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01F3FAA0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRE_Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01F3F9F8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;match 객체를 리턴하기 때문에 우리는 이를 기반으로 다른 검색을 진행할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/06/regex-03-re-module.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/06/regex-03-re-module.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 02: 간단한 메타문자</title>
        <description> 정규식의 메타문자는 무엇인가? : &lt;blockquote&gt;
  &lt;p&gt;원래 그 문자가 가진 뜻이 아닌 특별한 용도로 사용하는 문자&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;문자-클래스-&quot;&gt;문자 클래스 []&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;[ ] 사이에 있는 각각의 문자들에 대해 적어도 하나가 매치가 되는가?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;즉, 정규 표현식이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[abc]&lt;/code&gt;라면 이 표현식의 의미는 “a, b, c 중 한 개의 문자와 매치”를 뜻한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“a”는 정규식과 일치하는 문자인 “a”가 있으므로 매치&lt;/li&gt;
  &lt;li&gt;“before”는 정규식과 일치하는 문자인 “b”가 있으므로 매치&lt;/li&gt;
  &lt;li&gt;“dude”는 정규식과 일치하는 문자인 a, b, c 중 어느 하나도 포함하고 있지 않으므로 매치되지 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[ ] 안의 두 문자 사이에 하이픈(-)을 사용하면 두 문자 사이의 범위(From - To)를 의미한다. 예를 들어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[a-c]&lt;/code&gt;라는 정규 표현식은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[abc]&lt;/code&gt;와 동일하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[0-5]&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[012345]&lt;/code&gt;와 동일하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[a-zA-Z]&lt;/code&gt; : 알파벳 모두&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[0-9]&lt;/code&gt; : 숫자&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;문자 클래스([ ]) 안에는 어떤 문자나 메타 문자도 사용할 수 있다. 하지만..&lt;/p&gt;

&lt;h2 id=&quot;주의사항&quot;&gt;주의사항&lt;/h2&gt;

&lt;p&gt;주의해야 할 메타 문자가 1가지 있다. 그것은 바로 ^인데, 문자 클래스 안에 ^ 메타 문자를 사용할 경우에는 반대(not)라는 의미를 갖는다. 예를 들어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[^0-9]&lt;/code&gt;라는 정규 표현식은 숫자가 아닌 문자만 매치된다.&lt;/p&gt;

&lt;h2 id=&quot;자주-사용하는-문자-클래스&quot;&gt;자주 사용하는 문자 클래스&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;메타문자&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;동일 표현식&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\d&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[0-9]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;숫자와 매치&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\D&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[^0-9]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;숫자가 아닌 것과 매치&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\s&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[ \t\n\r\f\v]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;whitespace 문자(스페이스, 공백, tab)와 매치(맨 앞의 빈 칸은 공백문자(space)를 의미한다.)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\S&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[^ \t\n\r\f\v]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;whitespace 문자가 아닌 것과 매치&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\w&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a-zA-Z0-9_]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자+숫자(alphanumeric)와 매치&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\W&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[^a-za-z0-9_]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자+숫자(alphanumeric)가 아닌 문자와 매치&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;대문자 사용은 소문자의 반대이다.&lt;/p&gt;

&lt;h1 id=&quot;dot&quot;&gt;Dot(.)&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;줄바꿈 문자인 \n을 제외한 모든 문자와 매치됨을 의미, 단 하나라도 있어야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;사실, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re.DOTALL&lt;/code&gt; 옵션을 주면 \n 문자와도 매치된다. 일단 예제를 보며 이해해보자.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;정규식&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;의미&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a.b&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a + 모든문자 + b”&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;즉, a와 b라는 문자 사이에 어떤 문자가 들어가도 모두 매치된다는 의미이다. 문자열 “aab”, “a0b”, “abc”가 정규식 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a.b&lt;/code&gt;와 어떻게 매치되는지 살펴보자.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“aab”는 가운데 문자 “a”가 모든 문자를 의미하는 .과 일치하므로 정규식과 매치된다.&lt;/li&gt;
  &lt;li&gt;“a0b”는 가운데 문자 “0”가 모든 문자를 의미하는 .과 일치하므로 정규식과 매치된다.&lt;/li&gt;
  &lt;li&gt;“abc”는 “a”문자와 “b”문자 사이에 &lt;strong&gt;어떤 문자라도 하나는 있어야 하는&lt;/strong&gt; 이 정규식과 일치하지 않으므로 매치되지 않는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;마지막이 헷갈린다. 조심하도록 하자. 그런데 만약 “.” 문자 자체와 매칭이 되길 원한다면 어떻게 해야할까?&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;정규식&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;의미&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a[.]b&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a + Dot(.)문자 + b”&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;정규식 a[.]b는 “a.b” 문자열과 매치되고, “a0b” 문자열과는 매치되지 않는다. 혼동하지 말자.&lt;/p&gt;

&lt;h1 id=&quot;반복&quot;&gt;반복(*)&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;특정 문자가 0부터 무한대까지의 반복을 매칭한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;정규식&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;문자열&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Match 여부&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca*t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ct&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 0번 반복되어 매치&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca*t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 0번 이상 반복되어 매치 (1번 반복)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca*t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;caaat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 0번 이상 반복되어 매치 (3번 반복)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;반복-1&quot;&gt;반복(+)&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;특정 문자가 1부터 무한대까지의 반복을 매칭한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;정규식&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;문자열&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Match 여부&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca+t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ct&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;No&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 0번 반복되어 매치되지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca+t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 0번 이상 반복되어 매치 (1번 반복)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca+t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;caaat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 0번 이상 반복되어 매치 (3번 반복)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;반복nm&quot;&gt;반복({n,m})&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;특정 문자가 n이상 m이하 반복 횟수인 경우 매칭한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;{ } 메타 문자를 사용하면 반복 횟수를 고정할 수 있다. {m, n} 정규식을 사용하면 반복 횟수가 m부터 n까지 매치할 수 있다. 또한 m 또는 n을 생략할 수도 있다. 만약 {3,}처럼 사용하면 반복 횟수가 3 이상인 경우이고 {,3}처럼 사용하면 반복 횟수가 3 이하를 의미한다. 생략된 m은 0과 동일하며, 생략된 n은 무한대(2억 개 미만)의 의미를 갖는다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;{1,}은 +와 동일하고, {0,}은 *와 동일하다.&lt;/strong&gt; 이 부분을 언급하는 이유는, 굳이 저런 표현보다는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;을 사용하는 것이 직관적이기 때문이다.&lt;/p&gt;

&lt;h2 id=&quot;n&quot;&gt;{n}&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;반드시 n번 반복.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;정규식&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;문자열&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Match 여부&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca{2}t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;No&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 1번만 반복되어 매치되지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca{2}t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;caat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 2번 반복되어 매치&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;n-m&quot;&gt;{n, m}&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;n~m 번 반복.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;정규식&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;문자열&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Match 여부&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca{2,5}t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;No&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 1번만 반복되어 매치되지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca{2,5}t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;caat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 2번 반복되어 매치&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca{2,5}t&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;caaaaat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“a”가 5번 반복되어 매치&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1&gt;?&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;있어도 되고 없어도 된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;정규식&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;문자열&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Match 여부&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ab?c&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;abc&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“b”가 1번 사용되어 매치&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ab?c&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ac&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“b”가 0번 사용되어 매치&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wikidocs.net/4308&quot;&gt;07-2 정규 표현식 시작하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/06/regex-02-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%A9%94%ED%83%80%EB%AC%B8%EC%9E%90.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/06/regex-02-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%A9%94%ED%83%80%EB%AC%B8%EC%9E%90.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Regular Expression] 01: 개념잡기</title>
        <description> 정규표현식은 무엇이고 왜 사용하는가. : &lt;h1 id=&quot;개념&quot;&gt;개념&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;특정한 규칙을 가진 문자열의 집합을 표현하기 위해 쓰이는 형식언어&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;프로그래밍을 다루다 보면 가장 많이 만나게 되는 것이 문자열이다. 모든 것이 문자열로 나타나 있고, 이것을 기반으로 한 규칙으로 프로그램이 구동되기 때문이다. 또한 특정한 정보를 다루기 위해서라도 우리는 이 문자열을 다루고 추출해야 한다. 이러한 수요는 끊임없이 계속되어 왔다.&lt;/p&gt;

&lt;h1 id=&quot;역사와-종류&quot;&gt;역사와 종류&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;개발 새발이다. 너무 다양해.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;정규 표현식은 다양한 분야에서 쓰였다. 그리고 각각의 분야에서 발생한 정규식은 서로에게 영향을 주었다. 보통 이러면 하나의 통일된 표준이 나올법도 한데, 그렇지 않다.&lt;/p&gt;

&lt;p&gt;유닉스 명령줄 도구들에서 사용하던 정규 표현식은 후에 POSIX 표준에 편입되었다. 그러면서 이 시기의 표준으로 받아들여진 형식을 POSIX 정규식이라고 한다. 그리고 이후에 다시 POSIX 정규식은 POSIX BRE (POSIX 기본 정규식)와 POSIX ERE (POSIX 확장 정규식)으로 다른 버전이 나뉘게 된다. (grep에서 -e 스위치를 써서 확장 정규식을 쓰던 옵션이 바로 ERE를 쓴다는 의미이다.) 그 외에 BRE를 기본 골격으로 한 vim 정규식이 있다. 이 vim 정규식은 vim 편집기 내에서 찾기/바꾸기 등의 동작에서 범위를 지정하는데 사용된다. 하지만 오랜 역사를 따라 개선과 확장을 거듭하면서 이 vim 정규식 역시 POSIX 표준과는 좀 다른 규격으로 취급될 정도이다. (심지어 vim 내에서도 magic 모드, very magic 모드라는 것이 있어서 이후의 확장 정규식의 일부 기능을 사용하거나, 일부 punctuation 문자를 매칭하는 방법이 다시 갈리게 되는 지경이다.)&lt;/p&gt;

&lt;p&gt;그리고 문자열을 다루는데 특화된 스크립트 언어인 펄(perl)이 등장했다. 펄의 정규식 체계는 역시나 기본은 POSIX와 비슷한 골격에서 디자인되어 있다. 그런데 엄청나게 많은 확장이 들어갔다. 펄의 정규식은 PCRE라는 규격으로 정리되었으며, 이후 많은 프로그래밍 언어들이 이 규격을 차용하거나 계승한다. 여기서 중요한 것은 “일부 차용”이다. 이 규격은 워낙 방대해서 PCRE를 그대로 가져다 쓰지 않는 이상, 구현할 게 너무 많기 때문이다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://soooprmx.com/archives/7718&quot;&gt;정규표현식의 개념과 기초 문법&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/dv/tips/2020/10/06/regex-01-%EA%B0%9C%EB%85%90%EC%9E%A1%EA%B8%B0.html</link>
        <guid isPermaLink="true">http://localhost:4000/dv/tips/2020/10/06/regex-01-%EA%B0%9C%EB%85%90%EC%9E%A1%EA%B8%B0.html</guid>
        
        <category>Tips</category>
        
        <category>정규표현식</category>
        
        
        <category>DV/Tips</category>
        
      </item>
    
      <item>
        <title> [Partial Differential Equations] 14: 함수의 복소적 표현 (Function in Complex Numbers)</title>
        <description> 복소수에서 지수, 삼각, 로그 함수의 표현법을 알아본다. : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94914738-90026f80-04e6-11eb-9403-e7905ef3ec1b.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94914751-955fba00-04e6-11eb-90be-31cf1ffa171d.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-14-Function-in-Complex-Numbers.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-14-Function-in-Complex-Numbers.html</guid>
        
        <category>Math</category>
        
        <category>Differential Equation</category>
        
        
        <category>DS/Calculus</category>
        
      </item>
    
      <item>
        <title> [Partial Differential Equations] 13: 코시-리만 방정식 (Cauchy-Riemann Equation)</title>
        <description> 복소 해석 함수에서 중요한 방정식인 코시-리만 방정식을 알아본다. : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94914635-5b8eb380-04e6-11eb-9e65-c423cc3bca54.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94914643-60536780-04e6-11eb-9646-fc902c6577d6.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94914658-647f8500-04e6-11eb-9bec-82de9122929e.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94914672-69443900-04e6-11eb-9c79-2a0e723c286a.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94914680-6e08ed00-04e6-11eb-84fc-368bbcf65323.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-13-Cauchy-Riemann-Equation.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-13-Cauchy-Riemann-Equation.html</guid>
        
        <category>Math</category>
        
        <category>Differential Equation</category>
        
        
        <category>DS/Calculus</category>
        
      </item>
    
      <item>
        <title> [Partial Differential Equations] 12: 복소 해석 함수의 도함수 (Derivative of Complex Analytic Function)</title>
        <description> 복소 해석 함수의 극한, 도함수를 알아보자. : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94909482-339b5200-04de-11eb-8dc3-4b2fd8642388.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94909496-38600600-04de-11eb-976e-9c0721370785.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94909512-3d24ba00-04de-11eb-91e0-922cc89caec9.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94909525-4150d780-04de-11eb-9bab-719d2889489f.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-12-%EB%B3%B5%EC%86%8C-%ED%95%B4%EC%84%9D-%ED%95%A8%EC%88%98%EC%9D%98-%EB%8F%84%ED%95%A8%EC%88%98.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-12-%EB%B3%B5%EC%86%8C-%ED%95%B4%EC%84%9D-%ED%95%A8%EC%88%98%EC%9D%98-%EB%8F%84%ED%95%A8%EC%88%98.html</guid>
        
        <category>Math</category>
        
        <category>Differential Equation</category>
        
        
        <category>DS/Calculus</category>
        
      </item>
    
      <item>
        <title> [Partial Differential Equations] 11: 드무아브르의 공식 (De Moivre's Fomula)</title>
        <description> 드무아브르의 공식과 복소수의 제곱근을 알아보자. : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94909315-f5059780-04dd-11eb-96ea-3fae6c52b49b.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94909326-f8991e80-04dd-11eb-8c61-ca6710271a0e.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-11-DeMoivre's-Fomula.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-11-DeMoivre's-Fomula.html</guid>
        
        <category>Math</category>
        
        <category>Differential Equation</category>
        
        
        <category>DS/Calculus</category>
        
      </item>
    
      <item>
        <title> [Partial Differential Equations] 10: 복소수의 극좌표 표현(Polar Form of Complex Numbers)</title>
        <description> 복소수와 극좌표계 사이의 관계를 알아보자. : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94909260-e0290400-04dd-11eb-96db-3cb0dda27389.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94909268-e323f480-04dd-11eb-9050-0bf33c6b7bc8.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94909283-e7e8a880-04dd-11eb-88e0-b3336a66d6d7.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-10-Polar-Form-Of-Complex-Numbers.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-10-Polar-Form-Of-Complex-Numbers.html</guid>
        
        <category>Math</category>
        
        <category>Differential Equation</category>
        
        
        <category>DS/Calculus</category>
        
      </item>
    
      <item>
        <title> [Partial Differential Equations] 09: 복소수 &amp; 복소평면 (Complex Number &amp; Complex Plane)</title>
        <description> 복소수와 복소 평면에 대해 알아보자. : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94908970-6bee6080-04dd-11eb-9d84-e34687f2619a.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94908978-71e44180-04dd-11eb-89ca-6f928dcbeebe.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94908991-77418c00-04dd-11eb-9529-b94dca5c0a97.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-09-Complex-Number-Complex-Plane.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-09-Complex-Number-Complex-Plane.html</guid>
        
        <category>Math</category>
        
        <category>Differential Equation</category>
        
        
        <category>DS/Calculus</category>
        
      </item>
    
      <item>
        <title> [Partial Differential Equations] 08: 극좌표에서 파동방정식 (Wave Equation in Polar Coordinates)</title>
        <description> 2차원 막 파동 방정식을 풀어보자. : &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94908800-32b5f080-04dd-11eb-8f09-dfed77ec240c.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94908819-36e20e00-04dd-11eb-9720-3a49b01b9ac2.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94908836-3ba6c200-04dd-11eb-95a5-d0c8b24ea953.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94908851-3fd2df80-04dd-11eb-947c-1fd8973be641.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94908864-44979380-04dd-11eb-9303-dc25e2f9263d.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/94908878-48c3b100-04dd-11eb-8305-3cc634c9a3ee.png&quot; alt=&quot;image&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-08-Wave-Equation-In-Polar-Coordinates.html</link>
        <guid isPermaLink="true">http://localhost:4000/ds/calculus/2020/10/02/Partial-Differential-Equations-08-Wave-Equation-In-Polar-Coordinates.html</guid>
        
        <category>Math</category>
        
        <category>Differential Equation</category>
        
        
        <category>DS/Calculus</category>
        
      </item>
    
  </channel>
</rss>