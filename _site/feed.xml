<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>완숙의 에그머니 🍳</title>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://localhost:4000/</link>
    <description>Be On My Wave 🌊</description>
    <pubDate>Tue, 29 Sep 2020 00:51:42 +0900</pubDate>
    
      <item>
        <title>03: 들여쓰기</title>
        <link>/dv/tips/2020/09/28/Naming-Rules-03-%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0.html</link>
        <guid isPermaLink="true">/dv/tips/2020/09/28/Naming-Rules-03-%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0.html</guid>
        <description>&lt;h1 id=&quot;1-들여쓰기-기본&quot;&gt;1. 들여쓰기 기본&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;TAB 을 사용한다.&lt;/li&gt;
  &lt;li&gt;SPACE를 사용하지 않는다.&lt;/li&gt;
  &lt;li&gt;Tab 사이즈는 4로 정의한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;2-주석은-코드와-같은-레벨에-있어야-한다&quot;&gt;2. 주석은 코드와 같은 레벨에 있어야 한다.&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;들여쓰기의 레벨을 같이 사용한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;좋은-예&quot;&gt;좋은 예&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Format a message and display&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, the time is : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToShortTimeString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MessageBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;좋지-않은-예&quot;&gt;좋지 않은 예&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Format a message and display&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, the time is : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToShortTimeString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MessageBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-중괄호는-중괄호-밖에-있는-코드와-같은-레벨에-있어야-한다&quot;&gt;3. 중괄호는 중괄호 밖에 있는 코드와 같은 레벨에 있어야 한다.&lt;/h1&gt;

&lt;h1 id=&quot;4-논리적인-코드-그룹은-빈-줄-하나로-구분해야-한다&quot;&gt;4. 논리적인 코드 그룹은 빈 줄 하나로 구분해야 한다.&lt;/h1&gt;

&lt;h2 id=&quot;좋은-예-1&quot;&gt;좋은 예&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SayHello&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, the time is : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToShortTimeString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;MessageBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Do something&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;좋지-않은-예-1&quot;&gt;좋지 않은 예&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SayHello&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, the time is : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToShortTimeString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;MessageBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Do something&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;5-클래스-내부의-각-메서드-사이에는-단-하나의-빈-줄만-있어야-한다&quot;&gt;5. 클래스 내부의 각 메서드 사이에는 단 하나의 빈 줄만 있어야 한다.&lt;/h1&gt;

&lt;h1 id=&quot;6-중괄호는-다른-라인과-분리되어-있어야하며-라인을-같이-쓰면-안된다&quot;&gt;6. 중괄호는 다른 라인과 분리되어 있어야하며 라인을 같이 쓰면 안된다.&lt;/h1&gt;

&lt;h2 id=&quot;좋은-예-2&quot;&gt;좋은 예&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Do something&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;좋지-않은-예-2&quot;&gt;좋지 않은 예&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Do something&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;7-지시자operator와-괄호-앞뒤로는-한-칸의-공간을-남긴다&quot;&gt;7. 지시자(operator)와 괄호 앞뒤로는 한 칸의 공간을 남긴다.&lt;/h1&gt;

&lt;h2 id=&quot;좋은-예-3&quot;&gt;좋은 예&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;좋지-않은-예-3&quot;&gt;좋지 않은 예&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;showResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;8-연관된-코드를-묶을때는-region을-사용해라&quot;&gt;8. 연관된 코드를 묶을때는 #region을 사용해라.&lt;/h1&gt;

&lt;p&gt;확장하거나 축소할 수 있는 코드 블록을 지정하자. #region을 사용해서 묶는다면 그 페이지는 훨씬 간략해질 것이다.&lt;/p&gt;

&lt;h1 id=&quot;9-private-멤버-변수-속성-그리고-메소드는-파일의-하단에-그리고-public-멤버들을-파일의-하단에-위치하도록-하라&quot;&gt;9. private 멤버 변수, 속성, 그리고 메소드는 파일의 하단에 그리고 public 멤버들을 파일의 하단에 위치하도록 하라.&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;switch 문은 다음 형식이어야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ABC&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;statements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 지나감&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEF&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;statements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XYZ&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;statements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;statements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;각 case 키워드를 전체 switch 문에 대해 들여쓰기한다는 점에 주의한다. 이를 통해 전체 switch 문을 두드러지게 한다. 또한 “:” 문자 앞에 있는 여분의 빈칸에 주의한다. case 문에 break 문이 없으면 항상 명시적으로 ‘지나감’이라고 주석을 달아야 한다. break 문이 없는 것은 일반적인 오류이므로, 사용하지 않을 때는 &lt;strong&gt;의도적이라는 것을 명확히&lt;/strong&gt; 해야 한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;do-while 문은 다음 형식이어야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;statements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 형식은 위에서 제시한 일반 구역 규칙을 따른다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;while 문은 다음 형식이어야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;statements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 형식은 위에서 제시한 일반 구역 규칙을 따른다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;부동소수점 상수는 항상 소수점과 함께 써야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// 아님: double total = 0;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0e8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 아님: double speed = 3e8;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이는 정수와 부동소수점 수의 본질적인 차이를 강조한다. 수학적으로 두 모델은 완전히 다르며 호환되지 않는 개념이다. 또한 위의 마지막 예제처럼 코드의 어떤 지점에서 명확하지 않을 수 있는 대입되는 변수(sum)의 타입을 강조한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;부동소수점 상수는 항상 소수점 앞에 숫자를 써야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 아님: double total = .5;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;C++ 에서 숫자와 표현식 시스템은 수학에서 빌려왔으므로 가능한 구문에 대한 수학적 관례를 따라야 한다. 또한 .5보다 0.5가 휠씬 읽기 쉬우며 정수 5와 헷갈리지 않는다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;루프 변수는 해당 루프 바로 앞에서 초기화해야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;isDone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// 아님: bool isDone = false;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;10-do-while-루프는-피한다&quot;&gt;10. do-while 루프는 피한다.&lt;/h1&gt;

&lt;p&gt;do-while 루프는 해당 루프의 가장 아래에 조건이 있기 때문에 일반적인 while 루프와 for 루프보다 가독성이 떨어진다. 해당 루프의 사용 범위를 이해하려면 반드시 전체 루프를 살펴봐야 한다. 게다가 do-while 루프는 while 루프나 for 루프로 쉽게 바꿔 쓸 수 있으므로 필요하지 않다. 이 구조의 사용을 줄여 가독성을 향상시킨다.&lt;/p&gt;

&lt;h1 id=&quot;11-루프에서-break와-continue-사용을-피해야-한다&quot;&gt;11. 루프에서 break와 continue 사용을 피해야 한다.&lt;/h1&gt;

&lt;p&gt;이 문장은 구조적인 대체 코드보다 가독성을 더 높일 수 있을 때만 사용해야 한다.&lt;/p&gt;

&lt;h1 id=&quot;12-무한-루프는-while-true-형식을-사용한다&quot;&gt;12. 무한 루프는 “while (true)” 형식을 사용한다.&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(;;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// 좋지 않음&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 좋지 않음&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;1에 대해 시험하는 것은 필요하지도 의미적이지도 않다. for (;;) 형식은 가독성이 매우 나쁘며 실제 무한 루프인지 명확하지 않다.&lt;/p&gt;

&lt;h1 id=&quot;13-파일-내용은-반드시-80-열column-내로-유지해야-한다&quot;&gt;13. 파일 내용은 반드시 80 열(column) 내로 유지해야 한다.&lt;/h1&gt;

&lt;p&gt;80 열은 편집기, 터미널 에뮬레이터, 프린터와 디버거의 공통적인 치수이며 여러 사람이 공유하는 파일은 이런 제한을 지켜야 한다. 이를 통해 프로그래머 사이에 파일을 전달할 때 의도하지 않은 줄바꿈을 피할 수 있어 가독성을 향상시킨다.&lt;/p&gt;

&lt;h1 id=&quot;14-객체-이름이-암시되어-있으면-메서드-이름에서-반복-사용하지-말아야-한다&quot;&gt;14. 객체 이름이 암시되어 있으면 메서드 이름에서 반복 사용하지 말아야 한다.&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;O&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;X&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;line.getLength();&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;line.getLineLength();&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;클래스 선언에서 두 번째가 자연스러운 것처럼 보이지만 불필요하게 사용한 예이다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://viiiin.tistory.com/49&quot;&gt;프로그램 코딩 시 네이밍 규칙과 들여쓰기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>02: 특정한 명명 규칙</title>
        <link>/dv/tips/2020/09/28/Naming-Rules-02-%ED%8A%B9%EC%A0%95-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99.html</link>
        <guid isPermaLink="true">/dv/tips/2020/09/28/Naming-Rules-02-%ED%8A%B9%EC%A0%95-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99.html</guid>
        <description>&lt;h1 id=&quot;1-getset은-반드시-속성attribute에-직접-접근할-때-사용한다&quot;&gt;1. get/set은 반드시 속성(attribute)에 직접 접근할 때 사용한다.&lt;/h1&gt;

&lt;p&gt;C++ 개발 커뮤니티에서 일반적인 용례이며, 자바에서는 거의 표준이 되었다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-compute는-무언가-계산하는-메서드에서-사용한다&quot;&gt;2. compute는 무언가 계산하는 메서드에서 사용한다.&lt;/h1&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;valueSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;computeAverage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;computeInverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 것은 시간을 소비할 수 있는 연산이라는 것을 즉시 알아챌 수 있는 단서를 제공해 반복해서 사용한다면 결과를 따로 저장해 두는 것을 고려하도록 할 수 있다. 이처럼 용어를 일관되게 사용하면 가독성을 향상시키게 된다.&lt;/p&gt;

&lt;h1 id=&quot;3-find는-무언가를-찾는-메서드에서-사용한다&quot;&gt;3. find는 무언가를 찾는 메서드에서 사용한다.&lt;/h1&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findNearestVertex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findMinElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;최소한의 계산이 포함된, 간단한 검색 메서드라는 것을 즉시 알아챌 수 있는 단서를 다른 개발자에게 제공한다.&lt;/p&gt;

&lt;h1 id=&quot;4-initialize는-객체-또는-개념을-만들-때-사용한다&quot;&gt;4. initialize는 객체 또는 개념을 만들 때 사용한다.&lt;/h1&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;printer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initializeFontSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;영국어 initialise보다 미국어 initialize를 사용해야 하며, 약어 &lt;strong&gt;init 는 피하도록 한다.&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;5-gui-요소component를-나타내는-변수는-해당-요소-타입-이름을-접미어로-사용한다&quot;&gt;5. GUI 요소(component)를 나타내는 변수는 해당 요소 타입 이름을 접미어로 사용한다.&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mainWindow&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;propertiesDialog&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;widthScale&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;loginText&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;leftScrollbar&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mainForm&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fileMenu&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minLabel&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exitButton&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yesToggle&lt;/code&gt;, 등…&lt;/p&gt;

&lt;p&gt;해당 변수 타입을 통해 리소스 객체를 즉시 알아챌 수 있는 단서를 사용자에게 제공하므로 가독성을 향상시킨다.&lt;/p&gt;

&lt;h1 id=&quot;6-복수형은-객체-모음collection을-나타내는-이름에-사용해야-한다&quot;&gt;6. 복수형은 객체 모음(collection)을 나타내는 이름에 사용해야 한다.&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;변수 타입과 더불어 해당 요소에 수행할 수 있는 연산을 즉시 알아챌 수 있는 단서를 사용자에게 제공하므로 가독성을 향상시킨다.&lt;/p&gt;

&lt;h1 id=&quot;7-접두어-n-은-객체-수를-나타내는-변수에-사용한다&quot;&gt;7. 접두어 n 은 객체 수를 나타내는 변수에 사용한다.&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nPoints&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nLines&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;객체 수를 나타내는 이 관례적인 표기법은 수학에서 가져왔다.&lt;/p&gt;

&lt;h1 id=&quot;8-접미어-no는-독자적인entity-번호를-나타내는-변수에-사용한다&quot;&gt;8. 접미어 “No”는 독자적인(Entity) 번호를 나타내는 변수에 사용한다.&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tableNo&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;employeeNo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entity 번호를 나타내는 이 관례적인 표기법은 수학에서 가져왔다.&lt;/p&gt;

&lt;p&gt;세련된 다른 방법은 iTable, iEmployee 처럼 접두어 i 를 붙이는 것이며, 이를 통해 효과적으로 그런 변수를 명명된 &lt;strong&gt;반복자&lt;/strong&gt;로 만들 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;9-반복자-변수는-i-j-k-등으로-호출한다&quot;&gt;9. 반복자 변수는 i, j, k 등으로 호출한다.&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nTables&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;반복자를 나타내는 이 관례적인 표기법은 수학에서 가져왔다. 변수 이름으로 i 를 제외한 j, k 등은 중첩 루프에서만 사용한다. (옮긴이 주: 이 표기법은 되도록 간단한 루프에서만 사용하고 복잡하거나 &lt;strong&gt;긴 루프에서는 의미있는 이름을 사용&lt;/strong&gt;하는 게 좋다.)&lt;/p&gt;

&lt;h1 id=&quot;10-접두어-is는-boolean-변수와-메서드에서-사용한다&quot;&gt;10. 접두어 is는 Boolean 변수와 메서드에서 사용한다.&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isSet&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isVisible&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isFinished&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isFound&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isOpen&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;C++ 개발 커뮤니티에서 일반적이며, 자바에서는 일부분에서 강제하는 용례이다. 접두어 is를 사용하면 status나 flag처럼 좋지 못한 불리언 이름을 선택하는 흔한 문제를 해결할 수 있다. 사실 isStatus나 isFlag는 적절하지 못하므로 더 의미있는 이름을 선택해야 한다.&lt;/p&gt;

&lt;p&gt;다음은 상황에 따라 접두어 is 보다 더 나은 방법 몇 가지로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;has&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;can&lt;/code&gt; 그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;should&lt;/code&gt; 접두어를 사용한다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hasLicense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;canEvaluate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;11-반의어는-반드시-대응하는-연산에-대해-사용해야-한다&quot;&gt;11. 반의어는 반드시 대응하는 연산에 대해 사용해야 한다.&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;A&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;B&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;A&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;B&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;get&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;set&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;add&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;remove&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;create&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;destroy&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;start&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;stop&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;insert&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;delete&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;increment&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;decrement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;old&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;new&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;begin&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;end&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;first&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;last&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;up&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;down&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;min&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;next&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;previous&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;open&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;close&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;show&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;hide&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;suspend&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;resume&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;대칭 관계를 통해 복잡성을 낮출 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;12-이름에-약어는-피해야-한다&quot;&gt;12. 이름에 약어는 피해야 한다.&lt;/h1&gt;

&lt;p&gt;약어는 되도록이면 피하고, 명시적으로 작성한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;좋은 예&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;나쁜 예&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;computeAverage();&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;compAvg();&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;121-사용하면-안되는-약어&quot;&gt;12.1 사용하면 안되는 약어&lt;/h2&gt;

&lt;p&gt;문제가 될 만한 단어들은 약어를 사용하지 않는다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;O&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;X&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;command&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cmd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;copy&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cp&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;point&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;pt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;compute&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;comp&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;initialize&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;init&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;121-약어를-사용하는-것이-좋은-경우&quot;&gt;12.1 약어를 사용하는 것이 좋은 경우&lt;/h2&gt;

&lt;p&gt;그에 반해 약어/두문자어가 더 자연스런 특정 분야의 관용구는 약어 형태를 유지해야 하며, 절대 다음처럼 쓰지 않는다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;O&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;X&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;html&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;HypertextMarkupLanguage&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cpu&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CentralProcessingUnit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;per&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PriceEarningRatio&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;13-포인터를-이름에-사용하는-것은-특히-피해야-한다&quot;&gt;13. 포인터를 이름에 사용하는 것은 특히 피해야 한다.&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;O&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;X&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Line* line;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Line* pLine;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Line* linePtr;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;C/C++ 환경에서 많은 변수가 포인터이므로 이와 같은 관례는 따르기가 거의 불가능하다. 또한 C++ 에서 객체는 흔히, 프로그래머가 특정 구현 내용을 무시할 수 있는 간접 타입이다.&lt;/p&gt;

&lt;p&gt;포인터를 이름에 사용할 때는 객체의 실제 타입이 특별히 중요할 때에 한해 해당 타입을 강조하기 위해서이다.&lt;/p&gt;

&lt;h1 id=&quot;14-부정적인negated-boolean-변수-이름은-반드시-피해야-한다&quot;&gt;14. 부정적인(negated) Boolean 변수 이름은 반드시 피해야 한다.&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;O&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;X&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bool isError;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isNoError&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bool isFound;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isNotFound&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;문제는 이런 이름을 논리 부정 연산자와 함께 사용할 때 이중 부정을 통해 결과가 만들어지므로 생긴다.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!isNotFound&lt;/code&gt; 의 의미를 즉시 명확하게 알아차릴 수 없다.&lt;/p&gt;

&lt;h1 id=&quot;15-열거-상수는-공통-타입-이름을-접두어로-붙인다&quot;&gt;15. 열거 상수는 공통 타입 이름을 접두어로 붙인다.&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;COLOR_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;COLOR_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;COLOR_BLUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이러한 것은 해당 선언을 어디에서 찾을 수 있는지, 어느 상수가 함께 속한 것인지, 그리고 그 상수가 어떤 개념을 나타내는지 등 추가 정보를 제공한다. 다른 방법은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Color: : RED, Airline: : AIR_FRANCE&lt;/code&gt; 등과 같이 항상 공통 타입을 통해 해당 상수를 참조하는 것이다.&lt;/p&gt;

&lt;h1 id=&quot;16-예외-클래스는-exception-접미어를-붙인다&quot;&gt;16. 예외 클래스는 Exception 접미어를 붙인다.&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AccessException&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;예외 클래스는 실제 해당 프로그램의 주된 설계 부분이 아니며(옮긴이 주: 프로그램에서 주된 처리 로직이 아니라는 뜻), 이와 같이 이름을 붙이면 다른 클래스와 상대적으로 구별된다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://viiiin.tistory.com/49&quot;&gt;프로그램 코딩 시 네이밍 규칙과 들여쓰기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>01: 네이밍 관례와 표준</title>
        <link>/dv/tips/2020/09/28/Naming-Rules-01-%EB%84%A4%EC%9D%B4%EB%B0%8D-%EA%B4%80%EB%A1%80%EC%99%80-%ED%91%9C%EC%A4%80.html</link>
        <guid isPermaLink="true">/dv/tips/2020/09/28/Naming-Rules-01-%EB%84%A4%EC%9D%B4%EB%B0%8D-%EA%B4%80%EB%A1%80%EC%99%80-%ED%91%9C%EC%A4%80.html</guid>
        <description>&lt;p&gt;가장 중요한 두 가지의 표기법을 알고 읽으면 수월하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;파스칼 표기법
    &lt;ul&gt;
      &lt;li&gt;모든 단어에서 첫번째 문자가 대문자이며 나머지는 소문자이다&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BackColor&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;카멜 표기법
    &lt;ul&gt;
      &lt;li&gt;최초에 사용된 단어를 제외한 첫번째 문자가 대문자이며 나머지는 소문자이다&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;backColor&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-클래스-명에는-파스칼-표기법을-사용한다&quot;&gt;1. 클래스 명에는 파스칼 표기법을 사용한다.&lt;/h1&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-함수method-명에는-파스칼-표기법을-사용한다&quot;&gt;2. 함수(Method) 명에는 파스칼 표기법을 사용한다.&lt;/h1&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SayHello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-변수와-함수-파라미터에는-카멜-표기법을-사용한다&quot;&gt;3. 변수와 함수 파라미터에는 카멜 표기법을 사용한다.&lt;/h1&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totalCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SayHello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;4-인터페이스에는-접두사-i가-포함된-파스칼-표기법을-따른다&quot;&gt;4. 인터페이스에는 접두사 “I”가 포함된 파스칼 표기법을 따른다.&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IEntity&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;5-변수명에-헝가리안-표기법을-사용하지-않는다&quot;&gt;5. 변수명에 헝가리안 표기법을 사용하지 않는다.&lt;/h1&gt;

&lt;p&gt;이전에는 많은 프로그래머들이 변수명에 데이터 타입에 해당하는 접두사를 첨가하였다. 즉, 멤버변수에는 아래와 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m_&lt;/code&gt; 을 접두사로 사용하는 것과 같은 헝가리안 표기법을 사용했었다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_sName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러나 닷넷 코딩 표준에서 헝가리안 표기법은 추천하지 않는다. 데이터 타입을 사용하는 것과 멤버 변수를 표현하기 위한 m* 은 사용해서는 안된다. 모든 변수는 카멜 표기법을 사용해야 한다. 몇몇 프로그래머들은 아직 m* 을 붙이거나 데이터 타입을 표시하는 것을 더 좋아하겠지만, 이제 이것들은 멤버 변수를 확인하기 위한 쉬운 방법이 아니다.&lt;/p&gt;

&lt;h1 id=&quot;6-변수에-모든-의미를-충분히-담아라약어를-사용하지-말-것&quot;&gt;6. 변수에 모든 의미를 충분히 담아라(약어를 사용하지 말 것).&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;좋은 예&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;나쁜 예&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;string &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;address&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;tring &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addr&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;salary&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sal&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;7-한-글자로-된-이름을-사용하지-말-것&quot;&gt;7. 한 글자로 된 이름을 사용하지 말 것.&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s&lt;/code&gt; 보다는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;temp&lt;/code&gt; 와 같은 이름을 사용한다.&lt;/p&gt;

&lt;p&gt;한 가지 예외가 있다면 루프에서 반복을 의미하는 변수를 하용하는 경우이다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;만일 변수가 단지 반복을 위한 카운터로만 사용 된다면, 그리고 그것이 루프 안에 있는 다른 어떤 곳에서도 사용되지 않는다면, 많은 사람들은 아직까지 다른 적합한 단어를 만들어서 사용하는 것보다 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt; 를 사용하는 것을 선호한다.&lt;/p&gt;

&lt;h1 id=&quot;8-지역변수와-멤버변수는-변수명-앞에-밑줄_을-사용하여-구별한다&quot;&gt;8. 지역변수와 멤버변수는 변수명 앞에 밑줄(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt;)을 사용하여 구별한다.&lt;/h1&gt;

&lt;p&gt;지역변수에는 변수명 앞에 밑줄을 사용하지 않는다.
멤버변수에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m_&lt;/code&gt; 과 같은 헝가리안 표기법을 사용하는 대신 밑줄을 사용하여 지역변수와 구별한다.&lt;/p&gt;

&lt;h1 id=&quot;9-키워드와-비슷한-이름을-하용하지-말것&quot;&gt;9. 키워드와 비슷한 이름을 하용하지 말것.&lt;/h1&gt;

&lt;h1 id=&quot;10-boolean-이-들어가는-변수-속성-함수method등은-is-또는-유사한-접두사를-사용한다&quot;&gt;10. boolean 이 들어가는 변수, 속성, 함수(method)등은 “is” 또는 유사한 접두사를 사용한다.&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;private bool &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_isFinished&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;11-네임스페이스-명은-표준-패턴을-따라야-한다&quot;&gt;11. 네임스페이스 명은 표준 패턴을 따라야 한다.&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;회사명&gt;.&lt;제품명&gt;.&lt;최상위모듈&gt;.&lt;하위모듈&gt;
&lt;/하위모듈&gt;&lt;/최상위모듈&gt;&lt;/제품명&gt;&lt;/회사명&gt;
  &lt;/li&gt;
  &lt;li&gt;org.apache.common.lang.StringUtils;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;12-ui-구성요소를-위해-적당한-접두사를-사용한다&quot;&gt;12. UI 구성요소를 위해 적당한 접두사를 사용한다.&lt;/h1&gt;

&lt;p&gt;UI 구성요소를 적당한 접두사를 사용하여 다른 변수들과 구분할 수 있어야 한다.
여기서 추천하는 서로 다른 두 가지 방식이 있다.&lt;/p&gt;

&lt;h2 id=&quot;121-모든-ui-구성요소를-위하여-공통적인-접두사ui_를-사용한다&quot;&gt;12.1. 모든 UI 구성요소를 위하여 공통적인 접두사(ui_)를 사용한다.&lt;/h2&gt;

&lt;p&gt;이것은 모든 UI 구성요소를 묶는데 도움을 줄 것이고, 쉽게 이해하고 접근할 수 있도록 도와 줄 것이다.&lt;/p&gt;

&lt;h2 id=&quot;122-각각의-ui-구성요소마다-접두사를-적용한다&quot;&gt;12.2. 각각의 UI 구성요소마다 접두사를 적용한다.&lt;/h2&gt;

&lt;p&gt;간단한 목록이 아래에 있다. 닷넷은 다양한 컨트롤들이 제공되므로 더 많은 컨트롤(써드파티 컨트롤을 포함한)에 대한 표준을 정의해야 한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Control&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Prefix&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Control&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Prefix&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Label&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;lbl&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ListBox&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;lst&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TextBox&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;txt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DataList&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;dtl&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DataGrid&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;dtg&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Repeater&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rep&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Button&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;btn&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CheckBox&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;chk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ImageButton&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;imb&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CheckBoxList&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cbl&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Hyperlink&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;hlk&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;RadioButton&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rdo&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DropDownList&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ddl&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;RadioButtonList&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rbl&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Image&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;img&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PlaceHolder&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;phd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Panel&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;pnl&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Table&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;tbl&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Validators&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;val&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;13-파일-명은-클래스-명과-같아야-한다&quot;&gt;13. 파일 명은 클래스 명과 같아야 한다.&lt;/h1&gt;

&lt;p&gt;예를 들어, 클래스 명이 “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HelloWorld&lt;/code&gt;” 라면 파일명은 “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HelloWorld.cs&lt;/code&gt;” 이어야 한다.&lt;/p&gt;

&lt;h1 id=&quot;14-파일-명은-파스칼-표기법을-사용한다&quot;&gt;14. 파일 명은 파스칼 표기법을 사용한다.&lt;/h1&gt;

&lt;p&gt;메서드나 함수 이름은 반드시 동사이면서 소문자로 시작해 대소문자를 섞어 써야 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getName()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;computeTotalWidth()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;C++ 개발 커뮤니티에서 일반적인 용례이다. 이 형식은 변수 이름과 같지만 C++ 에서 함수는 형식상 변수와 이미 구별된다. 약어와 동의어를 이름으로 사용할 때는 반드시 대문자가 아니어야 한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;좋은 예&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;나쁜 예&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;exportHtmlSource();&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;exportHTMLSource();&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;openDvdPlayer();&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;openDVDPlayer();&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;기본 이름에 대해 모두 대문자를 사용하면 위에서 제시한 명명 규칙과 충돌한다. 이런 종류의 변수는 dVD, hTML 등으로 이름 지어야 하나 분명 가독성이 매우 나쁘다. 위의 예에서 보여준 다른 문제는 이런 이름을 다른 것과 붙여 사용할 때 가독성이 심각하게 나빠진다는 점이다. 즉, 약어 다음에 오는 단어가 원하는 만큼 돋보이지 않게 된다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://viiiin.tistory.com/49&quot;&gt;프로그램 코딩 시 네이밍 규칙과 들여쓰기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>07: Functions #5 - CallbyValue, CallbyReference</title>
        <link>/dv/c++/2020/09/28/OOP-07-Function-5.html</link>
        <guid isPermaLink="true">/dv/c++/2020/09/28/OOP-07-Function-5.html</guid>
        <description>&lt;p&gt;참조변수와 일반변수의 사용의 차이점을 알았다면, main 함수가 동작하는 도중 다른 함수를 호출할때, 그 함수의 인자 역시 두 종류가 있음을 알 수 있다. 마찬가지로 일반변수와, 참조변수를 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;두 변수의 값을 바꾸는 함수 &lt;em&gt;swap&lt;/em&gt; 을 main 함수에서 호출하는 상황을 가정하고 비교해보자.&lt;/p&gt;

&lt;h1 id=&quot;swap_callbyvalue&quot;&gt;Swap_callbyValue&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, y = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, y = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;출력
// x = 5, y = 10
// x = 5, y = 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;왜 같은 값이 출력될까?&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swap&lt;/code&gt; 함수를 호출했을 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; 값이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swap&lt;/code&gt; 함수에 들어가고, 이 값은 각각 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt; 에 &lt;strong&gt;복사&lt;/strong&gt; 된다. 따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swap&lt;/code&gt; 함수 안에서는 &lt;strong&gt;복사된 a, b&lt;/strong&gt; 안에 들어간 값이 서로 바뀌게 되고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swap&lt;/code&gt; 함수가 종료된 후에 이 값은 &lt;strong&gt;사라진다. **결국 내가 원한 결과인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; 는 바뀌지 않는게 당연하다. 이렇게 값이 복사되어 함수를 호출하는 것을 **callbyvalue&lt;/strong&gt; 라 한다.&lt;/p&gt;

&lt;h1 id=&quot;swap_callbyreference&quot;&gt;Swap_callbyReference&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, y = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, y = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;출력
// x = 5, y = 10
// x = 10, y = 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 할 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swap&lt;/code&gt; 함수를 호출한 뒤에 안에 들어갈 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;a = x&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;b = y&lt;/code&gt; 이런식으로 들어가기 때문에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; 와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt; 는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; 자체를 가리킨다. 따라서 내가 원하는 결과인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; 의 값이 바뀌게 된다. 이렇게 실제값을 가지고 함수를 호출하는 것을 &lt;strong&gt;callbyreference&lt;/strong&gt; 라 한다.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>06: Functions #4 - Reference Variable vs. Pointer</title>
        <link>/dv/c++/2020/09/28/OOP-06-Function-4.html</link>
        <guid isPermaLink="true">/dv/c++/2020/09/28/OOP-06-Function-4.html</guid>
        <description>&lt;p&gt;참조변수는 내가 선언한 값을 동시에 가리킨다는 점에서 포인터와 유사한 측면이 있다. 또 헷갈리는 점이 있다. C에서 &amp;amp;의 사용은, 내가 저장한 변수의 주소값을 불러오는 용도로 사용했었다. 그런데 C++에 와서는 이 녀석을 참조변수로 사용할 수 있다고 하니 여간 혼돈스러운게 아니다.&lt;/p&gt;

&lt;h1 id=&quot;diffrence-between-pointer--reference-variable&quot;&gt;Diffrence between Pointer &amp;amp; Reference Variable&lt;/h1&gt;

&lt;p&gt;C에서 포인터는 장단점이 아주 명확하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;메모리에 직접적으로 접근할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;단점&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;그렇기 때문에 사용자의 선택이 지배적이다. 즉, 아무렇게나 접근하여 잘못된 주소로 접근할 수 있다는 위험성이 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;포인터의 문제점은 선언과 할당을 나누기 때문에 발생한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 방식으로 선언과 할당을 해준다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2019-03-19 오전 10 23 01&quot; src=&quot;https://user-images.githubusercontent.com/37871541/54573778-fd4bce00-4a30-11e9-8998-c4e0e055eb0e.png&quot; class=&quot;center&quot; /&gt;&lt;em&gt;메모리와 할당을 나타내는 그림&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;이런식으로 가리키게 된다. 그런데 만약 내가 이것보다 복잡한 구조에 포인터를 잘못사용한다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Garbage&lt;/code&gt; 값이 들어갈 위험이 있다 이런 단점을 보안하는 방식으로 &lt;em&gt;참조변수&lt;/em&gt; 가 만들어졌다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 사용할 경우 r은 x를 가리키는 또다른 별칭이 된다.
&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2019-03-19 오전 10 28 14&quot; src=&quot;https://user-images.githubusercontent.com/37871541/54573957-b7dbd080-4a31-11e9-8ced-2ae62f6902ed.png&quot; class=&quot;center&quot; /&gt;&lt;em&gt;alias&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;이런식으로 구성된다. 참조변수는 포인터와 다르게 선언과 할당이 분리되어서 사용되지 않고, 동시에 이루어져야 한다. 즉, &lt;strong&gt;선언과 초기화가 동시에 이루어진다.&lt;/strong&gt; 그렇기 때문에 포인터에서 발생하는 잘못된 객체를 가리키는 문제점이 해결된다.&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;h2 id=&quot;pointer&quot;&gt;Pointer&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;선언과 할당이 분리되어 이루어짐&lt;/li&gt;
  &lt;li&gt;자유롭게 객체를 가리킬 수 있으나, 그렇기 때문에 오류 발생확률이 높음 (Null 값)&lt;/li&gt;
  &lt;li&gt;선언과 할당이 분리되니, 포인터 변수안의 주소값을 바꿀 수 있음&lt;/li&gt;
  &lt;li&gt;포인터 변수안에는 해당 객체의 주소값이 들어가있음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt; 를 사용해서 선언하고 사용함&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference-variable&quot;&gt;Reference Variable&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;선언과 할당이 동시에 이루어짐&lt;/li&gt;
  &lt;li&gt;그렇기 때문에 포인터에 비해 오류가 날 확률이 줄어듦&lt;/li&gt;
  &lt;li&gt;또한 선언과 할당이후 다른 객체를 가리킬 수 없음&lt;/li&gt;
  &lt;li&gt;참조변수는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 값 자체를 가리킴&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 의 별칭이라고 생각하면 됨&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; 을 사용해서 선언하고 사용함&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;주소를-가져오는--와-참조변수의-&quot;&gt;주소를 가져오는 &amp;amp; 와 참조변수의 &amp;amp;&lt;/h1&gt;

&lt;p&gt;C 에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scanf()&lt;/code&gt; 같은 함수를 사용할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;a&lt;/code&gt; 와 같은 방식으로 입력을 받았다. 이 때, &amp;amp;는 변수의 주소를 가져오는 방법으로 생각하고 사용했었다. 같은 &amp;amp;를 쓰면서 왜 하나는 주소를 가져오는 방법으로, 또 참조변수라고 다르게 얘기하는 걸까? 사용법은 2가지가 있는데, 구체적으로 알아보면 굉장히 간단함을 알 수 있다. 차례차례 알아보자.&lt;/p&gt;

&lt;h2 id=&quot;주소를-가져오는-&quot;&gt;주소를 가져오는 &amp;amp;&lt;/h2&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 코드를 보면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; 는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 의 주소를 받음을 알 수 있다. 이때 &amp;amp;은 참조변수가 아니고 x의 주소를 가져온다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=&lt;/code&gt; 연산자의 &lt;strong&gt;오른쪽&lt;/strong&gt; 에 있는 것을 기억하자.&lt;/p&gt;

&lt;h2 id=&quot;참조변수-&quot;&gt;참조변수 &amp;amp;&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;c++ 에서 참조변수는 다음과 같이 선언과 초기화를 한다. 이때 &amp;amp;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=&lt;/code&gt; 연산자 &lt;strong&gt;왼쪽&lt;/strong&gt; 에 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;주소를 가져올 때 &amp;amp; 는 &lt;strong&gt;오른쪽&lt;/strong&gt;, 참조변수를 사용할 때는 &lt;strong&gt;왼쪽&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>05: Functions #3 - Recursion Function, Reference Variable</title>
        <link>/dv/c++/2020/09/28/OOP-05-Function-3.html</link>
        <guid isPermaLink="true">/dv/c++/2020/09/28/OOP-05-Function-3.html</guid>
        <description>&lt;h1 id=&quot;recursion-function&quot;&gt;Recursion Function&lt;/h1&gt;

&lt;p&gt;Factorial 같은 함수를 구현하기 위해서는, 자기자신의 출력값을 다시 불러야 되는 필요성이 있다. 이것을 &lt;strong&gt;재귀함수&lt;/strong&gt;라 한다.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;							&lt;span class=&quot;c1&quot;&gt;// 제약조건&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 과정을 알아보면,&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;50%&quot; alt=&quot;스크린샷 2019-03-18 오후 11 52 20&quot; src=&quot;https://user-images.githubusercontent.com/37871541/54539097-dfeb1580-49d8-11e9-8f97-9aed646bc24e.png&quot; class=&quot;center&quot; /&gt;&lt;em&gt;factorial&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;6일 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n-1 factorial&lt;/code&gt; 을 불러야 하므로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5 factorial&lt;/code&gt; 로 간다. 같은 방법으로 제약조건인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n==1&lt;/code&gt; 일 때까지 갔다가, 도착하면 순차적으로 값을 얻어와 최종 값을 반환한다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;50%&quot; alt=&quot;스크린샷 2019-03-18 오후 11 53 57&quot; src=&quot;https://user-images.githubusercontent.com/37871541/54539238-19bc1c00-49d9-11e9-9556-dc8800592530.png&quot; class=&quot;center&quot; /&gt;&lt;em&gt;factorial 연산 과정&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;aliasing-reference-variable&quot;&gt;Aliasing (Reference Variable)&lt;/h1&gt;

&lt;p&gt;기본적으로, 우리가 선언된 변수를 다른 변수에 할당하게 되면 이 값을 복사해서 사용하는 셈이 된다. 작은 값의 경우 복사를 해서 프로그램을 짜는 것이 문제가 없을 수 있지만, 구조체나 객체같은 경우 복사를 해서 쓴다면 메모리 낭비가 될 수 있다.&lt;/p&gt;

&lt;p&gt;또한, 함수의 인자로 값을 그냥 넘겨준다면, 그 함수 내에서만 선언되는 지역변수들만 가지고 장난을 치게되어, 내가 원하는 결과, 원래 값 자체를 가지고 반환하는 것이 도출되지 않을 수 있다.&lt;/p&gt;

&lt;p&gt;그렇기 때문에 우리는 내가 저장한 값 자체를 가리킬 필요성이 생기는데, C에서는 이걸 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pointer&lt;/code&gt; 로 가능하게 했었다. 하지만 포인터의 문제점 때문에, C++ 은 참조변수라는 새로운 개념을 도입한다. 포인터와 참조변수의 차이점과 장단점은 밑에서 다뤄보도록 하고 지금은 참조변수에 대해서 알아보자.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;밑의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;r&lt;/code&gt; 이 참조 변수이다. 저렇게 할 경우 r은 x가 저장된 메모리공간을 동시에 가르키는 변수이다. 즉, x가 가리키는 3의 &lt;strong&gt;별명&lt;/strong&gt; 이 생겼다고 생각하면 된다.&lt;/p&gt;

&lt;h2 id=&quot;example-1&quot;&gt;Example&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;y = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;---------------&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;y = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;출력
// x = 5
// y = 5
// r = 5
// ---------------
// x = 7
// y = 5
// r = 7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;x 값을 바꿨더니, r에는 바뀐 값이 들어간 것을 볼 수 있다. 반대로 y는 5라는 값이 그대로 들어가 있다. y는 x값을 복사해서 메모리에 넣은 것이고, r은 x의 메모리공간을 함께 뜻하고 있음을 알 수 있다.&lt;/p&gt;

&lt;p&gt;여기서 여러 혼란이 올 수 있다. C에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; 는 저장된 값의 주소를 불러오는 방법이었다. 그런데 여기서는 참조변수라는 다른 이름을 가져다가 쓰고 있다. 같은 값을 가리킨다는 점에서 C언어에서 Pointer 가 생각났다.그런데 애매하게 다른 점이 있는 것 같다. 구체적으로 어떤점이 다를까?&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>04: Functions #2 - Local, Global Variable</title>
        <link>/dv/c++/2020/09/28/OOP-04-Function-2.html</link>
        <guid isPermaLink="true">/dv/c++/2020/09/28/OOP-04-Function-2.html</guid>
        <description>&lt;h1 id=&quot;local-global-variables&quot;&gt;Local, Global Variables&lt;/h1&gt;

&lt;h2 id=&quot;local-variables&quot;&gt;Local Variables&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;함수 안에서만 동작하고 함수가 끝나면 메모리에서 삭제된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수안에서 계속 살아있는 녀석이 아니다!&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수도 &lt;strong&gt;함수&lt;/strong&gt; 이기 때문에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수 종료후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수 안에서 선언된 변수는 사라진다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;global-variables&quot;&gt;Global Variables&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;함수가 실행되기 전에 선언되는 변수&lt;/li&gt;
  &lt;li&gt;프로그램의 주가 되는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수가 끝나기 전까지 항상 살아있는 변수이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;example-1&quot;&gt;Example #1&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;							&lt;span class=&quot;c1&quot;&gt;// 전역변수&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeDouble&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;			&lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;							&lt;span class=&quot;c1&quot;&gt;// 5 	makeDouble 함수 안의 지역변수&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;02: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 6&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;						&lt;span class=&quot;c1&quot;&gt;// 7&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;03: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 8&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;				&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;									&lt;span class=&quot;c1&quot;&gt;// 10&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;							&lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;01: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makeDouble&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;			&lt;span class=&quot;c1&quot;&gt;// 3 // 11&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;04: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 12&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;						&lt;span class=&quot;c1&quot;&gt;// 13&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;출력
// [Output]
// 01: 10
// 02: -1031346592 (Garbage)
// 03: 10
// 04: 20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;함수안에 적어둔 숫자 순서대로 작동한다. 실행절차를 적어보자.&lt;/p&gt;

&lt;p&gt;여기서 주의깊게 봐야하는 것은 값을 같다고 놨을 때, &lt;strong&gt;복사&lt;/strong&gt; 한다는 점. 그리고 &lt;strong&gt;전역 변수, 지역 변수&lt;/strong&gt; 가 어떻게 돌아가는지에 대한 &lt;strong&gt;구조&lt;/strong&gt; 이다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수 안으로 들어간다.&lt;/li&gt;
  &lt;li&gt;전역변수 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 를 출력한다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01: 10&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;전역 변수 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;의 10을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;makeDouble&lt;/code&gt; 함수로 복사한다.&lt;/li&gt;
  &lt;li&gt;그 값을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;makeDouble&lt;/code&gt; 함수의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;param&lt;/code&gt; 으로 복사한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;makeDouble&lt;/code&gt; 함수의 지역 변수 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 를 만든다. 값은 저장되지 않았다.&lt;/li&gt;
  &lt;li&gt;이 값을 출력한다. 값을 할당하지 않았으므로 쓰레기값이 출력된다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;02: -1031346592 (Garbage)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;makeDouble&lt;/code&gt; 함수의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 에 넘어온 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;param&lt;/code&gt; 값을 복사한다.&lt;/li&gt;
  &lt;li&gt;복사된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 를 출력한다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;03: 10&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;param * 2&lt;/code&gt; 값을 반환한다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;param&lt;/code&gt; 은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;makeDouble&lt;/code&gt; 함수가 아직 끝나지 않았으므로 살아있다.&lt;/li&gt;
  &lt;li&gt;함수가 종료되고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;makeDouble&lt;/code&gt; 의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;param&lt;/code&gt; 은 사라지고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;param * 2&lt;/code&gt; 만 임시 저장소에 저장된다.&lt;/li&gt;
  &lt;li&gt;반환된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;param * 2&lt;/code&gt; 을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 에 넣는다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;param * 2&lt;/code&gt; 은 사라진다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 를 출력한다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;04: 20&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수가 끝나고 0 을 반환한다.&lt;/li&gt;
  &lt;li&gt;프로그램이 종료된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;example-2&quot;&gt;Example #2&lt;/h2&gt;

&lt;p&gt;위의 예제를 이해했다면, 아래 코드의 결과값도 이해될 것이다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;함수 증가전, x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;함수 증가후, x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;증가전, x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;증가후, x = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;출력
// 증가전, x = 5
// 함수 증가전, x = 5
// 함수 증가후, x = 6
// 증가후, x = 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;increment&lt;/code&gt; 함수 통과후 사용되었던 지역변수는 모두 사라졌기에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수에서의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 는 그대로 5 이다.
만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 값을 변화시키고 싶다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;increment&lt;/code&gt; 함수에서 반환값을 만들어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; 에 대입하는 방향으로 코드를 썼어야 했다.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>03: Functions #1 - Calling</title>
        <link>/dv/c++/2020/09/28/OOP-03-Function-1.html</link>
        <guid isPermaLink="true">/dv/c++/2020/09/28/OOP-03-Function-1.html</guid>
        <description>&lt;h1 id=&quot;함수의-기본-모양&quot;&gt;함수의 기본 모양&lt;/h1&gt;

&lt;p&gt;수학에서의 함수와 같이, input , output 이 있고, input 이 들어갔을 때, 어떤 작업을 한 뒤, output 을 내보내는 방식으로 작동한다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;50%&quot; alt=&quot;스크린샷 2019-03-18 오후 7 40 30&quot; src=&quot;https://user-images.githubusercontent.com/37871541/54524590-b1a80e80-49b5-11e9-88b1-a429d7ff2d4c.png&quot; class=&quot;center&quot; /&gt;&lt;em&gt;함수&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;여기서는 input , output 에 아무 숫자나 넣어줘도 되지만, 컴퓨터는 이 숫자 자체도 명시적으로 써줘야 하기 때문에 어떤 input 이 들어가는지, 예상되는 output 은 어떤 녀석인지 명시적으로 써줄 필요가 있다.&lt;/p&gt;

&lt;h1 id=&quot;function-in-c&quot;&gt;Function in C++&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;iSqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// #1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// #2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;int p : input 파라미터의 자료형은 integer 이어야 한다.
    &lt;ul&gt;
      &lt;li&gt;int iSqrt : output 의 자료형은 integer 이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;어떻게 작용하는지 적어주는 함수의 body 이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2019-03-18 오후 8 06 31&quot; src=&quot;https://user-images.githubusercontent.com/37871541/54526182-5415c100-49b9-11e9-95c4-4fa0c356b565.png&quot; class=&quot;center&quot; /&gt;&lt;em&gt;함수의 구조&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;input-output-paramater&quot;&gt;Input, output paramater&lt;/h1&gt;

&lt;p&gt;수학에서의 함수와 다르게 input , output 파라미터가 없을 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;input-파라미터가-없는-경우&quot;&gt;input 파라미터가 없는 경우&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;helloworld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;helloworld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;출력
// helloworld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;output-파라미터가-없는-경우&quot;&gt;output 파라미터가 없는 경우&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;helloworld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;helloworld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;helloworld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;출력
// helloworld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;void 자료형은 window 운영체제에서만 가능하다.&lt;/p&gt;

&lt;h1 id=&quot;main-함수-안에서-사용&quot;&gt;Main 함수 안에서 사용&lt;/h1&gt;

&lt;p&gt;선언(Declare) , 정의(Define) , 호출(Calling) 의 세 과정을 거친다.&lt;/p&gt;

&lt;h2 id=&quot;선언declare&quot;&gt;선언(Declare)&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;iSqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;main 함수로 들어가기 전에, 먼저 함수의 반환형과, 파라미터의 자료형이 써진 함수의 원형(prototype) 을 적어준다. 변수 이름은 써 줄 필요없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정의define&quot;&gt;정의(Define)&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;iSqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;main 함수 밑에 어떻게 작용하는지 함수의 내용을 적어준다. 이때는 input 파라미터로 변수의 이름까지 적어줘야 사용가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;호출calling&quot;&gt;호출(Calling)&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iSqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;main 함수에서 불러서 사용한다. 함수를 돌리고난 반환값이 y에 저장된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;전체코드-예제&quot;&gt;전체코드 예제&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;# include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;					&lt;span class=&quot;c1&quot;&gt;// Declare&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;x 입력&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;y 입력&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;			&lt;span class=&quot;c1&quot;&gt;// Calling&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;					&lt;span class=&quot;c1&quot;&gt;// Define&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;default-arguments&quot;&gt;Default Arguments&lt;/h1&gt;

&lt;p&gt;함수를 호출했을 때, 아무 인자도 넣지 않았다면, default로 파라미터를 넘길 수 있다. 선언할 때, 인자값까지 같이 전달하면 된다. 또한, input이 적게 들어왔을 경우, 앞 인자만 초기값으로 설정된다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;# include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;					&lt;span class=&quot;c1&quot;&gt;// Defalut Arguments&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;x 입력&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;				&lt;span class=&quot;c1&quot;&gt;// 8&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;y 입력&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;				&lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;			&lt;span class=&quot;c1&quot;&gt;// 13&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;				&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;				&lt;span class=&quot;c1&quot;&gt;// 7&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;함수의-동작과정&quot;&gt;함수의 동작과정&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;cmath&amp;gt;		// cmath 라이브러리 포함
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 변수 할당&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 루트 계산&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 다른 값 계산 후 할당&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;cmath 는 수학 함수들을 모아둔 표준 c++ 라이브러리 이다. 우리가 주 목적을 두는 함수는 main 함수이다. 이때, 다른 함수를 불러올때, 어떤 방법으로 실행되는지 그림으로 살펴보자. main 함수가 동작하다가, 중간에 sqrt 를 만나면 만들어둔 그 함수로 갔다가, 반환값을 다시 가져오고, 또 만나면 다시 갔다가 반환값을 가져오는 방식으로 동작한다.&lt;/p&gt;

&lt;h1 id=&quot;cmath-library&quot;&gt;cmath Library&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;종류
&lt;img width=&quot;80%&quot; alt=&quot;스크린샷 2019-03-18 오후 8 05 10&quot; src=&quot;https://user-images.githubusercontent.com/37871541/54526127-23ce2280-49b9-11e9-94e3-8f20e9935406.png&quot; class=&quot;center&quot; /&gt;&lt;em&gt;math library&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>02: Identifier, Variable, constant, Std IO, Operator</title>
        <link>/dv/c++/2020/09/28/OOP-02-Identifier-Variable-constant-Std-IO-Operator.html</link>
        <guid isPermaLink="true">/dv/c++/2020/09/28/OOP-02-Identifier-Variable-constant-Std-IO-Operator.html</guid>
        <description>&lt;h1 id=&quot;identifier&quot;&gt;Identifier&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/54508875-d89d1b00-498a-11e9-8cff-f1c3ffb86c44.png&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;80%&quot; /&gt;&lt;em&gt;Reserved Words(예약어)&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;사용가능-문자&quot;&gt;사용가능 문자&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_0123456789&lt;/li&gt;
  &lt;li&gt;예약어는 안된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;variable-assignment&quot;&gt;Variable Assignment&lt;/h1&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 메모리에 integer 자료형을 넣을 공간만들고, 그 이름을 x라 하겠다.&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;variable-constant&quot;&gt;Variable, Constant&lt;/h1&gt;

&lt;p&gt;C와 같으므로 &lt;a href=&quot;https://egg-money.tistory.com/60?category=811216&quot;&gt;링크&lt;/a&gt;로 대체하겠다.&lt;/p&gt;

&lt;h1 id=&quot;standard-input--output&quot;&gt;Standard Input &amp;amp; Output&lt;/h1&gt;

&lt;p&gt;기본적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iostream&lt;/code&gt; 헤더파일을 가져와서 사용한다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iostream.h&lt;/code&gt; 헤더 파일은, c++에 있는 입출력을 위한 헤더파일이다. C언어의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stdio.h&lt;/code&gt; 와 같은 역할을 한다.&lt;/p&gt;

&lt;h2 id=&quot;출력-cout&quot;&gt;출력 (cout)&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Please&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;namespace&lt;/code&gt; 를 사용하면 다음과 같이 함수를 사용하는데 있어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;std::&lt;/code&gt; 를 쓰지 않고 사용할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Please&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;입력-cin&quot;&gt;입력 (cin)&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;여러개를 한번에 입력받을 수 있다. 마찬가지로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;namespace&lt;/code&gt; 를 사용하면 다음과 같이 함수를 사용하는데 있어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;std::&lt;/code&gt; 를 쓰지 않고 사용할 수 있다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;    #include &amp;lt;iostream&amp;gt;

    using namespace std;
    int main(){
        cin &amp;gt;&amp;gt; value1 &amp;gt;&amp;gt; value2;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;예제&quot;&gt;예제&lt;/h3&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Please enter two integer values: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; + &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;operator&quot;&gt;Operator&lt;/h1&gt;

&lt;p&gt;마찬가지로 C와 같으므로 &lt;a href=&quot;https://egg-money.tistory.com/63?category=811216&quot;&gt;링크&lt;/a&gt;로 대체하겠다.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>01: Introduction</title>
        <link>/dv/c++/2020/09/28/OOP-01-Introduction.html</link>
        <guid isPermaLink="true">/dv/c++/2020/09/28/OOP-01-Introduction.html</guid>
        <description>&lt;h1 id=&quot;c&quot;&gt;C++&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;발표년도 : 1983&lt;/li&gt;
  &lt;li&gt;설계자 : Bjarne Stroustrup, 덴마크&lt;/li&gt;
  &lt;li&gt;패러다임 : 절차적 프로그래밍, 함수형 프로그래밍, 객체 지향 프로그래밍&lt;/li&gt;
  &lt;li&gt;절차지향, 객체지향의 성격을 동시에 띄기 깨문에, 굉장히 유연하고 강력하다. 만능설계가 가능&lt;/li&gt;
  &lt;li&gt;하지만 복잡하다는 단점이 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;software-build-process--tools&quot;&gt;Software Build Process &amp;amp; Tools&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/37871541/54469619-b3b77500-47dd-11e9-882a-ef88fd44561d.png&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;50%&quot; /&gt;&lt;em&gt;Build Process&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;editor&quot;&gt;Editor&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;대부분의 에디터는 신택스에러를 막기위해 색을 칠한 단어로 표기되는 경향이 있다.&lt;/li&gt;
  &lt;li&gt;에디터는 사용자가 프로그램의 소스코드에 들어갈 수 있게 허용한다.&lt;/li&gt;
  &lt;li&gt;신택스 에러가 뜬다면 컴파일이 되지 않는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pre-processor&quot;&gt;Pre-Processor&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;전처리기는 코드를 처리하기 전에 소스코드의 요소들을 수정하고 더한다.&lt;/li&gt;
  &lt;li&gt;보통 #include 를 사용해서 우리 프로그램이 사용하는 라이브러리 정보를 가져온다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;compiler&quot;&gt;Compiler&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;컴파일러는 소스 코드를 타겟 코드로 변환한다.&lt;/li&gt;
  &lt;li&gt;타겟 코드는 장치나 특정 플랫폼을 위한 기계 언어일지 모른다.&lt;/li&gt;
  &lt;li&gt;일지 모른다고 한 이유는, 특정 프로그래밍 언어를 컴파일 할 경우, 다른 언어의 소스 언어가 될지 모르기 때문이다.&lt;/li&gt;
  &lt;li&gt;예를 들어, 초기 C++ 컴파일러는 C로 변환했다.&lt;/li&gt;
  &lt;li&gt;즉 컴파일 한 타겟 코드가 다른 소스 언어로 변환 된 것이다.&lt;/li&gt;
  &lt;li&gt;요즘의 C++ 컴파일러는 바로 기계언어로 변환한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;linker&quot;&gt;Linker&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;링커는 컴파일러에 의해 만들어진 기계 코드와, 사전에 처리된 라이브러리 코드 또는 다른 소스로 부터 만들어진 소스들을 하나의 실행가능한 프로그램으로 만들기 위해 묶는다.&lt;/li&gt;
  &lt;li&gt;대부분의 컴파일 된 C++ 코드는 혼자서 작동할 수 없다.&lt;/li&gt;
  &lt;li&gt;실행가능한 하나의 프로그램을 만들기 위해서는 추가적인 기계 코드가 필요하다.&lt;/li&gt;
  &lt;li&gt;이 없는 기계 코드는 이미 컴파일 되어 있고, 라이브러리 라는 저장소에 저장되어 있다.&lt;/li&gt;
  &lt;li&gt;이 링커라고 불리는 프로그램은 프로그래머가 한 컴파일 된 코드와 라이브러리 코드를 묶어 완성된 프로그램을 만든다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;debugger&quot;&gt;Debugger&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;디버거는 프로그래머가 프로그램 구현시 오류를 찾아서 수정하기 위해 프로그램의 실행을보다 쉽게 추적 할 수있게 한다.&lt;/li&gt;
  &lt;li&gt;디버거를 사용하면 개발자는 프로그램을 구동하면서 동시에 프로그램의 동작에 있어 어떤 소스코드 라인이 책임이 있는지 알 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;profiler&quot;&gt;Profiler&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;성능분석을 한다.&lt;/li&gt;
  &lt;li&gt;프로그램의 시간 복잡도를 분석한다.&lt;/li&gt;
  &lt;li&gt;함수 호출 주기, 빈도등도 분석할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 28 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>공공자전거 스테이션 최적 위치 선정 - 장려상</title>
        <link>/cv/awards/2020/09/23/2020-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%8A%A4%ED%85%8C%EC%9D%B4%EC%85%98-%EC%B5%9C%EC%A0%81-%EC%9C%84%EC%B9%98-%EC%84%A0%EC%A0%95.html</link>
        <guid isPermaLink="true">/cv/awards/2020/09/23/2020-%EA%B3%B5%EA%B3%B5%EC%9E%90%EC%A0%84%EA%B1%B0-%EC%8A%A4%ED%85%8C%EC%9D%B4%EC%85%98-%EC%B5%9C%EC%A0%81-%EC%9C%84%EC%B9%98-%EC%84%A0%EC%A0%95.html</guid>
        <description>
</description>
        <pubDate>Wed, 23 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>15: Gram Matrix</title>
        <link>/ds/dl/2020/09/18/computer-vision-15-Gram-Matrix.html</link>
        <guid isPermaLink="true">/ds/dl/2020/09/18/computer-vision-15-Gram-Matrix.html</guid>
        <description>&lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;

&lt;p&gt;style transfer에서는 input의 style을 target의 style과 맞게 만들어주는 방법이 필요한데, 이에 대한 방법론의 핵심을 담당하는 Gram Matrix에 대해 알아본다.&lt;/p&gt;

&lt;h1 id=&quot;수식&quot;&gt;수식&lt;/h1&gt;

&lt;p&gt;먼저, 논문에서 제안하고 있는 Gram Matrix의 형태는 다음과 같다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;G^l_{cd} = \frac{\sum_{ij} F^l_{ijc}(x)F^l_{ijd}(x)}{IJ}&lt;/script&gt;

&lt;p&gt;우리는 쉬운 이해를 위해서 채널, 정규화 과정을 제거한 채로 살펴보자.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;G^l_{ij} = {\sum_{k} F^l_{ik}(x)F^l_{jk}(x)}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;l : layer&lt;/li&gt;
  &lt;li&gt;F : Filter&lt;/li&gt;
  &lt;li&gt;i, j : Filter Index&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;수식으로 들어온다면 여기까지만 읽으면 된다.&lt;/p&gt;

&lt;h1 id=&quot;의미&quot;&gt;의미&lt;/h1&gt;

&lt;p&gt;이미지 $\vec{x}$ 가 있다고 하자. 해당 벡터는 2차원 이미지가 있을 때, 이를 1차원으로 faltten 한 것이다. 이 이미지의 크기를 M=3이라 하자.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vec{x}=[x_0, x_1, x_2]&lt;/script&gt;

&lt;p&gt;각 이미지가 통과하는 필터(M=2)가 2개 있다고 하자. 해당 필터는 $F$로 표기한다. 각각의 filter에 image를 통과시킨 결과를 $\vec{F}$라 하자.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\mathbf{F} =
\begin{bmatrix}
   F_1(x_0) &amp; F_1(x_1) &amp; F_1(x_2) \\
   F_2(x_0) &amp; F_2(x_1) &amp; F_2(x_2)
\end{bmatrix} %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F_{ik} = F_i(x_k)&lt;/script&gt;

&lt;p&gt;$F_{ik}$는 $F_i$ 필터에 $x_k$ 픽셀을 넣었을 때의 activation(response)이다. 그렇다면 Gram Matrix의 의미가 무엇인지 알아보자. 일단&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
   G^l_{ij}
   &amp;=
   \sum_{\text{all term}}
   \begin{bmatrix}
      F_{00}F_{00} + F_{01}F_{01} + F_{11}F_{11} &amp; F_{00}F_{10} + F_{01}F_{11} + F_{02}F_{12} \\
      F_{10}F_{00} + F_{10}F_{01} + F_{12}F_{02} &amp; F_{10}F_{10} + F_{11}F_{11} + F_{12}F_{12}
   \end{bmatrix}
   \\

   &amp;=
   \sum_{\text{all term}} \sum_k
   \begin{bmatrix}
      {F_{0k}}^2 &amp; F_{0k}F_{1k} \\
      F_{0k}F_{1k} &amp; {F_{0k}}^2
   \end{bmatrix}
\end{align} %]]&gt;&lt;/script&gt;

&lt;p&gt;어디서 많이 본 모양이다. pixel별 filter activation의 Covariance이다! 결과적으로 발생하는 모든 항을 더하게되면 다음의 의미이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pixel의 filter activation들에 대한 covariance 모든 항의 합&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이렇게 발생한 값을 가지고 input의 filter가 원하는 target filter의 gram matrix 값과 같도록 학습을 진행한다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;E_{l}= {1\over4{N_e}^2{M_e}^2}\sum_{ij}(G_{ij}^l - \hat{G_{ij}^l})^2&lt;/script&gt;

&lt;p&gt;최종적으로는 밀도로 나누어서 사용해야 한다.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://m.blog.naver.com/PostView.nhn?blogId=atelierjpro&amp;amp;logNo=221180412283&amp;amp;proxyReferer=https:%2F%2Fwww.google.com%2F&quot;&gt;Gram Matrix 설명&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>01: </title>
        <link>/book/finance/2020/09/16/%EA%B8%88%EC%9C%B5-%EC%B1%85-01.html</link>
        <guid isPermaLink="true">/book/finance/2020/09/16/%EA%B8%88%EC%9C%B5-%EC%B1%85-01.html</guid>
        <description>&lt;h1 id=&quot;배경단상&quot;&gt;배경/단상&lt;/h1&gt;

&lt;h1 id=&quot;줄거리-주요-내용-요약&quot;&gt;줄거리/ 주요 내용 요약&lt;/h1&gt;

&lt;h1 id=&quot;발췌-및-해석&quot;&gt;발췌 및 해석&lt;/h1&gt;

&lt;h1 id=&quot;전체-느낌추천-대상추천-이유&quot;&gt;전체 느낌/추천 대상/추천 이유&lt;/h1&gt;
</description>
        <pubDate>Wed, 16 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>05: 산업 생산 지수</title>
        <link>/book/finance/2020/09/16/%EA%B8%88%EC%9C%B5-%EC%9A%A9%EC%96%B4-%EC%9D%B4%ED%95%B4-05-%EC%82%B0%EC%97%85%EC%83%9D%EC%82%B0%EC%A7%80%EC%88%98.html</link>
        <guid isPermaLink="true">/book/finance/2020/09/16/%EA%B8%88%EC%9C%B5-%EC%9A%A9%EC%96%B4-%EC%9D%B4%ED%95%B4-05-%EC%82%B0%EC%97%85%EC%83%9D%EC%82%B0%EC%A7%80%EC%88%98.html</guid>
        <description>&lt;h1 id=&quot;경제성장률의-단점&quot;&gt;경제성장률의 단점&lt;/h1&gt;

&lt;p&gt;지금까지 배운 내용을 바탕으로 문제를 하나 내보자. 지금 현재까지 대한민국의 물질적 부가 얼마나 증가하고 있는지 궁금할 때 우리는 무엇을 해야 할까? 너무나 쉬운 질문이다. 대한민국의 물질적부가 얼마나 증가했는지 말해주는 경제성장률을 보면 된다.&lt;/p&gt;

&lt;p&gt;하지만 문제가 그렇게 간단하지 않다. 경제성장률은 3개월에 한번씩 발표가 된다는 치명적인 단점을 가지고 있다. 따라서 경제성장률을 이용해서는 당장의 궁금증을 해결할 수가 없다. 물론 3개월만 기다리면 되지만 우리는 매달 대한민국의 물질적부를 확인하고 싶다.&lt;/p&gt;

&lt;p&gt;뭔가 획기적인 방법이 없는 것일까? 바로 이때 우리가 이용할 수 있는 것이 산업생산지수이다.&lt;/p&gt;

&lt;h1 id=&quot;산업생산지수&quot;&gt;산업생산지수&lt;/h1&gt;

&lt;p&gt;산업생산지수는 대한민국 공장에서 각종 물건이 과거에 비해 얼마나 많이 생산되고 있는지 조사를 한 것이다.&lt;/p&gt;

&lt;p&gt;만약 산업생산지수가 팍팍 증가하고 있다면 공장에서 각종 물건이 과거에 비해 팍팍 생산되고 있다는 이야기가 된다. 그리고 만약 산업생산지수가 팍팍 줄어들고 있다면 공장이 과거에 비해 잘 돌아가지 않고 있다는 이야기이다.&lt;/p&gt;

&lt;p&gt;산업생산지수는 크게 봐서 광공업생산지수, 서비스업생산지수, 건설업생산지수, 공공행정활동지수, 농림어업생산지수와 이들을 종합한 전산업생산지수로 나누어진다.&lt;/p&gt;

&lt;p&gt;하지만 이 많은 지수가 똑같은 사랑을 받는 것은 아니다. 여러 가지 세부 지수 중에서 가장 큰 관심을 받는 것은 광공업생산지수이다. 쉽게 말해서 대한민국 광산에서, 공장에서, 발전소에서 얼마나 많은 물건과 전기가 생산되었는지 조사한 광공업생산지수가 세상 사람들의 특별한 사랑을 받고 있다는 이야기다.&lt;/p&gt;

&lt;p&gt;광공업생산지수가 사랑을 받는 이유는 쉽게 짐작할 수 있다. 한 나라의 물질적 부를 생산하는 가장 근원적인 장소가 바로 공장이기 때문이다.&lt;/p&gt;

&lt;h2 id=&quot;산업생산지수의-종류&quot;&gt;산업생산지수의 종류&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;전산업생산지수
    &lt;ul&gt;
      &lt;li&gt;‘전산업’이라는 말이 상징하듯이 농업·어업, 광업, 제조업, 전기·가스업, 건설업, 서비스업 등의 생산량을 모두 조사 한 것이 전산업생산지수이다. 전산업생산지수는 다시 농림어업생산지수, 광공업생산지수, 건설업생산지수, 서비스업생산지수, 공공행정활동지수로 나누어진다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;광공업생산지수
    &lt;ul&gt;
      &lt;li&gt;광업, 제조업, 전기·가스업의 생산량을 조사한 것이 광공업생산지수이다. 특별한 수식어 없이 신문이나 방송에서 ‘산업생산지수’라는 말을 사용하면 ‘광공업생산지수’를 말하는 것이라고 생각하면 된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제조업생산지수
    &lt;ul&gt;
      &lt;li&gt;제조업체의 생산량을 조사한 것이 제조업생산지수이다. 전산업생산지수의 엑기스가 광공업생산지수라면, 광공업생산지수의 엑기스는 제조업생산지수라고 할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://ecodemy.cafe24.com/20131017.jpg&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;산업생산지수&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;그런데 산업생산지수의 자태가 그렇게 화려하지 만은 않다. 우리가 기대했던 화려한 자태는 온데 간데없고 끝없이 위로 올라만 가고 있다.&lt;/p&gt;

&lt;p&gt;산업생산지수가 이렇게 끝없이 승천하는 이유는 간단하다. 긴 시간의 흐름에서 보면 대한민국의 물질적 부가 끝없이 증가하기 때문이다. GDP가 계속해서 상승하는 것과 비슷한 논리이다.&lt;/p&gt;

&lt;p&gt;물론 단기적인 관점에서 보면 지난달보다 이번 달이 먹고 살기 팍팍할 수는 있다. 하지만 분명한 사실이 있다. 오늘 우리는 과거 어느 때보다 물질적으로 풍요한 삶을 살고 있다는 사실이다. 그리고 10년 뒤에는 오늘보다 더 풍요로운 삶을 살고 있을 것이라는 사실이다.&lt;/p&gt;

&lt;p&gt;따라서 공장에서 나오는 각종 물건의 생산량을 조사한 산업생산지수는 끝없이 고공승천을 할 수밖에 없는 것이다.&lt;/p&gt;

&lt;h2 id=&quot;산업생산지수-전년동월비&quot;&gt;산업생산지수 전년동월비&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2317764358B691E634&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;산업생산지수 전년동월비&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;9월의 자동차 생산량이 얼마나 증가 했는지 궁금할 때 우리는 8월과 비교를 해서는 안 된다. 8월에는 휴가를 떠나는 사람들이 많은 관계로 아무래도 생산량이 작을 수밖에 없다. 따라서 9월 자동차 생산증가율이 궁금하다면 작년 9월과 비교를 해야 한다. 이렇게 작년 같은 달과 비교하는 것을 가리켜 전년동월비라 한다.&lt;/p&gt;

&lt;p&gt;산업생산지수 역시 마찬가지이다. 대한민국 공장에서 생산되는 각종 물건이 얼마나 증가했는지 제대로 알고 싶다면 작년 같은 달과 비교를 해야 한다. 이같은 원리를 이용해 산업생산지수를 전년동월비로 바꾼 것이 위의 그래프이다.&lt;/p&gt;

&lt;p&gt;이렇게 전년동월비로 바꾸고 나니 산업생산지수 그 자체를 보았을 때는 쉽게 눈에 들어오지 않던 대한민국 경제의 파란만장했던 삶이 한 눈에 들어 온다. 경제 성장률과 비슷한 양상을 보여주고 있다.&lt;/p&gt;

&lt;h1 id=&quot;세계각국의-산업생산지수&quot;&gt;세계각국의 산업생산지수&lt;/h1&gt;

&lt;p&gt;산업생산지수는 수많은 경제지표 중에서 가장 기본이 되는 경제지표이다. 즉, 미국경제나 유럽경제가 얼마나 잘 나가고 있는지 알고 싶을 때 수많은 경제지표 가운데 제일 먼저 체크해야 할 것이 산업생산지수이다.&lt;/p&gt;

&lt;p&gt;산업생산지수만 살펴보면 그 나라의 물질적 부가 얼마나 증가하고 있는지 단번에 알 수 있기 때문이다.&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>04: 경제 성장률</title>
        <link>/book/finance/2020/09/16/%EA%B8%88%EC%9C%B5-%EC%9A%A9%EC%96%B4-%EC%9D%B4%ED%95%B4-04-%EA%B2%BD%EC%A0%9C%EC%84%B1%EC%9E%A5%EB%A5%A0.html</link>
        <guid isPermaLink="true">/book/finance/2020/09/16/%EA%B8%88%EC%9C%B5-%EC%9A%A9%EC%96%B4-%EC%9D%B4%ED%95%B4-04-%EA%B2%BD%EC%A0%9C%EC%84%B1%EC%9E%A5%EB%A5%A0.html</guid>
        <description>&lt;h1 id=&quot;경제-성장률&quot;&gt;경제 성장률&lt;/h1&gt;

&lt;p&gt;열일의 이유가 무엇일까? 당연하다. 오늘 하면 내일은 좀 더 받지 않을까? 이 생각이다. GDP 역시 마찬가지다. 대한민국에서 향유하는 물질적 부가 늘어나기를 바란다. 점점 부자가 되길 바라는 것.&lt;/p&gt;

&lt;p&gt;올해 대한민국의 GDP가 1000조였다면 내년엔 무조건 1000조를 넘어서야 한다. 내년에도 GDP가 1000조라면 대한민국의 물질적부가 전혀 증가하지 않았다는 이야기다. 1년동안 신나게 일했는데 월급이 한 푼도 오르지 않는 김 빠지는 상황인 것이다.&lt;/p&gt;

&lt;p&gt;만약 GDP가 1000조 보다 작아졌다면 너무나 끔찍합니다. 대한민국의 물질적부가 줄어든 것이기 때문입니다. 1년동안 뼈 빠지게 일했는데 월급이 깎인 것.(~~하~~)&lt;/p&gt;

&lt;p&gt;월급이 얼마냐도 중요하지만(GDP), 월급인상률도 무척이나 중요한 것처럼 GDP도 지난해보다 얼마나 커졌는가 따져보는 것(경제성장률)이 너무나 중요합니다. 그래서 등장한 개념이 경제성장률이다. 우리나라의 물질적 부가 얼마나 커졌는가를 측정한 것이 바로 경제성장률인 것이다.&lt;/p&gt;

&lt;p&gt;경제성장률을 계산하는 공식은 간단하다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{경제성장률} = {\text{금년실질GDP} - \text{전년실질GDP} \over{\text{전년실질GDP}} }\times 100&lt;/script&gt;

&lt;p&gt;예를 들어 지난해의 GDP가 1000조 였는데 올해의 GDP가 1100조라면 경제성장률은 10%가 된다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{10}\% = {\text{1100조} - \text{1000조} \over{\text{1000조}} }\times 100&lt;/script&gt;

&lt;p&gt;경제성장률 10%가 무엇을 뜻하는지 가슴에 와 닿지 않는다면 ‘대한민국 모든 국민의 월급이 10%씩 올랐다’고 생각하면 된다.&lt;/p&gt;

&lt;h1 id=&quot;전년동기비-성장률과-전기비-성장률&quot;&gt;전년동기비 성장률과 전기비 성장률&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://ecodemy.cafe24.com/yoy.jpg&quot; alt=&quot;&quot; class=&quot;center&quot; width=&quot;100%&quot; /&gt;&lt;em&gt;전년동기비 성장률과 전기비 성장률&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;전년동기비-성장률&quot;&gt;전년동기비 성장률&lt;/h2&gt;

&lt;p&gt;경제가 작년 같은기간보다 얼마나 성장했는지 따져 보는 것이 전년동기비 성장률이다. 예를 들어, 올해 1분기(1월~3월)에 생산된 대한민국의 물질적부가 작년 1분기에 생산된 물질적 부보다 얼마나 증가했는지 조사한 것이 전년동기비 성장률이다.&lt;/p&gt;

&lt;h2 id=&quot;전기비성장률&quot;&gt;전기비성장률&lt;/h2&gt;

&lt;p&gt;경제가 직전 분기보다 얼마나 성장했는지 따져 보는 것이 전기비 성장률이다. 예를 들면, 올해 2분기(4월~6월)에 생산된 물질적 부가 올해 1분기(1월~3월)에 생산된 물질적 부보다 얼마나 증가했는지 조사한 것이 전기비 성장률이다.&lt;/p&gt;

&lt;h2 id=&quot;전년동기비-성장률과-전기비-성장률-1&quot;&gt;전년동기비 성장률과 전기비 성장률&lt;/h2&gt;

&lt;p&gt;경제성장률 그래프를 가만히 보고 있으면 재미있는 사실을 하나 발견할 수 있습니다. 예를 들어 1998년~1999년 부분을 자세히 한번 보십시요.&lt;/p&gt;

&lt;p&gt;추락하던 경제가 다시 좋아질 때 전년동기비 성장률보다 전기비 성장률이 먼저 방향을 틀고 있다는 사실을 우리는 쉽게 발견할 수 있다. 이 같은 일은 1999년에도 일어난다. 잘나가던 경제가 추락을 시작할 때 전년동기비 성장률보다 전기비 성장률이 먼저 하락을 시작한다. 사실 이는 당연한 것이, 방향을 튼다면 바로 앞에 있는 지표가 먼저 방향을 틀기 때문이다.&lt;/p&gt;

&lt;p&gt;그래서 경제가 어느 방향으로 튈지 알고 싶을때는 전년동기비 성장률보다 전기비 성장률이 더 영양가 있다.&lt;/p&gt;

&lt;p&gt;그렇다면 전년동기비 성장률은 아무 영영가 없는 것일까요? 그것은 아닙니다. 전년동기비 성장률을 통해서 우리는 대한민국 경제가 그동안 어떤 길을 걸어 왔는지 쉽게 알수 있다. 전기비성장률을 보면 눈만 아플 뿐 대한민국 경제의 발자취를 살펴보는것이 쉽지 않지만, 전년동기비 성장률은 한눈에 알 수 있다.&lt;/p&gt;

&lt;p&gt;그래서 많은 분들이 이런 말을 한다. 변화의 방향을 읽을 때는 전기비 성장률이 좋고, 변화의 폭을 볼 때는 전년동기비 성장률이 좋다고 말이다.&lt;/p&gt;

&lt;h1 id=&quot;경제성장기여도&quot;&gt;경제성장기여도&lt;/h1&gt;

&lt;p&gt;집 앞에 있는 짜장면집의 매출액이 2% 늘었다고 하자.&lt;/p&gt;

&lt;p&gt;이때 매출액이 2% 늘었다고 짜장면, 짬뽕, 팔보채의 매출이 모두 2%씩 늘어난 것은 아닙니다. 그 중에는 매출이 10%, 20% 늘어나 평균을 웃 돈 메뉴가 있는가 하면 매출이 줄어들어 오히려 평균을 까먹은 메뉴도 있다.&lt;/p&gt;

&lt;p&gt;경제성장률도 마찬가지이다. 지난해 경제성장률이 3%라고 온 세상 사람들이 대한민국의 경제발전에 딱 3%씩 공헌을 한 것은 아니다. 즉 대한민국 소비자, 기업, 정부, 그리고 해외의 소비자가 대한민국 경제에 기여한 정도는 다르기 마련이다.&lt;/p&gt;

&lt;p&gt;그래서 나온 것이 경제성장기여도 이다. 경제성장기여도는 소비자, 기업, 정부, 해외 소비자가 우리나라의 경제성장에 얼마나 기여를 했는지 조사를 한 것이다.&lt;/p&gt;

&lt;p&gt;경제성장기여도를 표시하는 방법은 간단하다. 경제성장율이 3%라면 소비자의 경제성장기여도는 0.5%포인트, 기업의 경제성장기여도는 1%포인트, 정부의 경제성장 기여도는 1%포인트, 해외 소비자의 경제성장기여도는 1%포인트하는 식으로 표시를 힌다. 그리고 이들의 경제성장도를 모두 합치면 3%가 된다.&lt;/p&gt;

&lt;h1 id=&quot;경제성장기여율&quot;&gt;경제성장기여율&lt;/h1&gt;

&lt;p&gt;경제성장기여율은 경제성장률을 100으로 잡았을 때 각 부분이 얼마나 성장에 기여했는지 조사를 한 것이다.
예를 들어, 경제성장률이 3%라고 하자.&lt;/p&gt;

&lt;p&gt;3%의 경제성장을 이룩하는데 각 부분이 기여한 정도는 다른데, 소비자의 기여율은 20%, 기업의 기여율은 20%, 정부의 경제성장기여율은 10%, 해외 소비자의 경제성장기여율을 50% 하는 식으로 표시를 하는것이 경제성장기여율이다.&lt;/p&gt;

&lt;p&gt;이렇게 나온 경제성장기여율을 모두 합치면 100%가 된다.&lt;/p&gt;

&lt;h1 id=&quot;잠재성장력&quot;&gt;잠재성장력&lt;/h1&gt;

&lt;p&gt;직원들이 사무실 빠져나가 사우나에서 몸 풀 생각이나 하고, 공금횡령해서 뒷돈 챙길 생각만 하는 회사가 있다고 하자. 이 회사의 앞날은 너무나 뻔하다.&lt;/p&gt;

&lt;p&gt;반면 하루 24시간 ‘회사가 나를 위해 무엇을 해줄 것인가?’ 생각하기 전에, ‘내가 회사를 위해 무엇을 할 것인가?’ 생각하는 직원들만 있는 회사는 어떨까? 지금 당장은 회사 사정이 어려운 수도 있지만 장기적으로 보면 무궁한 영광과 발전이 예상된다. 멋진 직원들이 많은 만큼 회사의 성장잠재력이 크기 때문이다.&lt;/p&gt;

&lt;p&gt;경제성장 역시 마찬가지이다. 국민이 똑똑하고, 여기저기 사방팔방에 공장이 세워져 있으면 당장은 경제가 어렵더라도 언젠가는 벌떡 일어나 벅찬 내일을 향해 질주할 수 있다. 성장의 잠재력이 있기 때문이다.&lt;/p&gt;

&lt;p&gt;한 나라의 모든 생산요소(노동, 자본 등)를 정상적으로 동원해서 이룰 수 있는 성장능력을 어려운 말로 잠재성장력이라고 한다.&lt;/p&gt;

&lt;p&gt;가끔 잠재성장력 이상으로 경제성장을 이루는 경우가 있습니다. 예를 들어, 잠재성장력은 5%인데 실제 경제성장은 7%인 경우가 있다. 이 같은 경우는 정상적이라고 할 수 없다. 무언가 상식적이지 않은 활동이 있는 것. 국민이 하루 8시간 일할 것을 20시간씩 일하고, 하루 10시간 이상 돌리면 안 되는 공장을 24시간 돌려서 그와 같은 성장을 이루었다고 볼 수 있다. 당장의 성장률은 높아서 좋을지 몰라도 장기적으로는 피해가 심각하다. 사람도, 기계도 골병이 나게 된다.&lt;/p&gt;

&lt;p&gt;경기가 어려울 때면 ‘잠재성장력이 낮아지고 있다’는 기사가 자주 나온다. 당장 돈이 없으니 투자를 할 수 없고, 국민도 먹고 살기 어렵다보니 자기계발에 대한 지출을 줄이게 돼 국가적으로 경쟁력이 낮아지게 된다. 이 같은 일이 계속된다면 몇 년 뒤에는 경제성장을 하고 싶어도 기술이 없어서, 쓸 만한 인재가 없어서 경제성장을 하지 못하는 상황이 닥칠 수도 있다.&lt;/p&gt;

&lt;h1 id=&quot;요소투입주도-경제성장&quot;&gt;요소투입주도 경제성장&lt;/h1&gt;

&lt;p&gt;이성를 꼬시는 방법에는 크게 보아서 두 가지 방법이 있다.
그 하나는 24시간 내내 쫄쫄 따라다니고, 선물을 퍼 붇는 물량 공세이고, 나머지 하나는 결정적인 순간에 한방에 넘어뜨리는 방법이다.&lt;/p&gt;

&lt;p&gt;앞의 방법은 성공하면 다행이지만 실패하면 정신적으로, 물질적으로 손해가 막급하고, 지극히 생산성이 낮지만,
후자는 실패하면 시간 버린셈 치고, 미친놈 취급당하면 그만이지만 생산성은 상당히 높은 방법이다.&lt;/p&gt;

&lt;p&gt;한나라의 경제성장도 똑같다.
막 퍼부어서 경제를 일으키는 방법이 있고, 적당히 퍼붓지만 생산성을 높여서 경제를 일으키는 방법이 있다.&lt;/p&gt;

&lt;p&gt;요소투입주도 경제성장이란, 생산성에는 관심을 두지 않고 일단 퍼 부어 놓으면 언젠가는 돈이 되고, 떡이 되어 나온다는 논리이다. 이제 막 일부의 외국인들이 한국의 경제성장이 가장 대표적인 요소투입주도 경제성장이라고 합니다. 과거의 대한민국은 그랬다.&lt;/p&gt;

&lt;p&gt;처음에는 퍼부우니까 떡이 나왔는데 지금은 구멍이 막혀서 아무것도 나오지 않게 되었고, 결국 그러다가 요모양 요꼬라지가 되었다는 이야기이다.&lt;/p&gt;

&lt;p&gt;이제는 막힌 구멍을 뚫어야 하고, 퍼붓기가 아니라 생산성, 즉 투입이 아니라 산출에 신경을 쓰야 한다고 이야기 한다.&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
  </channel>
</rss>
